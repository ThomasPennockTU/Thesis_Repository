# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2023 replay file
# Internal Version: 2023_03_20-20.15.03 RELr425 183417
# Run by tpennock on Wed May 21 10:35:52 2025
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=532.666687011719, 
    height=243.115371704102)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('First delta flume.cae')
#: The model database "D:\tpennock\GitHub\Thesis_Repository\1.2-9 Block Flume pull test\First delta flume.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].setValues(displayedObject=None)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
o3 = session.openOdb(
    name='D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-2.odb')
#: Model: D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-2.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     13
#: Number of Meshes:             14
#: Number of Element Sets:       0
#: Number of Node Sets:          4
#: Number of Steps:              2
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-2.odb'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.8069, 
    farPlane=83.9143, width=49.8339, height=17.311, cameraPosition=(67.6801, 
    40.3687, -8.77209), cameraUpVector=(-0.811214, 0.57735, 0.0927314), 
    cameraTarget=(14.5814, 2.57775, -2.70228))
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.8055, 
    farPlane=80.9157, width=12.2716, height=4.26283, viewOffsetX=0.133336, 
    viewOffsetY=-2.78938)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
o3 = session.openOdb(
    name='D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb')
#: Model: D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     13
#: Number of Meshes:             14
#: Number of Element Sets:       0
#: Number of Node Sets:          4
#: Number of Steps:              2
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.529, 
    farPlane=84.039, width=49.5442, height=17.2104, cameraPosition=(66.6217, 
    40.3687, 9.46829), cameraUpVector=(-0.795044, 0.57735, -0.185935), 
    cameraTarget=(14.5814, 2.57775, -2.70228))
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.7783, 
    farPlane=80.7898, width=9.00027, height=3.12647, viewOffsetX=1.82106, 
    viewOffsetY=-2.87439)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].view.setValues(nearPlane=879.721, 
    farPlane=1352.03, width=14.7974, height=5.14025, viewOffsetX=-45.4944, 
    viewOffsetY=102.148)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
session.viewports['Viewport: 1'].view.setValues(nearPlane=961.268, 
    farPlane=1360.58, width=13.4038, height=4.65614, viewOffsetX=-47.4708, 
    viewOffsetY=113.153)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    UNDEFORMED, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.4498, 
    farPlane=80.7399, width=4.38504, height=1.52325, viewOffsetX=1.32164, 
    viewOffsetY=-2.80831)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Gravity')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=OFF, 
    constraints=OFF, connectors=OFF, engineeringFeatures=OFF, 
    adaptiveMeshConstraints=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Loading')
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb'])
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
xyList = xyPlot.XYDataFromFreeBody(odb=odb, force=ON, moment=OFF, 
    heatFlowRate=OFF, resultant=ON, comp1=OFF, comp2=OFF, comp3=OFF)
xyp = session.XYPlot('XYPlot-1')
chartName = xyp.charts.keys()[0]
chart = xyp.charts[chartName]
curveList = session.curveSet(xyData=xyList)
chart.setValues(curvesToPlot=curveList)
session.charts[chartName].autoColor(lines=True, symbols=True)
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
#* No free body XY data was extracted using the provided options.
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
xyList = xyPlot.xyDataListFromField(odb=odb, outputPosition=NODAL, variable=((
    'CPRESS     General_Contact_Domain', NODAL), ), nodePick=((
    'BLOCK-2-LIN-1-5-LIN-11-1', 1, ('[#0:3 #400000 ]', )), ), )
xyp = session.XYPlot('XYPlot-1')
chartName = xyp.charts.keys()[0]
chart = xyp.charts[chartName]
curveList = session.curveSet(xyData=xyList)
chart.setValues(curvesToPlot=curveList)
session.charts[chartName].autoColor(lines=True, symbols=True)
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    UNDEFORMED, ))
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
xyList = xyPlot.xyDataListFromField(odb=odb, outputPosition=NODAL, variable=((
    'CPRESS     General_Contact_Domain', NODAL), ), nodePick=((
    'BLOCK-2-LIN-1-8-LIN-2-1-LIN-LIN-10-1-3', 1, ('[#0:3 #20000 ]', )), ), )
xyp = session.xyPlots['XYPlot-1']
chartName = xyp.charts.keys()[0]
chart = xyp.charts[chartName]
curveList = session.curveSet(xyData=xyList)
chart.setValues(curvesToPlot=curveList)
session.charts[chartName].autoColor(lines=True, symbols=True)
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    UNDEFORMED, ))
leaf = dgo.LeafFromPartInstance(partInstanceName=("BLOCK-2-LIN-1-3-LIN-11-1", 
    ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("BLOCK-2-LIN-1-4-LIN-11-1", 
    ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("BLOCK-2-LIN-1-5-LIN-11-1", 
    ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
xyList = xyPlot.xyDataListFromField(odb=odb, outputPosition=NODAL, variable=((
    'CPRESS     General_Contact_Domain', NODAL), ), nodePick=((
    'BLOCK-2-LIN-1-8-LIN-2-1-LIN-LIN-10-1-4', 1, ('[#0 #1 ]', )), ), )
xyp = session.xyPlots['XYPlot-1']
chartName = xyp.charts.keys()[0]
chart = xyp.charts[chartName]
curveList = session.curveSet(xyData=xyList)
chart.setValues(curvesToPlot=curveList)
session.charts[chartName].autoColor(lines=True, symbols=True)
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'SVAVG', 'PE', 'PEVAVG', 'PEEQ', 'PEEQVAVG', 'LE', 'U', 'V', 'A', 
    'RF', 'BF', 'P', 'CSTRESS', 'CFORCE', 'EVF'))
mdb.models['Model-1'].fieldOutputRequests['F-Output-2'].setValuesInStep(
    stepName='Loading', variables=('S', 'SVAVG', 'PE', 'PEVAVG', 'PEEQ', 
    'PEEQVAVG', 'LE', 'U', 'V', 'A', 'RF', 'BF', 'P', 'CSTRESS', 'CFORCE', 
    'EVF'))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
#: The job input file "Job-1.inp" has been submitted for analysis.
#: Job Job-1: Analysis Input File Processor completed successfully.
#: Job Job-1: Abaqus/Explicit Packager completed successfully.
#: Job Job-1: Abaqus/Explicit completed successfully.
#: Job Job-1 completed successfully. 
o3 = session.openOdb(
    name='D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb')
#: Model: D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     13
#: Number of Meshes:             14
#: Number of Element Sets:       0
#: Number of Node Sets:          4
#: Number of Steps:              2
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.511, 
    farPlane=84.047, width=49.5254, height=17.2039, cameraPosition=(66.458, 
    40.3687, 10.1482), cameraUpVector=(-0.792543, 0.57735, -0.196323), 
    cameraTarget=(14.5814, 2.57775, -2.70228))
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.7483, 
    farPlane=83.7493, width=49.7729, height=17.2898, cameraPosition=(66.4839, 
    40.3687, 9.88983), cameraTarget=(14.6073, 2.57775, -2.96065))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.1483, 
    farPlane=82.3493, width=29.0623, height=10.0955, viewOffsetX=1.45843, 
    viewOffsetY=-2.59521)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].view.setValues(nearPlane=880.577, 
    farPlane=1353.28, width=16.5818, height=5.76009, viewOffsetX=-47.6693, 
    viewOffsetY=101.341)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
session.viewports['Viewport: 1'].view.setValues(nearPlane=963.037, 
    farPlane=1360.71, width=3.98507, height=1.38431, viewOffsetX=-52.8565, 
    viewOffsetY=112.336)
leaf = dgo.LeafFromPartInstance(partInstanceName=("BLOCK-2-LIN-1-4-LIN-11-1", 
    ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
xyList = xyPlot.xyDataListFromField(odb=odb, outputPosition=ELEMENT_FACE, 
    variable=(('P', ELEMENT_FACE), ), elementPick=((
    'BLOCK-2-LIN-1-8-LIN-2-1-LIN-LIN-10-1-4', 1, ('[#0:2 #40 ]', )), ), )
xyp = session.xyPlots['XYPlot-1']
chartName = xyp.charts.keys()[0]
chart = xyp.charts[chartName]
curveList = session.curveSet(xyData=xyList)
chart.setValues(curvesToPlot=curveList)
session.charts[chartName].autoColor(lines=True, symbols=True)
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
#* VisError: No xy data was extracted using the provided options.
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
xyList = xyPlot.xyDataListFromField(odb=odb, outputPosition=NODAL, variable=((
    'CNORMF   General_Contact_Domain', NODAL), ), nodePick=((
    'BLOCK-2-LIN-1-8-LIN-2-1-LIN-LIN-10-1-4', 1, ('[#0:5 #2 ]', )), ), )
xyp = session.xyPlots['XYPlot-1']
chartName = xyp.charts.keys()[0]
chart = xyp.charts[chartName]
curveList = session.curveSet(xyData=xyList)
chart.setValues(curvesToPlot=curveList)
session.charts[chartName].autoColor(lines=True, symbols=True)
session.viewports['Viewport: 1'].setValues(displayedObject=xyp)
odb = session.odbs['D:/tpennock/GitHub/Thesis_Repository/1.2-9 Block Flume pull test/Job-1.odb']
session.viewports['Viewport: 1'].setValues(displayedObject=odb)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    UNDEFORMED, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1301.28, 
    farPlane=1330.34, width=2.70221, height=0.938678, viewOffsetX=-71.688, 
    viewOffsetY=151.853)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.animationOptions.setValues(frameRate=4)
session.viewports['Viewport: 1'].view.setValues(nearPlane=1300.92, 
    farPlane=1330.72, width=6.52085, height=2.26518, viewOffsetX=-70.3757, 
    viewOffsetY=151.891)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
mdb.save()
#: The model database has been saved to "D:\tpennock\GitHub\Thesis_Repository\1.2-9 Block Flume pull test\First delta flume.cae".
