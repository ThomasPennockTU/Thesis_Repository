# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(40.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(40.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    40.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, 0.0), point2=(
    40.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, 30.0), point2=
    (0.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 30.0), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].EqualLengthConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].EqualLengthConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    53.095573425293, 13.0874052047729), value=500.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[7], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[8])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    41.0933837890625, 9.17947483062744), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[7], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[8])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Block', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Block'].BaseSolidExtrude(depth=0.15, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    75.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(75.0, 0.0), point2=(
    75.0, 57.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(75.0, 57.5), point2=
    (62.5, 57.5))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(62.5, 57.5), point2=
    (0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(24.4565217391306, 
    22.5))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(37.5, 34.5))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(24.4565217391306, 
    22.5), point2=(37.5, 34.5))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(37.5, 34.5), point2=
    (39.3399999998534, 32.5))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(39.3399999998534, 
    32.5), point2=(26.25, 20.4572000013659))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(26.25, 
    20.4572000013659), point2=(24.4565217391306, 22.5))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    24.4565217391306, 22.5))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(26.25, 
    20.4572000013659))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(39.3399999998534, 
    32.5))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[15], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(62.5, 57.5))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[16], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(75.0, 57.5))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[17], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(75.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[18], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[4]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    75.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(75.0, 0.0), point2=(
    75.0, 57.5))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(75.0, 57.5), point2=
    (62.5, 57.5))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(62.5, 57.5), point2=
    (37.5, 34.5))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(37.5, 34.5), point2=
    (39.3399999998534, 32.5))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(39.3399999998534, 
    32.5), point2=(26.25, 20.4572000013659))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(26.25, 
    20.4572000013659), point2=(24.4565217391306, 22.5))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(24.4565217391306, 
    22.5), point2=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    32.5803375244141, -19.3844833374023), value=26.9, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[19], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[20])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    95.0833129882812, 17.7961921691895), value=8.3, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[21], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[22])
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[18], points=((75.0, 
    49.2), (75.0, 48.75), (76.25, 36.25), (76.25, 31.25), (76.25, 21.25), (
    75.0, 6.25), (72.5, 2.5), (68.75, 1.25), (67.5, 0.0), (67.5, 0.0)))
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[16], points=((
    9.02173913043478, 8.3), (8.75, 8.75), (31.25, 16.25), (42.5, 21.25), (
    46.25, 22.5), (50.0, 23.75), (52.5, 23.75), (56.25, 25.0), (56.25, 25.0), (
    56.25, 25.0)))
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[14], points=((26.25, 
    20.4572000013659), (26.25, 20.0), (37.5, 20.0), (40.0, 20.0), (45.0, 20.0), 
    (53.75, 17.5), (52.5, 18.75), (50.0, 17.5), (48.75, 17.5)))
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4], points=((
    24.4565217391306, 22.5), (25.0, 22.5), (36.25, 22.5), (40.0, 21.25), (45.0, 
    20.0), (47.5, 18.75), (47.5, 18.75), (47.5, 18.75), (47.5, 18.75)))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    60.6900291442871, 0.0643272399902344), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[23], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[24])
mdb.models['Model-1'].sketches['__profile__'].VerticalDimension(textPoint=(
    85.8191680908203, 17.5274696350098), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalDimension(textPoint=(
    86.0354156494141, 15.8014144897461), value=-5.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13])
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], points=((
    55.0688908143891, 15.403379549238), (55.0, 15.0), (55.0, 17.5), (55.0, 
    18.0129203796387), (55.0, 16.8801975250244), (55.0, 16.25), (55.0, 15.0), (
    55.0, 13.75), (55.0, 13.75), (55.0, 13.75), (55.0, 15.0), (55.0, 16.25)))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5], points=((
    55.0688908143891, 15.403379549238), (55.0, 15.0), (55.0, 17.5), (
    54.5216979980469, 18.75), (55.0, 18.2500801086426)))
mdb.models['Model-1'].sketches['__profile__'].VerticalDimension(textPoint=(
    86.1826324462891, 17.605167388916), value=2.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4])
mdb.models['Model-1'].sketches['__profile__'].VerticalDimension(textPoint=(
    85.1368865966797, 17.9094905853271), value=5.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    45.3982353210449, 8.38857650756836), value=6.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[4])
mdb.models['Model-1'].sketches['__profile__'].HorizontalDimension(textPoint=(
    49.3198089599609, 7.51908683776855), value=16.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[13], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[5])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    71.5724792480469, 26.76123046875), value=0.15, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[27], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[28])
mdb.models['Model-1'].sketches['__profile__'].dragEntity(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[14], points=((
    46.7773625296355, 18.6010069602034), (46.7773625296355, 18.6010069602034), 
    (46.6874580383301, 18.5629577636719), (46.633186340332, 18.5358829498291), 
    (46.6603240966797, 18.5291137695312), (46.6535415649414, 18.522346496582)))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(10.5, 
    0.0), value=10.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[29], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[30])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].dimensions[6].setValues(
    textPoint=(48.75, 6.25))
mdb.models['Model-1'].sketches['__profile__'].dimensions[2].setValues(
    textPoint=(66.25, 8.75))
mdb.models['Model-1'].sketches['__profile__'].dimensions[0].setValues(
    textPoint=(58.75, 5.0))
mdb.models['Model-1'].sketches['__profile__'].dimensions[0].setValues(
    textPoint=(57.5, 3.75))
mdb.models['Model-1'].sketches['__profile__'].dimensions[4].setValues(
    textPoint=(86.25, 19.3372707366943))
mdb.models['Model-1'].sketches['__profile__'].dimensions[3].setValues(
    textPoint=(83.75, 18.1947460174561))
mdb.models['Model-1'].sketches['__profile__'].dimensions[4].setValues(
    textPoint=(85.0, 18.75))
mdb.models['Model-1'].sketches['__profile__'].dimensions[4].setValues(
    textPoint=(85.0, 18.75))
mdb.models['Model-1'].sketches['__profile__'].dimensions[3].setValues(
    textPoint=(82.5, 17.5))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    48.3269081115723, 20.589635848999), value=11.0679718106, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[29], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[30])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='dike', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['dike'].BaseSolidExtrude(depth=5.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
# Save by tpennock on 2025_04_17-10.11.27; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='dike-1', part=
    mdb.models['Model-1'].parts['dike'])
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 8.3, 
    0.0), axisPoint=(67.511216, 16.666352, 5.0), instanceList=('dike-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 8.3, 
    0.0), axisPoint=(67.511216, 16.666352, 5.0), instanceList=('dike-1', ))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Block-1', part=
    mdb.models['Model-1'].parts['Block'])
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.5, 0.0, 
    0.0), axisPoint=(0.0, 0.0, 0.15), instanceList=('Block-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('dike-1', ), vector=
    (-67.511216, -16.666352, -10.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Block-1', ), 
    vector=(20.352566, 1.857697, -0.65))
mdb.models['Model-1'].rootAssembly.rotate(angle=-34.625354951, axisDirection=(
    0.0, 0.0, 10.0), axisPoint=(20.852566, 1.857697, -5.0), instanceList=(
    'Block-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=34.625354951, axisDirection=(
    0.0, 0.0, 10.0), axisPoint=(20.852566, 1.857697, -5.0), instanceList=(
    'Block-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=18.43494882, axisDirection=(
    0.0, 0.0, -10.0), axisPoint=(20.852566, 1.857697, 0.0), instanceList=(
    'Block-1', ))
# Save by tpennock on 2025_04_17-10.34.10; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='Concrete C30/37')
mdb.models['Model-1'].materials['Concrete C30/37'].Density(table=((2300.0, ), 
    ))
mdb.models['Model-1'].materials['Concrete C30/37'].Elastic(table=((
    30000000000.0, 0.18), ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Concrete C30/37', name=
    'Section-1', thickness=None)
del mdb.models['Model-1'].sections['Section-1']
mdb.models['Model-1'].HomogeneousSolidSection(material='Concrete C30/37', name=
    'BrickSection', thickness=None)
mdb.models['Model-1'].parts['Block'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['Block'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), )), sectionName='BrickSection', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by tpennock on 2025_04_17-10.51.28; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(11.25, 15.0))
mdb.models['Model-1'].sketches['__profile__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].undo()
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(21.25, 25.0))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    11.5268707275391, -11.6666660308838), value=0.275, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    12.2780857086182, 9.38626098632812), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='HalfBlock', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['HalfBlock'].BaseSolidExtrude(depth=0.15, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['HalfBlock'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['HalfBlock'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), sectionName='BrickSection', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='HalfBlock-1', 
    part=mdb.models['Model-1'].parts['HalfBlock'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('HalfBlock-1', ), 
    vector=(-20.975, -24.5, 0.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-10.0, 
    0.0, 0.0), axisPoint=(0.275, 0.0, 0.15), instanceList=('HalfBlock-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 
    -10.0, 0.0), axisPoint=(0.275, 0.0, 0.15), instanceList=('HalfBlock-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('HalfBlock-1', ), 
    vector=(-0.275, 0.15, 0.125))
mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1'].translateTo(
    clearance=0.0, direction=(0.0, 0.0, 1.0), fixedList=(
    mdb.models['Model-1'].rootAssembly.instances['dike-1'].faces[9], ), 
    movableList=(
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1'].faces[2], ))
#* The two part instances do not touch when moved
#* along the specified direction.
mdb.models['Model-1'].Part(name='Spacer', objectToCopy=
    mdb.models['Model-1'].parts['HalfBlock'])
mdb.models['Model-1'].parts['Spacer'].DatumAxisByPrincipalAxis(principalAxis=
    YAXIS)
mdb.models['Model-1'].parts['Spacer'].features['Solid extrude-1'].setValues(
    depth=0.5)
mdb.models['Model-1'].parts['Spacer'].regenerate()
mdb.models['Model-1'].parts['Spacer'].features['Solid extrude-1'].setValues(
    depth=0.05)
mdb.models['Model-1'].parts['Spacer'].regenerate()
mdb.models['Model-1'].parts['Spacer'].regenerate()
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Spacer-1', 
    part=mdb.models['Model-1'].parts['Spacer'])
mdb.models['Model-1'].rootAssembly.instances['Spacer-1'].translate(vector=(0.0, 
    0.0, 0.0))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(0.0, 0.0, 
    -0.025), axisPoint=(21.25, 24.5, 0.025), instanceList=('Spacer-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Spacer-1', ), 
    vector=(-21.25, -24.5, 0.275))
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Block-2', part=
    mdb.models['Model-1'].parts['Block'])
mdb.models['Model-1'].rootAssembly.instances['Block-2'].translate(vector=(
    29.639999957383, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Block-2', ), 
    vector=(-29.64, 0.0, 0.325))
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-10.0, 
    0.0, 0.0), axisPoint=(0.5, 0.0, 0.475), instanceList=('Block-2', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Block-2', ), 
    vector=(0.0, 0.15, 0.35))
del mdb.models['Model-1'].rootAssembly.features['Spacer-1']
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 0.0, 1.0), instanceList=('Block-2', ), number1=1, 
    number2=8, spacing1=0.5, spacing2=0.55)
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, -1.0, 0.0), instanceList=('HalfBlock-1', ), number1=
    1, number2=2, spacing1=0.5, spacing2=0.15)
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2', ), vector=(0.0, 0.15, 4.675))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2', ), vector=(0.0, 0.0, 0.05))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, -1.0, 0.0), instanceList=('Block-2-lin-1-8', ), 
    number1=2, number2=1, spacing1=0.5, spacing2=0.15)
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1', ), vector=(0.0, 0.0, 0.325))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1', ), vector=(0.0, 0.0, -0.05))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 0.0, -1.0), instanceList=('Block-2-lin-1-8-lin-2-1', 
    ), number1=1, number2=9, spacing1=0.5, spacing2=0.55)
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, -1.0, 0.0), instanceList=('HalfBlock-1', 'Block-2', 
    'Block-2-lin-1-8-lin-2-1-lin-1-9', 'Block-2-lin-1-8-lin-2-1-lin-1-8', 
    'Block-2-lin-1-2', 'Block-2-lin-1-8-lin-2-1-lin-1-7', 'Block-2-lin-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-1-6', 'Block-2-lin-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-1-5', 'Block-2-lin-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-1-4', 'Block-2-lin-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-1-3', 'Block-2-lin-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-1-2', 'Block-2-lin-1-8', 
    'Block-2-lin-1-8-lin-2-1', 'HalfBlock-1-lin-1-2'), number1=11, number2=1, 
    spacing1=1.0, spacing2=0.15)
del mdb.models['Model-1'].rootAssembly.features['Block-1']
# Save by tpennock on 2025_04_17-11.59.09; build 2023 2023_03_20-20.15.03 RELr425 183417
# Save by tpennock on 2025_04_17-11.59.37; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.rotate(angle=18.43494882, axisDirection=(
    0.0, 0.0, -10.0), axisPoint=(11.0, 0.0, 4.95), instanceList=('HalfBlock-1', 
    'Block-2', 'Block-2-lin-1-2', 'Block-2-lin-1-3', 'Block-2-lin-1-4', 
    'Block-2-lin-1-5', 'Block-2-lin-1-6', 'Block-2-lin-1-7', 'Block-2-lin-1-8', 
    'HalfBlock-1-lin-1-2', 'Block-2-lin-1-8-lin-2-1', 
    'Block-2-lin-1-8-lin-2-1-lin-1-2', 'Block-2-lin-1-8-lin-2-1-lin-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-1-4', 'Block-2-lin-1-8-lin-2-1-lin-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-1-6', 'Block-2-lin-1-8-lin-2-1-lin-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-1-8', 'Block-2-lin-1-8-lin-2-1-lin-1-9', 
    'HalfBlock-1-lin-2-1', 'HalfBlock-1-lin-3-1', 'HalfBlock-1-lin-4-1', 
    'HalfBlock-1-lin-5-1', 'HalfBlock-1-lin-6-1', 'HalfBlock-1-lin-7-1', 
    'HalfBlock-1-lin-8-1', 'HalfBlock-1-lin-9-1', 'HalfBlock-1-lin-10-1', 
    'HalfBlock-1-lin-11-1', 'Block-2-lin-2-1', 'Block-2-lin-3-1', 
    'Block-2-lin-4-1', 'Block-2-lin-5-1', 'Block-2-lin-6-1', 'Block-2-lin-7-1', 
    'Block-2-lin-8-1', 'Block-2-lin-9-1', 'Block-2-lin-10-1', 
    'Block-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1', 'Block-2-lin-1-2-lin-2-1', 
    'Block-2-lin-1-2-lin-3-1', 'Block-2-lin-1-2-lin-4-1', 
    'Block-2-lin-1-2-lin-5-1', 'Block-2-lin-1-2-lin-6-1', 
    'Block-2-lin-1-2-lin-7-1', 'Block-2-lin-1-2-lin-8-1', 
    'Block-2-lin-1-2-lin-9-1', 'Block-2-lin-1-2-lin-10-1', 
    'Block-2-lin-1-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3', 'Block-2-lin-1-4-lin-2-1', 
    'Block-2-lin-1-4-lin-3-1', 'Block-2-lin-1-4-lin-4-1', 
    'Block-2-lin-1-4-lin-5-1', 'Block-2-lin-1-4-lin-6-1', 
    'Block-2-lin-1-4-lin-7-1', 'Block-2-lin-1-4-lin-8-1', 
    'Block-2-lin-1-4-lin-9-1', 'Block-2-lin-1-4-lin-10-1', 
    'Block-2-lin-1-4-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5', 'Block-2-lin-1-6-lin-2-1', 
    'Block-2-lin-1-6-lin-3-1', 'Block-2-lin-1-6-lin-4-1', 
    'Block-2-lin-1-6-lin-5-1', 'Block-2-lin-1-6-lin-6-1', 
    'Block-2-lin-1-6-lin-7-1', 'Block-2-lin-1-6-lin-8-1', 
    'Block-2-lin-1-6-lin-9-1', 'Block-2-lin-1-6-lin-10-1', 
    'Block-2-lin-1-6-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7', 'Block-2-lin-1-8-lin-2-1-1', 
    'Block-2-lin-1-8-lin-3-1', 'Block-2-lin-1-8-lin-4-1', 
    'Block-2-lin-1-8-lin-5-1', 'Block-2-lin-1-8-lin-6-1', 
    'Block-2-lin-1-8-lin-7-1', 'Block-2-lin-1-8-lin-8-1', 
    'Block-2-lin-1-8-lin-9-1', 'Block-2-lin-1-8-lin-10-1', 
    'Block-2-lin-1-8-lin-11-1', 'HalfBlock-1-lin-1-2-lin-2-1', 
    'HalfBlock-1-lin-1-2-lin-3-1', 'HalfBlock-1-lin-1-2-lin-4-1', 
    'HalfBlock-1-lin-1-2-lin-5-1', 'HalfBlock-1-lin-1-2-lin-6-1', 
    'HalfBlock-1-lin-1-2-lin-7-1', 'HalfBlock-1-lin-1-2-lin-8-1', 
    'HalfBlock-1-lin-1-2-lin-9-1', 'HalfBlock-1-lin-1-2-lin-10-1', 
    'HalfBlock-1-lin-1-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2', 'Block-2-lin-1-3-lin-2-1', 
    'Block-2-lin-1-3-lin-3-1', 'Block-2-lin-1-3-lin-4-1', 
    'Block-2-lin-1-3-lin-5-1', 'Block-2-lin-1-3-lin-6-1', 
    'Block-2-lin-1-3-lin-7-1', 'Block-2-lin-1-3-lin-8-1', 
    'Block-2-lin-1-3-lin-9-1', 'Block-2-lin-1-3-lin-10-1', 
    'Block-2-lin-1-3-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-2-1', 'Block-2-lin-1-8-lin-2-1-lin-3-1', 
    'Block-2-lin-1-8-lin-2-1-lin-4-1', 'Block-2-lin-1-8-lin-2-1-lin-5-1', 
    'Block-2-lin-1-8-lin-2-1-lin-6-1', 'Block-2-lin-1-8-lin-2-1-lin-7-1', 
    'Block-2-lin-1-8-lin-2-1-lin-8-1', 'Block-2-lin-1-8-lin-2-1-lin-9-1', 
    'Block-2-lin-1-8-lin-2-1-lin-10-1', 'Block-2-lin-1-8-lin-2-1-lin-11-1', 
    'Block-2-lin-1-5-lin-2-1', 'Block-2-lin-1-5-lin-3-1', 
    'Block-2-lin-1-5-lin-4-1', 'Block-2-lin-1-5-lin-5-1', 
    'Block-2-lin-1-5-lin-6-1', 'Block-2-lin-1-5-lin-7-1', 
    'Block-2-lin-1-5-lin-8-1', 'Block-2-lin-1-5-lin-9-1', 
    'Block-2-lin-1-5-lin-10-1', 'Block-2-lin-1-5-lin-11-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6', 'Block-2-lin-1-7-lin-2-1', 
    'Block-2-lin-1-7-lin-3-1', 'Block-2-lin-1-7-lin-4-1', 
    'Block-2-lin-1-7-lin-5-1', 'Block-2-lin-1-7-lin-6-1', 
    'Block-2-lin-1-7-lin-7-1', 'Block-2-lin-1-7-lin-8-1', 
    'Block-2-lin-1-7-lin-9-1', 'Block-2-lin-1-7-lin-10-1', 
    'Block-2-lin-1-7-lin-11-1'))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('HalfBlock-1', 
    'Block-2', 'Block-2-lin-1-2', 'Block-2-lin-1-3', 'Block-2-lin-1-4', 
    'Block-2-lin-1-5', 'Block-2-lin-1-6', 'Block-2-lin-1-7', 'Block-2-lin-1-8', 
    'HalfBlock-1-lin-1-2', 'Block-2-lin-1-8-lin-2-1', 
    'Block-2-lin-1-8-lin-2-1-lin-1-2', 'Block-2-lin-1-8-lin-2-1-lin-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-1-4', 'Block-2-lin-1-8-lin-2-1-lin-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-1-6', 'Block-2-lin-1-8-lin-2-1-lin-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-1-8', 'Block-2-lin-1-8-lin-2-1-lin-1-9', 
    'HalfBlock-1-lin-2-1', 'HalfBlock-1-lin-3-1', 'HalfBlock-1-lin-4-1', 
    'HalfBlock-1-lin-5-1', 'HalfBlock-1-lin-6-1', 'HalfBlock-1-lin-7-1', 
    'HalfBlock-1-lin-8-1', 'HalfBlock-1-lin-9-1', 'HalfBlock-1-lin-10-1', 
    'HalfBlock-1-lin-11-1', 'Block-2-lin-2-1', 'Block-2-lin-3-1', 
    'Block-2-lin-4-1', 'Block-2-lin-5-1', 'Block-2-lin-6-1', 'Block-2-lin-7-1', 
    'Block-2-lin-8-1', 'Block-2-lin-9-1', 'Block-2-lin-10-1', 
    'Block-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1', 'Block-2-lin-1-2-lin-2-1', 
    'Block-2-lin-1-2-lin-3-1', 'Block-2-lin-1-2-lin-4-1', 
    'Block-2-lin-1-2-lin-5-1', 'Block-2-lin-1-2-lin-6-1', 
    'Block-2-lin-1-2-lin-7-1', 'Block-2-lin-1-2-lin-8-1', 
    'Block-2-lin-1-2-lin-9-1', 'Block-2-lin-1-2-lin-10-1', 
    'Block-2-lin-1-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3', 'Block-2-lin-1-4-lin-2-1', 
    'Block-2-lin-1-4-lin-3-1', 'Block-2-lin-1-4-lin-4-1', 
    'Block-2-lin-1-4-lin-5-1', 'Block-2-lin-1-4-lin-6-1', 
    'Block-2-lin-1-4-lin-7-1', 'Block-2-lin-1-4-lin-8-1', 
    'Block-2-lin-1-4-lin-9-1', 'Block-2-lin-1-4-lin-10-1', 
    'Block-2-lin-1-4-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5', 'Block-2-lin-1-6-lin-2-1', 
    'Block-2-lin-1-6-lin-3-1', 'Block-2-lin-1-6-lin-4-1', 
    'Block-2-lin-1-6-lin-5-1', 'Block-2-lin-1-6-lin-6-1', 
    'Block-2-lin-1-6-lin-7-1', 'Block-2-lin-1-6-lin-8-1', 
    'Block-2-lin-1-6-lin-9-1', 'Block-2-lin-1-6-lin-10-1', 
    'Block-2-lin-1-6-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7', 'Block-2-lin-1-8-lin-2-1-1', 
    'Block-2-lin-1-8-lin-3-1', 'Block-2-lin-1-8-lin-4-1', 
    'Block-2-lin-1-8-lin-5-1', 'Block-2-lin-1-8-lin-6-1', 
    'Block-2-lin-1-8-lin-7-1', 'Block-2-lin-1-8-lin-8-1', 
    'Block-2-lin-1-8-lin-9-1', 'Block-2-lin-1-8-lin-10-1', 
    'Block-2-lin-1-8-lin-11-1', 'HalfBlock-1-lin-1-2-lin-2-1', 
    'HalfBlock-1-lin-1-2-lin-3-1', 'HalfBlock-1-lin-1-2-lin-4-1', 
    'HalfBlock-1-lin-1-2-lin-5-1', 'HalfBlock-1-lin-1-2-lin-6-1', 
    'HalfBlock-1-lin-1-2-lin-7-1', 'HalfBlock-1-lin-1-2-lin-8-1', 
    'HalfBlock-1-lin-1-2-lin-9-1', 'HalfBlock-1-lin-1-2-lin-10-1', 
    'HalfBlock-1-lin-1-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2', 'Block-2-lin-1-3-lin-2-1', 
    'Block-2-lin-1-3-lin-3-1', 'Block-2-lin-1-3-lin-4-1', 
    'Block-2-lin-1-3-lin-5-1', 'Block-2-lin-1-3-lin-6-1', 
    'Block-2-lin-1-3-lin-7-1', 'Block-2-lin-1-3-lin-8-1', 
    'Block-2-lin-1-3-lin-9-1', 'Block-2-lin-1-3-lin-10-1', 
    'Block-2-lin-1-3-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-2-1', 'Block-2-lin-1-8-lin-2-1-lin-3-1', 
    'Block-2-lin-1-8-lin-2-1-lin-4-1', 'Block-2-lin-1-8-lin-2-1-lin-5-1', 
    'Block-2-lin-1-8-lin-2-1-lin-6-1', 'Block-2-lin-1-8-lin-2-1-lin-7-1', 
    'Block-2-lin-1-8-lin-2-1-lin-8-1', 'Block-2-lin-1-8-lin-2-1-lin-9-1', 
    'Block-2-lin-1-8-lin-2-1-lin-10-1', 'Block-2-lin-1-8-lin-2-1-lin-11-1', 
    'Block-2-lin-1-5-lin-2-1', 'Block-2-lin-1-5-lin-3-1', 
    'Block-2-lin-1-5-lin-4-1', 'Block-2-lin-1-5-lin-5-1', 
    'Block-2-lin-1-5-lin-6-1', 'Block-2-lin-1-5-lin-7-1', 
    'Block-2-lin-1-5-lin-8-1', 'Block-2-lin-1-5-lin-9-1', 
    'Block-2-lin-1-5-lin-10-1', 'Block-2-lin-1-5-lin-11-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6', 'Block-2-lin-1-7-lin-2-1', 
    'Block-2-lin-1-7-lin-3-1', 'Block-2-lin-1-7-lin-4-1', 
    'Block-2-lin-1-7-lin-5-1', 'Block-2-lin-1-7-lin-6-1', 
    'Block-2-lin-1-7-lin-7-1', 'Block-2-lin-1-7-lin-8-1', 
    'Block-2-lin-1-7-lin-9-1', 'Block-2-lin-1-7-lin-10-1', 
    'Block-2-lin-1-7-lin-11-1'), vector=(9.852566, 1.857697, -4.95))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('HalfBlock-1', 
    'Block-2', 'Block-2-lin-1-2', 'Block-2-lin-1-3', 'Block-2-lin-1-4', 
    'Block-2-lin-1-5', 'Block-2-lin-1-6', 'Block-2-lin-1-7', 'Block-2-lin-1-8', 
    'HalfBlock-1-lin-1-2', 'Block-2-lin-1-8-lin-2-1', 
    'Block-2-lin-1-8-lin-2-1-lin-1-2', 'Block-2-lin-1-8-lin-2-1-lin-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-1-4', 'Block-2-lin-1-8-lin-2-1-lin-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-1-6', 'Block-2-lin-1-8-lin-2-1-lin-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-1-8', 'Block-2-lin-1-8-lin-2-1-lin-1-9', 
    'HalfBlock-1-lin-2-1', 'HalfBlock-1-lin-3-1', 'HalfBlock-1-lin-4-1', 
    'HalfBlock-1-lin-5-1', 'HalfBlock-1-lin-6-1', 'HalfBlock-1-lin-7-1', 
    'HalfBlock-1-lin-8-1', 'HalfBlock-1-lin-9-1', 'HalfBlock-1-lin-10-1', 
    'HalfBlock-1-lin-11-1', 'Block-2-lin-2-1', 'Block-2-lin-3-1', 
    'Block-2-lin-4-1', 'Block-2-lin-5-1', 'Block-2-lin-6-1', 'Block-2-lin-7-1', 
    'Block-2-lin-8-1', 'Block-2-lin-9-1', 'Block-2-lin-10-1', 
    'Block-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1', 'Block-2-lin-1-2-lin-2-1', 
    'Block-2-lin-1-2-lin-3-1', 'Block-2-lin-1-2-lin-4-1', 
    'Block-2-lin-1-2-lin-5-1', 'Block-2-lin-1-2-lin-6-1', 
    'Block-2-lin-1-2-lin-7-1', 'Block-2-lin-1-2-lin-8-1', 
    'Block-2-lin-1-2-lin-9-1', 'Block-2-lin-1-2-lin-10-1', 
    'Block-2-lin-1-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3', 'Block-2-lin-1-4-lin-2-1', 
    'Block-2-lin-1-4-lin-3-1', 'Block-2-lin-1-4-lin-4-1', 
    'Block-2-lin-1-4-lin-5-1', 'Block-2-lin-1-4-lin-6-1', 
    'Block-2-lin-1-4-lin-7-1', 'Block-2-lin-1-4-lin-8-1', 
    'Block-2-lin-1-4-lin-9-1', 'Block-2-lin-1-4-lin-10-1', 
    'Block-2-lin-1-4-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5', 'Block-2-lin-1-6-lin-2-1', 
    'Block-2-lin-1-6-lin-3-1', 'Block-2-lin-1-6-lin-4-1', 
    'Block-2-lin-1-6-lin-5-1', 'Block-2-lin-1-6-lin-6-1', 
    'Block-2-lin-1-6-lin-7-1', 'Block-2-lin-1-6-lin-8-1', 
    'Block-2-lin-1-6-lin-9-1', 'Block-2-lin-1-6-lin-10-1', 
    'Block-2-lin-1-6-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7', 'Block-2-lin-1-8-lin-2-1-1', 
    'Block-2-lin-1-8-lin-3-1', 'Block-2-lin-1-8-lin-4-1', 
    'Block-2-lin-1-8-lin-5-1', 'Block-2-lin-1-8-lin-6-1', 
    'Block-2-lin-1-8-lin-7-1', 'Block-2-lin-1-8-lin-8-1', 
    'Block-2-lin-1-8-lin-9-1', 'Block-2-lin-1-8-lin-10-1', 
    'Block-2-lin-1-8-lin-11-1', 'HalfBlock-1-lin-1-2-lin-2-1', 
    'HalfBlock-1-lin-1-2-lin-3-1', 'HalfBlock-1-lin-1-2-lin-4-1', 
    'HalfBlock-1-lin-1-2-lin-5-1', 'HalfBlock-1-lin-1-2-lin-6-1', 
    'HalfBlock-1-lin-1-2-lin-7-1', 'HalfBlock-1-lin-1-2-lin-8-1', 
    'HalfBlock-1-lin-1-2-lin-9-1', 'HalfBlock-1-lin-1-2-lin-10-1', 
    'HalfBlock-1-lin-1-2-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2', 'Block-2-lin-1-3-lin-2-1', 
    'Block-2-lin-1-3-lin-3-1', 'Block-2-lin-1-3-lin-4-1', 
    'Block-2-lin-1-3-lin-5-1', 'Block-2-lin-1-3-lin-6-1', 
    'Block-2-lin-1-3-lin-7-1', 'Block-2-lin-1-3-lin-8-1', 
    'Block-2-lin-1-3-lin-9-1', 'Block-2-lin-1-3-lin-10-1', 
    'Block-2-lin-1-3-lin-11-1', 'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-2-1', 'Block-2-lin-1-8-lin-2-1-lin-3-1', 
    'Block-2-lin-1-8-lin-2-1-lin-4-1', 'Block-2-lin-1-8-lin-2-1-lin-5-1', 
    'Block-2-lin-1-8-lin-2-1-lin-6-1', 'Block-2-lin-1-8-lin-2-1-lin-7-1', 
    'Block-2-lin-1-8-lin-2-1-lin-8-1', 'Block-2-lin-1-8-lin-2-1-lin-9-1', 
    'Block-2-lin-1-8-lin-2-1-lin-10-1', 'Block-2-lin-1-8-lin-2-1-lin-11-1', 
    'Block-2-lin-1-5-lin-2-1', 'Block-2-lin-1-5-lin-3-1', 
    'Block-2-lin-1-5-lin-4-1', 'Block-2-lin-1-5-lin-5-1', 
    'Block-2-lin-1-5-lin-6-1', 'Block-2-lin-1-5-lin-7-1', 
    'Block-2-lin-1-5-lin-8-1', 'Block-2-lin-1-5-lin-9-1', 
    'Block-2-lin-1-5-lin-10-1', 'Block-2-lin-1-5-lin-11-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6', 'Block-2-lin-1-7-lin-2-1', 
    'Block-2-lin-1-7-lin-3-1', 'Block-2-lin-1-7-lin-4-1', 
    'Block-2-lin-1-7-lin-5-1', 'Block-2-lin-1-7-lin-6-1', 
    'Block-2-lin-1-7-lin-7-1', 'Block-2-lin-1-7-lin-8-1', 
    'Block-2-lin-1-7-lin-9-1', 'Block-2-lin-1-7-lin-10-1', 
    'Block-2-lin-1-7-lin-11-1'), vector=(0.0, 0.0, -0.05))
# Save by tpennock on 2025_04_17-12.03.29; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ExplicitDynamicsStep(description='Gravity', 
    improvedDtMethod=ON, maxIncrement=0.1, name='Loading', previous='Initial', 
    timePeriod=12.0)
mdb.models['Model-1'].Gravity(comp2=-9.81, createStepName='Loading', 
    distributionType=UNIFORM, field='', name='Gravity')
mdb.models['Model-1'].loads['Gravity'].setValues(distributionType=UNIFORM, 
    field='', region=Region(
    cells=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-8'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-9'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-2-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-3-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-4-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-5-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-6-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-7-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-8-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-9-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-10-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-11-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Loading', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-1', region=Region(
    vertices=mdb.models['Model-1'].rootAssembly.instances['dike-1'].vertices.getSequenceFromMask(
    mask=('[#f000 ]', ), )), u1=0.0, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
# Save by tpennock on 2025_04_17-12.10.22; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *DLOAD, file "Job-1.inp", line 1106: Unknown assembly element set _PICKEDSET426', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THIS MODEL HAS EITHER INCORRECT OR NO ELEMENT DEFINITIONS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.1)
mdb.models['Model-1'].parts['Block'].generateMesh()
mdb.models['Model-1'].parts['Block'].deleteMesh()
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['Block'].generateMesh()
mdb.models['Model-1'].parts['HalfBlock'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['HalfBlock'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET427 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET427 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET427 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['dike'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['dike'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), )), sectionName='BrickSection', thicknessAssignment=
    FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['dike'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.3)
mdb.models['Model-1'].parts['dike'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '4 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 4 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 5 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof5.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 6 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof6.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 14568, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 5 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 27776, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.88312479219167e-06, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0735781043767929, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 8.21093453851063e-06, 
    'artificialEnergy': 1.86182728612039e-06, 'step': 1, 'increment': 6448, 
    'phase': EXPLICIT_PHASE, 'externalWork': 4473.3232421875, 
    'kineticEnergy': 4473.3232421875, 'stepTime': 0.0735781043767929, 
    'totalEnergy': -3.60443373210728e-05, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 120.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.147097542881966, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.000117320880235638, 
    'artificialEnergy': 2.21762638830114e-05, 'step': 1, 'increment': 12889, 
    'phase': EXPLICIT_PHASE, 'externalWork': 17879.00390625, 
    'kineticEnergy': 17879.00390625, 'stepTime': 0.147097542881966, 
    'totalEnergy': -0.000281234679277986, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 241.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.221381738781929, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.000561256485525519, 
    'artificialEnergy': 9.57462398218922e-05, 'step': 1, 'increment': 19397, 
    'phase': EXPLICIT_PHASE, 'externalWork': 40496.34765625, 
    'kineticEnergy': 40496.34765625, 'stepTime': 0.221381738781929, 
    'totalEnergy': 0.000243309186771512, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 361.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.296738862991333, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.00169626623392105, 
    'artificialEnergy': 0.000268706644419581, 'step': 1, 'increment': 25999, 
    'phase': EXPLICIT_PHASE, 'externalWork': 72758.0546875, 
    'kineticEnergy': 72758.046875, 'stepTime': 0.296738862991333, 
    'totalEnergy': 3.72861832147464e-05, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 481.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.371924787759781, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.00391980819404125, 
    'artificialEnergy': 0.000593308883253485, 'step': 1, 'increment': 32586, 
    'phase': EXPLICIT_PHASE, 'externalWork': 114298.984375, 
    'kineticEnergy': 114298.984375, 'stepTime': 0.371924787759781, 
    'totalEnergy': -0.00149975332897156, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 601.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.447293341159821, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.00762084731832147, 
    'artificialEnergy': 0.0011343116639182, 'step': 1, 'increment': 39189, 
    'phase': EXPLICIT_PHASE, 'externalWork': 165316.78125, 
    'kineticEnergy': 165316.78125, 'stepTime': 0.447293341159821, 
    'totalEnergy': -0.000429257983341813, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 721.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.522454738616943, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0129511272534728, 
    'artificialEnergy': 0.00194184388965368, 'step': 1, 'increment': 45779, 
    'phase': EXPLICIT_PHASE, 'externalWork': 225593.765625, 
    'kineticEnergy': 225593.75, 'stepTime': 0.522454738616943, 
    'totalEnergy': 0.000502681010402739, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 841.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.597569584846497, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0200064051896334, 
    'artificialEnergy': 0.00307887676171958, 'step': 1, 'increment': 52377, 
    'phase': EXPLICIT_PHASE, 'externalWork': 295311.34375, 
    'kineticEnergy': 295311.34375, 'stepTime': 0.597569584846497, 
    'totalEnergy': -0.00807997770607471, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 961.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600005865097046, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0202636830508709, 
    'artificialEnergy': 0.00312295858748257, 'step': 1, 'increment': 52591, 
    'phase': EXPLICIT_PHASE, 'externalWork': 297729.53125, 
    'kineticEnergy': 297729.5, 'stepTime': 0.600005865097046, 
    'totalEnergy': -0.00819888431578875, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 965.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.675268709659576, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0288727357983589, 
    'artificialEnergy': 0.00460206856951118, 'step': 1, 'increment': 59202, 
    'phase': EXPLICIT_PHASE, 'externalWork': 377289.90625, 
    'kineticEnergy': 377289.875, 'stepTime': 0.675268709659576, 
    'totalEnergy': -0.0090929139405489, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1085.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750713706016541, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.038904033601284, 
    'artificialEnergy': 0.00642337836325169, 'step': 1, 'increment': 65829, 
    'phase': EXPLICIT_PHASE, 'externalWork': 466487.15625, 
    'kineticEnergy': 466487.09375, 'stepTime': 0.750713706016541, 
    'totalEnergy': -0.0103501016274095, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1205.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.824769794940948, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0500989630818367, 
    'artificialEnergy': 0.00865802075713873, 'step': 1, 'increment': 72334, 
    'phase': EXPLICIT_PHASE, 'externalWork': 563238.5, 
    'kineticEnergy': 563238.4375, 'stepTime': 0.824769794940948, 
    'totalEnergy': 0.0086530577391386, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1325.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.898894190788269, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0627554655075073, 
    'artificialEnergy': 0.0112427361309528, 'step': 1, 'increment': 78845, 
    'phase': EXPLICIT_PHASE, 'externalWork': 669202.4375, 
    'kineticEnergy': 669202.375, 'stepTime': 0.898894190788269, 
    'totalEnergy': -0.00963074993342161, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1445.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.973963499069214, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0765539258718491, 
    'artificialEnergy': 0.0142734125256538, 'step': 1, 'increment': 85439, 
    'phase': EXPLICIT_PHASE, 'externalWork': 785820.0, 
    'kineticEnergy': 785819.9375, 'stepTime': 0.973963499069214, 
    'totalEnergy': -0.00609124591574073, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1565.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0495297908783, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0917170643806458, 
    'artificialEnergy': 0.0177654642611742, 'step': 1, 'increment': 92054, 
    'phase': EXPLICIT_PHASE, 'externalWork': 912215.5, 
    'kineticEnergy': 912215.4375, 'stepTime': 1.0495297908783, 
    'totalEnergy': -0.00821953825652599, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1685.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.12514090538025, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.108067624270916, 
    'artificialEnergy': 0.0217471197247505, 'step': 1, 'increment': 98661, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1047862.5625, 
    'kineticEnergy': 1047862.4375, 'stepTime': 1.12514090538025, 
    'totalEnergy': -0.0179313700646162, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1805.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.20000815391541, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.125619426369667, 
    'artificialEnergy': 0.0261972192674875, 'step': 1, 'increment': 105203, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1191435.5, 
    'kineticEnergy': 1191435.375, 'stepTime': 1.20000815391541, 
    'totalEnergy': -0.0518763549625874, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1924.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.27580237388611, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.144528120756149, 'artificialEnergy': 0.031136417761445, 
    'step': 1, 'increment': 111826, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1346172.75, 'kineticEnergy': 1346172.5, 
    'stepTime': 1.27580237388611, 'totalEnergy': -0.0427723303437233, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2045.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.35116171836853, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.165050506591797, 
    'artificialEnergy': 0.0365185439586639, 'step': 1, 'increment': 118411, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1509385.25, 
    'kineticEnergy': 1509385.125, 'stepTime': 1.35116171836853, 
    'totalEnergy': -0.0327752307057381, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 2165.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.42699027061462, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.187272861599922, 
    'artificialEnergy': 0.0425647720694542, 'step': 1, 'increment': 125037, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1683037.625, 
    'kineticEnergy': 1683037.375, 'stepTime': 1.42699027061462, 
    'totalEnergy': -0.0125858206301928, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 2285.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.50221228599548, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.211070969700813, 
    'artificialEnergy': 0.0490855276584625, 'step': 1, 'increment': 131610, 
    'phase': EXPLICIT_PHASE, 'externalWork': 1864640.625, 
    'kineticEnergy': 1864640.375, 'stepTime': 1.50221228599548, 
    'totalEnergy': -0.0363047234714031, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 2405.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.57766318321228, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.237343579530716, 
    'artificialEnergy': 0.0563093423843384, 'step': 1, 'increment': 138203, 
    'phase': EXPLICIT_PHASE, 'externalWork': 2056141.0, 
    'kineticEnergy': 2056140.75, 'stepTime': 1.57766318321228, 
    'totalEnergy': -0.0545186251401901, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 2525.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.65239310264587, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.264427810907364, 'artificialEnergy': 0.063873715698719, 
    'step': 1, 'increment': 144733, 'phase': EXPLICIT_PHASE, 
    'externalWork': 2255036.75, 'kineticEnergy': 2255036.25, 
    'stepTime': 1.65239310264587, 'totalEnergy': -0.052994754165411, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2645.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.72688269615173, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.292407870292664, 
    'artificialEnergy': 0.0718101486563683, 'step': 1, 'increment': 151242, 
    'phase': EXPLICIT_PHASE, 'externalWork': 2462429.25, 
    'kineticEnergy': 2462429.0, 'stepTime': 1.72688269615173, 
    'totalEnergy': -0.0989630594849586, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 2765.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ContactExp(createStepName='Loading', name='Int-1')
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Loading', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, ''), ), stepName='Loading')
mdb.models['Model-1'].steps['Loading'].setValues(improvedDtMethod=ON, 
    timePeriod=1.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '4 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 4 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 5 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof5.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 6 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof6.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 40260, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 5 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 30592, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.46834791445872e-06, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 3.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0119732255116105, 
    'stableTimeIncrement': 1.08998347059241e-05, 
    'internalEnergy': 1.96028232574463, 'artificialEnergy': 0.42267894744873, 
    'step': 1, 'increment': 1099, 'phase': EXPLICIT_PHASE, 
    'externalWork': 6.88861131668091, 'kineticEnergy': 5.17680597305298, 
    'stepTime': 0.0119732255116105, 'totalEnergy': 0.0970240086317062, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 122.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025016400963068, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 4.47246646881104, 'artificialEnergy': 1.2921040058136, 
    'step': 1, 'increment': 2296, 'phase': EXPLICIT_PHASE, 
    'externalWork': 17.1987934112549, 'kineticEnergy': 12.0848064422607, 
    'stepTime': 0.025016400963068, 'totalEnergy': 0.0849440172314644, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 242.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0376236215233803, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 9.90079307556152, 'artificialEnergy': 3.14058494567871, 
    'step': 1, 'increment': 3453, 'phase': EXPLICIT_PHASE, 
    'externalWork': 30.9097290039062, 'kineticEnergy': 19.9957084655762, 
    'stepTime': 0.0376236215233803, 'totalEnergy': 0.0836424678564072, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 362.0})
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.changeValuesInStep(
    index=0, stepName='Loading', value='IntProp-1')
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0498821549117565, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 20.1097221374512, 'artificialEnergy': 6.30255746841431, 
    'step': 1, 'increment': 4578, 'phase': EXPLICIT_PHASE, 
    'externalWork': 46.7029685974121, 'kineticEnergy': 25.339973449707, 
    'stepTime': 0.0498821549117565, 'totalEnergy': 0.077869676053524, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 482.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500020161271095, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 20.2410221099854, 'artificialEnergy': 6.34301233291626, 
    'step': 1, 'increment': 4589, 'phase': EXPLICIT_PHASE, 
    'externalWork': 46.8700256347656, 'kineticEnergy': 25.3742256164551, 
    'stepTime': 0.0500020161271095, 'totalEnergy': 0.0789560452103615, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 483.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].parts['dike'].deleteMesh()
mdb.models['Model-1'].parts['dike'].seedPart(minSizeFactor=0.1, size=1.3)
mdb.models['Model-1'].parts['dike'].seedPart(minSizeFactor=0.1, size=1000.0)
mdb.models['Model-1'].parts['dike'].generateMesh()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0621188953518867, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 36.2237434387207, 'artificialEnergy': 10.6515331268311, 
    'step': 1, 'increment': 5701, 'phase': EXPLICIT_PHASE, 
    'externalWork': 63.8788452148438, 'kineticEnergy': 26.3052921295166, 
    'stepTime': 0.0621188953518867, 'totalEnergy': 0.0782573148608208, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 603.0})
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0740247964859009, 
    'stableTimeIncrement': 1.08958993223496e-05, 
    'internalEnergy': 56.3328285217285, 'artificialEnergy': 16.4194793701172, 
    'step': 1, 'increment': 6794, 'phase': EXPLICIT_PHASE, 
    'externalWork': 80.5413665771484, 'kineticEnergy': 22.8060455322266, 
    'stepTime': 0.0740247964859009, 'totalEnergy': 0.0849767178297043, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 723.0})
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['dike'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['dike'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['dike'].features['Solid extrude-1'])
mdb.models['Model-1'].ConstrainedSketch(name='Dike', objectToCopy=
    mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    gridOrigin=(64.322844578453, 15.2066985723559))
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['Dike'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='DikeRigid', type=
    ANALYTIC_RIGID_SURFACE)
mdb.models['Model-1'].parts['DikeRigid'].AnalyticRigidSurfExtrude(depth=5.0, 
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['Dike'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-6', type=
    ANALYTIC_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-6'].AnalyticRigidSurfRevolve(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.08607217669487, 
    'stableTimeIncrement': 1.0892223144765e-05, 
    'internalEnergy': 77.7279586791992, 'artificialEnergy': 22.8444633483887, 
    'step': 1, 'increment': 7900, 'phase': EXPLICIT_PHASE, 
    'externalWork': 95.233283996582, 'kineticEnergy': 16.0884895324707, 
    'stepTime': 0.08607217669487, 'totalEnergy': 0.0775435343384743, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 843.0})
del mdb.models['Model-1'].parts['Part-6']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0980690643191338, 
    'stableTimeIncrement': 1.08648837340297e-05, 
    'internalEnergy': 96.4346923828125, 'artificialEnergy': 28.9764957427979, 
    'step': 1, 'increment': 9002, 'phase': EXPLICIT_PHASE, 
    'externalWork': 106.682197570801, 'kineticEnergy': 8.92737483978271, 
    'stepTime': 0.0980690643191338, 'totalEnergy': 0.0695326030254364, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 963.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100002661347389, 
    'stableTimeIncrement': 1.08597805592581e-05, 
    'internalEnergy': 99.0877685546875, 'artificialEnergy': 29.9273719787598, 
    'step': 1, 'increment': 9180, 'phase': EXPLICIT_PHASE, 
    'externalWork': 108.230964660645, 'kineticEnergy': 7.81865167617798, 
    'stepTime': 0.100002661347389, 'totalEnergy': 0.0694875121116638, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 983.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.111984483897686, 
    'stableTimeIncrement': 1.08597805592581e-05, 
    'internalEnergy': 111.450454711914, 'artificialEnergy': 35.1416358947754, 
    'step': 1, 'increment': 10283, 'phase': EXPLICIT_PHASE, 
    'externalWork': 115.329360961914, 'kineticEnergy': 2.64275288581848, 
    'stepTime': 0.111984483897686, 'totalEnergy': 0.0719592198729515, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1103.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.123983532190323, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 116.27507019043, 'artificialEnergy': 38.8907012939453, 
    'step': 1, 'increment': 11388, 'phase': EXPLICIT_PHASE, 
    'externalWork': 117.956428527832, 'kineticEnergy': 0.577144980430603, 
    'stepTime': 0.123983532190323, 'totalEnergy': 0.0746699497103691, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1223.0})
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.135895386338234, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 113.74422454834, 'artificialEnergy': 41.0174865722656, 
    'step': 1, 'increment': 12486, 'phase': EXPLICIT_PHASE, 
    'externalWork': 116.373985290527, 'kineticEnergy': 1.65213119983673, 
    'stepTime': 0.135895386338234, 'totalEnergy': 0.0730893611907959, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1343.0})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='DikeRigid-1', 
    part=mdb.models['Model-1'].parts['DikeRigid'])
mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].translate(vector=(
    0.0, 0.0, 0.0))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.147719755768776, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 105.644241333008, 'artificialEnergy': 41.8470993041992, 
    'step': 1, 'increment': 13576, 'phase': EXPLICIT_PHASE, 
    'externalWork': 111.168319702148, 'kineticEnergy': 4.70043802261353, 
    'stepTime': 0.147719755768776, 'totalEnergy': 0.0721212550997734, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1463.0})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['DikeRigid'].features['3D Analytic rigid shell-1'].sketch)
mdb.models['Model-1'].parts['DikeRigid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['DikeRigid'].features['3D Analytic rigid shell-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['DikeRigid'].regenerate()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.15000869333744, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 103.583602905273, 'artificialEnergy': 41.8682479858398, 
    'step': 1, 'increment': 13787, 'phase': EXPLICIT_PHASE, 
    'externalWork': 109.749870300293, 'kineticEnergy': 5.35977220535278, 
    'stepTime': 0.15000869333744, 'totalEnergy': 0.0709227472543716, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1486.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.models['Model-1'].parts['DikeRigid'].ConvertToAnalytical()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.161843910813332, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 91.9270629882812, 'artificialEnergy': 41.7279281616211, 
    'step': 1, 'increment': 14878, 'phase': EXPLICIT_PHASE, 
    'externalWork': 101.320541381836, 'kineticEnergy': 8.75410270690918, 
    'stepTime': 0.161843910813332, 'totalEnergy': 0.0732203647494316, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1606.0})
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    gridOrigin=(64.322844578453, 15.2066985723559))
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['Dike'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-6', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-6'].BaseSolidExtrude(depth=5.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.173809304833412, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 79.6493530273438, 'artificialEnergy': 41.1370468139648, 
    'step': 1, 'increment': 15981, 'phase': EXPLICIT_PHASE, 
    'externalWork': 91.0027084350586, 'kineticEnergy': 10.8638200759888, 
    'stepTime': 0.173809304833412, 'totalEnergy': 0.0715563744306564, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1726.0})
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.1856879144907, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 68.9058990478516, 'artificialEnergy': 40.5795059204102, 
    'step': 1, 'increment': 17076, 'phase': EXPLICIT_PHASE, 
    'externalWork': 80.193229675293, 'kineticEnergy': 10.9771947860718, 
    'stepTime': 0.1856879144907, 'totalEnergy': 0.0727241411805153, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1846.0})
mdb.models['Model-1'].rootAssembly.rotate(angle=180.0, axisDirection=(0.0, 
    -10.0, 0.0), axisPoint=(67.511216, 24.966352, 2.5), instanceList=(
    'DikeRigid-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('DikeRigid-1', ), 
    vector=(-67.511216, -16.666352, -7.5))
del mdb.models['Model-1'].rootAssembly.features['dike-1']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.197512283921242, 
    'stableTimeIncrement': 1.08538570202654e-05, 
    'internalEnergy': 60.6161575317383, 'artificialEnergy': 40.1283111572266, 
    'step': 1, 'increment': 18166, 'phase': EXPLICIT_PHASE, 
    'externalWork': 69.9712448120117, 'kineticEnergy': 9.21191692352295, 
    'stepTime': 0.197512283921242, 'totalEnergy': 0.0743568763136864, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1966.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['DikeRigid'].Surface(name='Surf-1', side2Faces=
    mdb.models['Model-1'].parts['DikeRigid'].faces.getSequenceFromMask((
    '[#ff ]', ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    XAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    YAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    ZAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    XAXIS)
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.datums[433])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.referencePoints[438])
del mdb.models['Model-1'].parts['DikeRigid'].surfaces['Surf-1']
mdb.models['Model-1'].parts['DikeRigid'].Surface(name='Surf-1', side2Faces=
    mdb.models['Model-1'].parts['DikeRigid'].faces.getSequenceFromMask((
    '[#ff ]', ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].RigidBody(name='Constraint-1', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )))
del mdb.models['Model-1'].constraints['Constraint-1']
mdb.models['Model-1'].RigidBody(name='Constraint-1', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )))
del mdb.models['Model-1'].constraints['Constraint-1']
del mdb.models['Model-1'].parts['Part-6']
del mdb.models['Model-1'].parts['Spacer']
mdb.models['Model-1'].parts['DikeRigid'].Surface(name='Surf-2', side1Faces=
    mdb.models['Model-1'].parts['DikeRigid'].faces.getSequenceFromMask((
    '[#ff ]', ), ))
del mdb.models['Model-1'].parts['DikeRigid'].surfaces['Surf-1']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].RigidBody(name='Constraint-1', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )))
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 29712, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Loading', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=
    mdb.models['Model-1'].rootAssembly.datums[1], name='BC-1', region=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), u1=0.0, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 20356, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 29464, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.46973489387892e-06, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'jobName': 'Job-1', 
    'time': 'Thu Apr 17 14:29:38 2025'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 37964, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 38916, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.46973489387892e-06, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 2.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0138597898185253, 
    'stableTimeIncrement': 1.08948670458631e-05, 
    'internalEnergy': 2.48097157478333, 'artificialEnergy': 1.24734508991241, 
    'step': 1, 'increment': 1269, 'phase': EXPLICIT_PHASE, 
    'externalWork': -0.10389119386673, 'kineticEnergy': 1.53541302680969, 
    'stepTime': 0.0138597898185253, 'totalEnergy': 0.225344732403755, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0278939418494701, 
    'stableTimeIncrement': 1.08816402644152e-05, 
    'internalEnergy': 3.91401171684265, 'artificialEnergy': 2.38855600357056, 
    'step': 1, 'increment': 2558, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.372686117887497, 'kineticEnergy': 1.68728876113892, 
    'stepTime': 0.0278939418494701, 'totalEnergy': 0.254525005817413, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 242.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0416257604956627, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 5.18781614303589, 'artificialEnergy': 3.46272110939026, 
    'step': 1, 'increment': 3821, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.594395339488983, 'kineticEnergy': 1.63760197162628, 
    'stepTime': 0.0416257604956627, 'totalEnergy': 0.277128428220749, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 362.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500039644539356, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 5.41388082504272, 'artificialEnergy': 4.10582971572876, 
    'step': 1, 'increment': 4592, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.285721838474274, 'kineticEnergy': 1.43157804012299, 
    'stepTime': 0.0500039644539356, 'totalEnergy': 0.221098363399506, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 435.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0634246245026588, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 6.51812934875488, 'artificialEnergy': 5.2055811882019, 
    'step': 1, 'increment': 5827, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.257930308580399, 'kineticEnergy': 1.45678460597992, 
    'stepTime': 0.0634246245026588, 'totalEnergy': 0.22770132124424, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 555.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0768930464982986, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 7.70915460586548, 'artificialEnergy': 6.26823997497559, 
    'step': 1, 'increment': 7066, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.433027714490891, 'kineticEnergy': 1.50820755958557, 
    'stepTime': 0.0768930464982986, 'totalEnergy': 0.245813965797424, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 676.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0898723006248474, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 8.83802223205566, 'artificialEnergy': 7.28223514556885, 
    'step': 1, 'increment': 8260, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.590638816356659, 'kineticEnergy': 1.52392470836639, 
    'stepTime': 0.0898723006248474, 'totalEnergy': 0.256607502698898, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 795.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100003510713577, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 9.58404445648193, 'artificialEnergy': 8.09002780914307, 
    'step': 1, 'increment': 9192, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.517793893814087, 'kineticEnergy': 1.4891083240509, 
    'stepTime': 0.100003510713577, 'totalEnergy': 0.244127154350281, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 888.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.112884931266308, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 10.5303039550781, 'artificialEnergy': 9.10206127166748, 
    'step': 1, 'increment': 10377, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.438378989696503, 'kineticEnergy': 1.47353410720825, 
    'stepTime': 0.112884931266308, 'totalEnergy': 0.23868528008461, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1008.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.126091718673706, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 11.6004438400269, 'artificialEnergy': 10.1463394165039, 
    'step': 1, 'increment': 11592, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.492568463087082, 'kineticEnergy': 1.46494925022125, 
    'stepTime': 0.126091718673706, 'totalEnergy': 0.238199204206467, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1129.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.139301061630249, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 12.7005996704102, 'artificialEnergy': 11.2156133651733, 
    'step': 1, 'increment': 12808, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.54023140668869, 'kineticEnergy': 1.48930752277374, 
    'stepTime': 0.139301061630249, 'totalEnergy': 0.244174882769585, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1249.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150001063942909, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 13.4823303222656, 'artificialEnergy': 12.0408878326416, 
    'step': 1, 'increment': 13793, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.553117036819458, 'kineticEnergy': 1.45997762680054, 
    'stepTime': 0.150001063942909, 'totalEnergy': 0.238958850502968, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1352.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.162678122520447, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 14.4500179290771, 'artificialEnergy': 13.0231714248657, 
    'step': 1, 'increment': 14960, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.531289398670197, 'kineticEnergy': 1.42380774021149, 
    'stepTime': 0.162678122520447, 'totalEnergy': 0.234619438648224, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1472.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.175702795386314, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 15.4610786437988, 'artificialEnergy': 14.0281181335449, 
    'step': 1, 'increment': 16159, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.532002925872803, 'kineticEnergy': 1.49365174770355, 
    'stepTime': 0.175702795386314, 'totalEnergy': 0.238147422671318, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1592.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.188097417354584, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 16.4771995544434, 'artificialEnergy': 14.9897308349609, 
    'step': 1, 'increment': 17300, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.609478414058685, 'kineticEnergy': 1.47354960441589, 
    'stepTime': 0.188097417354584, 'totalEnergy': 0.24005052447319, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1712.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200003206729889, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 17.3877735137939, 'artificialEnergy': 15.9219942092896, 
    'step': 1, 'increment': 18396, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.609494149684906, 'kineticEnergy': 1.44268417358398, 
    'stepTime': 0.200003206729889, 'totalEnergy': 0.241939976811409, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1825.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.212658539414406, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 18.3920574188232, 'artificialEnergy': 16.9570064544678, 
    'step': 1, 'increment': 19561, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.540864288806915, 'kineticEnergy': 1.46868169307709, 
    'stepTime': 0.212658539414406, 'totalEnergy': 0.239514321088791, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1945.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.225770115852356, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 19.4053764343262, 'artificialEnergy': 18.0034637451172, 
    'step': 1, 'increment': 20768, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.521115839481354, 'kineticEnergy': 1.44744145870209, 
    'stepTime': 0.225770115852356, 'totalEnergy': 0.232067570090294, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2065.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.23833854496479, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 20.4422283172607, 'artificialEnergy': 18.984188079834, 
    'step': 1, 'increment': 21925, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.589813113212585, 'kineticEnergy': 1.47359991073608, 
    'stepTime': 0.23833854496479, 'totalEnergy': 0.242366224527359, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2185.0})
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'SVAVG'))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.25000536441803, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 21.3782691955566, 'artificialEnergy': 19.931360244751, 
    'step': 1, 'increment': 22999, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.570965826511383, 'kineticEnergy': 1.47779715061188, 
    'stepTime': 0.25000536441803, 'totalEnergy': 0.239998355507851, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2292.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.262917369604111, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 22.4284362792969, 'artificialEnergy': 20.9588470458984, 
    'step': 1, 'increment': 24186, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.560523450374603, 'kineticEnergy': 1.50239098072052, 
    'stepTime': 0.262917369604111, 'totalEnergy': 0.244010657072067, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2412.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=
    PRESELECT)
mdb.models['Model-1'].parts['Block'].deleteMesh()
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.075)
mdb.models['Model-1'].parts['Block'].generateMesh()
mdb.models['Model-1'].parts['HalfBlock'].deleteMesh()
mdb.models['Model-1'].parts['HalfBlock'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.075)
mdb.models['Model-1'].parts['HalfBlock'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 29684, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 26540, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.19284413813148e-05, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.041450560092926, 
    'stableTimeIncrement': 1.53844321175711e-05, 
    'internalEnergy': 4.87670707702637, 'artificialEnergy': 3.01490354537964, 
    'step': 1, 'increment': 2691, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.773433923721313, 'kineticEnergy': 1.79623472690582, 
    'stepTime': 0.041450560092926, 'totalEnergy': 0.285056114196777, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500048696994781, 
    'stableTimeIncrement': 1.53844321175711e-05, 
    'internalEnergy': 4.83237409591675, 'artificialEnergy': 3.54881763458252, 
    'step': 1, 'increment': 3247, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.103467911481857, 'kineticEnergy': 1.62284159660339, 
    'stepTime': 0.0500048696994781, 'totalEnergy': 0.240101009607315, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 145.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0913732349872589, 
    'stableTimeIncrement': 1.53714427142404e-05, 
    'internalEnergy': 7.93756484985352, 'artificialEnergy': 6.36637353897095, 
    'step': 1, 'increment': 5937, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.674852073192596, 'kineticEnergy': 1.57985186576843, 
    'stepTime': 0.0913732349872589, 'totalEnergy': 0.255499124526978, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 265.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100000351667404, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 8.44201183319092, 'artificialEnergy': 6.99810075759888, 
    'step': 1, 'increment': 6499, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.417062193155289, 'kineticEnergy': 1.63794839382172, 
    'stepTime': 0.100000351667404, 'totalEnergy': 0.254896193742752, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 289.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.143558531999588, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 11.6212930679321, 'artificialEnergy': 10.0040798187256, 
    'step': 1, 'increment': 9337, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.708009839057922, 'kineticEnergy': 1.66270589828491, 
    'stepTime': 0.143558531999588, 'totalEnergy': 0.271099209785461, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 409.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150004774332047, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 11.856595993042, 'artificialEnergy': 10.4411516189575, 
    'step': 1, 'increment': 9757, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.495283782482147, 'kineticEnergy': 1.67596876621246, 
    'stepTime': 0.150004774332047, 'totalEnergy': 0.253265827894211, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 427.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.193937927484512, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 14.7628583908081, 'artificialEnergy': 13.2407245635986, 
    'step': 1, 'increment': 12621, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.774075567722321, 'kineticEnergy': 1.66525077819824, 
    'stepTime': 0.193937927484512, 'totalEnergy': 0.255413591861725, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 547.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200009912252426, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 15.0820646286011, 'artificialEnergy': 13.6482801437378, 
    'step': 1, 'increment': 13017, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.671635508537292, 'kineticEnergy': 1.54348480701447, 
    'stepTime': 0.200009912252426, 'totalEnergy': 0.249856412410736, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 564.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.24064314365387, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 17.850435256958, 'artificialEnergy': 16.3494434356689, 
    'step': 1, 'increment': 15667, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.823240041732788, 'kineticEnergy': 1.60491526126862, 
    'stepTime': 0.24064314365387, 'totalEnergy': 0.249529033899307, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 684.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250011801719666, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 18.425874710083, 'artificialEnergy': 16.9990291595459, 
    'step': 1, 'increment': 16278, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.727918207645416, 'kineticEnergy': 1.63511753082275, 
    'stepTime': 0.250011801719666, 'totalEnergy': 0.251831114292145, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 710.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.294045776128769, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 21.3510971069336, 'artificialEnergy': 19.8702411651611, 
    'step': 1, 'increment': 19147, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.867295861244202, 'kineticEnergy': 1.57707870006561, 
    'stepTime': 0.294045776128769, 'totalEnergy': 0.248190477490425, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 830.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300000876188278, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 21.6989040374756, 'artificialEnergy': 20.2691459655762, 
    'step': 1, 'increment': 19535, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.848993897438049, 'kineticEnergy': 1.52850592136383, 
    'stepTime': 0.300000876188278, 'totalEnergy': 0.244582787156105, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 846.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.343915104866028, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 24.6817054748535, 'artificialEnergy': 23.1584854125977, 
    'step': 1, 'increment': 22401, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.938437819480896, 'kineticEnergy': 1.69482553005219, 
    'stepTime': 0.343915104866028, 'totalEnergy': 0.261896818876266, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 967.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350011825561523, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 25.0087242126465, 'artificialEnergy': 23.5683574676514, 
    'step': 1, 'increment': 22799, 'phase': EXPLICIT_PHASE, 
    'externalWork': 0.882524132728577, 'kineticEnergy': 1.51152980327606, 
    'stepTime': 0.350011825561523, 'totalEnergy': 0.244667127728462, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 983.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.393408834934235, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 27.9154300689697, 'artificialEnergy': 26.4214477539062, 
    'step': 1, 'increment': 25632, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.00089859962463, 'kineticEnergy': 1.593705534935, 
    'stepTime': 0.393408834934235, 'totalEnergy': 0.249360591173172, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1103.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.40001106262207, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 28.3040733337402, 'artificialEnergy': 26.8474063873291, 
    'step': 1, 'increment': 26063, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.00737977027893, 'kineticEnergy': 1.59598994255066, 
    'stepTime': 0.40001106262207, 'totalEnergy': 0.246045410633087, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1122.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.443454027175903, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 31.0611114501953, 'artificialEnergy': 29.6351108551025, 
    'step': 1, 'increment': 28899, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.03899073600769, 'kineticEnergy': 1.55930542945862, 
    'stepTime': 0.443454027175903, 'totalEnergy': 0.245864406228065, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1242.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.450010299682617, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 31.5594863891602, 'artificialEnergy': 30.0565795898438, 
    'step': 1, 'increment': 29327, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.05941987037659, 'kineticEnergy': 1.51870322227478, 
    'stepTime': 0.450010299682617, 'totalEnergy': 0.253090709447861, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1260.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.493606448173523, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 34.3509750366211, 'artificialEnergy': 32.8885307312012, 
    'step': 1, 'increment': 32173, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.05669450759888, 'kineticEnergy': 1.59792697429657, 
    'stepTime': 0.493606448173523, 'totalEnergy': 0.246307209134102, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1380.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500009536743164, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 34.8847274780273, 'artificialEnergy': 33.326530456543, 
    'step': 1, 'increment': 32591, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.07783102989197, 'kineticEnergy': 1.58625614643097, 
    'stepTime': 0.500009536743164, 'totalEnergy': 0.259746432304382, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1398.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.54360568523407, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 37.7206153869629, 'artificialEnergy': 36.1981811523438, 
    'step': 1, 'increment': 35437, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.11322665214539, 'kineticEnergy': 1.61972594261169, 
    'stepTime': 0.54360568523407, 'totalEnergy': 0.252800643444061, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1518.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.550008773803711, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 38.0978355407715, 'artificialEnergy': 36.6216850280762, 
    'step': 1, 'increment': 35855, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.04279720783234, 'kineticEnergy': 1.61277079582214, 
    'stepTime': 0.550008773803711, 'totalEnergy': 0.248231828212738, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1536.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.59369683265686, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 40.8848991394043, 'artificialEnergy': 39.4509201049805, 
    'step': 1, 'increment': 38707, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.07918918132782, 'kineticEnergy': 1.59161818027496, 
    'stepTime': 0.59369683265686, 'totalEnergy': 0.242259696125984, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1656.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600008010864258, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 41.4477806091309, 'artificialEnergy': 39.8912353515625, 
    'step': 1, 'increment': 39119, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.114049077034, 'kineticEnergy': 1.6653881072998, 
    'stepTime': 0.600008010864258, 'totalEnergy': 0.255018025636673, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1673.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.64024943113327, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 44.1723175048828, 'artificialEnergy': 42.5942420959473, 
    'step': 1, 'increment': 41746, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.13782358169556, 'kineticEnergy': 1.71859216690063, 
    'stepTime': 0.64024943113327, 'totalEnergy': 0.258321583271027, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1793.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.650007247924805, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 44.6084289550781, 'artificialEnergy': 43.2077484130859, 
    'step': 1, 'increment': 42383, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.08595204353333, 'kineticEnergy': 1.49577331542969, 
    'stepTime': 0.650007247924805, 'totalEnergy': 0.232222408056259, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1820.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.693572759628296, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 47.6535263061523, 'artificialEnergy': 46.136116027832, 
    'step': 1, 'increment': 45227, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.03700399398804, 'kineticEnergy': 1.60648310184479, 
    'stepTime': 0.693572759628296, 'totalEnergy': 0.259356290102005, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1941.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700006484985352, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 47.9367294311523, 'artificialEnergy': 46.5246543884277, 
    'step': 1, 'increment': 45647, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.05171608924866, 'kineticEnergy': 1.61639058589935, 
    'stepTime': 0.700006484985352, 'totalEnergy': 0.23335374891758, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 1958.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.743219673633575, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 50.832878112793, 'artificialEnergy': 49.3725280761719, 
    'step': 1, 'increment': 48468, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.04714071750641, 'kineticEnergy': 1.58947622776031, 
    'stepTime': 0.743219673633575, 'totalEnergy': 0.241891831159592, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2079.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750005722045898, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 51.3427276611328, 'artificialEnergy': 49.8100967407227, 
    'step': 1, 'increment': 48911, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.14803123474121, 'kineticEnergy': 1.61963784694672, 
    'stepTime': 0.750005722045898, 'totalEnergy': 0.253267765045166, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2099.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.793831646442413, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 54.1720695495605, 'artificialEnergy': 52.7297210693359, 
    'step': 1, 'increment': 51772, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.08040118217468, 'kineticEnergy': 1.53871285915375, 
    'stepTime': 0.793831646442413, 'totalEnergy': 0.2407186627388, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2219.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800004959106445, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 54.6085586547852, 'artificialEnergy': 53.1162147521973, 
    'step': 1, 'increment': 52175, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.11579740047455, 'kineticEnergy': 1.59572768211365, 
    'stepTime': 0.800004959106445, 'totalEnergy': 0.251138359308243, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2236.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.843509197235107, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 57.4305038452148, 'artificialEnergy': 55.9787139892578, 
    'step': 1, 'increment': 55015, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.13682508468628, 'kineticEnergy': 1.58568501472473, 
    'stepTime': 0.843509197235107, 'totalEnergy': 0.241373434662819, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2356.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.850004196166992, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 57.9948921203613, 'artificialEnergy': 56.4259719848633, 
    'step': 1, 'increment': 55439, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.15179669857025, 'kineticEnergy': 1.59291315078735, 
    'stepTime': 0.850004196166992, 'totalEnergy': 0.26220291852951, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2374.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.893692255020142, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 60.6859130859375, 'artificialEnergy': 59.2710838317871, 
    'step': 1, 'increment': 58291, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.03224861621857, 'kineticEnergy': 1.5680410861969, 
    'stepTime': 0.893692255020142, 'totalEnergy': 0.238601759076118, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2495.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900003433227539, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 61.1519203186035, 'artificialEnergy': 59.6716461181641, 
    'step': 1, 'increment': 58703, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.13062071800232, 'kineticEnergy': 1.56735634803772, 
    'stepTime': 0.900003433227539, 'totalEnergy': 0.238781154155731, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2512.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.943660855293274, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 64.0991668701172, 'artificialEnergy': 62.5990295410156, 
    'step': 1, 'increment': 61553, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.10753059387207, 'kineticEnergy': 1.61066424846649, 
    'stepTime': 0.943660855293274, 'totalEnergy': 0.257270157337189, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2632.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.950002670288086, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 64.4570388793945, 'artificialEnergy': 62.996166229248, 
    'step': 1, 'increment': 61967, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.13350319862366, 'kineticEnergy': 1.5751793384552, 
    'stepTime': 0.950002670288086, 'totalEnergy': 0.240683540701866, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2650.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.993629455566406, 
    'stableTimeIncrement': 1.53062264871551e-05, 
    'internalEnergy': 67.391845703125, 'artificialEnergy': 65.9372253417969, 
    'step': 1, 'increment': 64815, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.05861437320709, 'kineticEnergy': 1.61381781101227, 
    'stepTime': 0.993629455566406, 'totalEnergy': 0.247112661600113, 
    'jobName': 'Job-1', 'distortionContrEnergy': 0.0, 'wallTime': 2770.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 
    'stableTimeIncrement': 1.53062264871551e-05, 
    'internalEnergy': 67.6820297241211, 'artificialEnergy': 66.2931518554688, 
    'step': 1, 'increment': 65231, 'phase': EXPLICIT_PHASE, 
    'externalWork': 1.09132158756256, 'kineticEnergy': 1.53944826126099, 
    'stepTime': 1.0, 'totalEnergy': 0.227976694703102, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 2787.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'jobName': 'Job-1', 
    'time': 'Thu Apr 17 16:00:37 2025'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 38692, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 29092, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.19284413813148e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 2.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0439122319221497, 
    'stableTimeIncrement': 1.53844321175711e-05, 
    'internalEnergy': 5.02518939971924, 'stepTime': 0.0439122319221497, 
    'totalEnergy': 0.284590035676956, 'jobName': 'Job-1', 
    'artificialEnergy': 3.20613646507263, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2851, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.735889732837677, 'kineticEnergy': 1.89509618282318, 
    'wallTime': 137.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500048696994781, 
    'stableTimeIncrement': 1.53844321175711e-05, 
    'internalEnergy': 4.83237409591675, 'stepTime': 0.0500048696994781, 
    'totalEnergy': 0.240101009607315, 'jobName': 'Job-1', 
    'artificialEnergy': 3.54881763458252, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3247, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.103467911481857, 'kineticEnergy': 1.62284159660339, 
    'wallTime': 153.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0930476412177086, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 8.25438022613525, 'stepTime': 0.0930476412177086, 
    'totalEnergy': 0.279033482074738, 'jobName': 'Job-1', 
    'artificialEnergy': 6.52634143829346, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 6046, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.618150293827057, 'kineticEnergy': 1.76140558719635, 
    'wallTime': 277.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100000351667404, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 8.44201183319092, 'stepTime': 0.100000351667404, 
    'totalEnergy': 0.254896193742752, 'jobName': 'Job-1', 
    'artificialEnergy': 6.99810075759888, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 6499, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.417062193155289, 'kineticEnergy': 1.63794839382172, 
    'wallTime': 297.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.142913907766342, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 11.57239818573, 'stepTime': 0.142913907766342, 
    'totalEnergy': 0.26936462521553, 'jobName': 'Job-1', 
    'artificialEnergy': 9.95627880096436, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9295, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.710671126842499, 'kineticEnergy': 1.72789859771729, 
    'wallTime': 419.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150004774332047, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 11.856595993042, 'stepTime': 0.150004774332047, 
    'totalEnergy': 0.253265827894211, 'jobName': 'Job-1', 
    'artificialEnergy': 10.4411516189575, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9757, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.495283782482147, 'kineticEnergy': 1.67596876621246, 
    'wallTime': 438.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.192082598805428, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 14.6248302459717, 'stepTime': 0.192082598805428, 
    'totalEnergy': 0.254081428050995, 'jobName': 'Job-1', 
    'artificialEnergy': 13.134726524353, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 12500, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.759559810161591, 'kineticEnergy': 1.56624269485474, 
    'wallTime': 561.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200009912252426, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 15.0820646286011, 'stepTime': 0.200009912252426, 
    'totalEnergy': 0.249856412410736, 'jobName': 'Job-1', 
    'artificialEnergy': 13.6482801437378, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13017, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.671635508537292, 'kineticEnergy': 1.54348480701447, 
    'wallTime': 584.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.241777807474136, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 17.9422035217285, 'stepTime': 0.241777807474136, 
    'totalEnergy': 0.250649124383926, 'jobName': 'Job-1', 
    'artificialEnergy': 16.4370403289795, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 15741, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.842851042747498, 'kineticEnergy': 1.61801314353943, 
    'wallTime': 708.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250011801719666, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 18.425874710083, 'stepTime': 0.250011801719666, 
    'totalEnergy': 0.251831114292145, 'jobName': 'Job-1', 
    'artificialEnergy': 16.9990291595459, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 16278, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.727918207645416, 'kineticEnergy': 1.63511753082275, 
    'wallTime': 731.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.292771875858307, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 21.2768859863281, 'stepTime': 0.292771875858307, 
    'totalEnergy': 0.250861167907715, 'jobName': 'Job-1', 
    'artificialEnergy': 19.7760562896729, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 19064, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.88089382648468, 'kineticEnergy': 1.61842846870422, 
    'wallTime': 852.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300000876188278, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 21.6989040374756, 'stepTime': 0.300000876188278, 
    'totalEnergy': 0.244582787156105, 'jobName': 'Job-1', 
    'artificialEnergy': 20.2691459655762, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 19535, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.848993897438049, 'kineticEnergy': 1.52850592136383, 
    'wallTime': 872.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.342536449432373, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 24.5452938079834, 'stepTime': 0.342536449432373, 
    'totalEnergy': 0.248059704899788, 'jobName': 'Job-1', 
    'artificialEnergy': 23.0674705505371, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22311, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.955868780612946, 'kineticEnergy': 1.58664011955261, 
    'wallTime': 996.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350011825561523, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 25.0087242126465, 'stepTime': 0.350011825561523, 
    'totalEnergy': 0.244667127728462, 'jobName': 'Job-1', 
    'artificialEnergy': 23.5683574676514, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22799, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.882524132728577, 'kineticEnergy': 1.51152980327606, 
    'wallTime': 1017.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.392596960067749, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 27.8653964996338, 'stepTime': 0.392596960067749, 
    'totalEnergy': 0.243725702166557, 'jobName': 'Job-1', 
    'artificialEnergy': 26.37473487854, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 25579, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.986710131168365, 'kineticEnergy': 1.60373389720917, 
    'wallTime': 1137.0})
# Save by tpennock on 2025_04_23-14.23.03; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].sketches['Dike'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.40001106262207, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 28.3040733337402, 'stepTime': 0.40001106262207, 
    'totalEnergy': 0.246045410633087, 'jobName': 'Job-1', 
    'artificialEnergy': 26.8474063873291, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 26063, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.00737977027893, 'kineticEnergy': 1.59598994255066, 
    'wallTime': 1159.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.442427694797516, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 31.0603485107422, 'stepTime': 0.442427694797516, 
    'totalEnergy': 0.249836087226868, 'jobName': 'Job-1', 
    'artificialEnergy': 29.5706176757812, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28832, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.04412937164307, 'kineticEnergy': 1.56652045249939, 
    'wallTime': 1284.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.450010299682617, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 31.5594863891602, 'stepTime': 0.450010299682617, 
    'totalEnergy': 0.253090709447861, 'jobName': 'Job-1', 
    'artificialEnergy': 30.0565795898438, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 29327, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.05941987037659, 'kineticEnergy': 1.51870322227478, 
    'wallTime': 1306.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.492717981338501, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 34.3740615844727, 'stepTime': 0.492717981338501, 
    'totalEnergy': 0.257874429225922, 'jobName': 'Job-1', 
    'artificialEnergy': 32.8596153259277, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 32115, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.04535627365112, 'kineticEnergy': 1.62057328224182, 
    'wallTime': 1426.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500009536743164, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 34.8847274780273, 'stepTime': 0.500009536743164, 
    'totalEnergy': 0.259746432304382, 'jobName': 'Job-1', 
    'artificialEnergy': 33.326530456543, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 32591, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.07783102989197, 'kineticEnergy': 1.58625614643097, 
    'wallTime': 1447.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.542992949485779, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 37.6175308227539, 'stepTime': 0.542992949485779, 
    'totalEnergy': 0.247425347566605, 'jobName': 'Job-1', 
    'artificialEnergy': 36.153923034668, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 35397, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.05671870708466, 'kineticEnergy': 1.62973570823669, 
    'wallTime': 1567.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.550008773803711, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 38.0978355407715, 'stepTime': 0.550008773803711, 
    'totalEnergy': 0.248231828212738, 'jobName': 'Job-1', 
    'artificialEnergy': 36.6216850280762, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 35855, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.04279720783234, 'kineticEnergy': 1.61277079582214, 
    'wallTime': 1587.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.592992186546326, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 40.8770980834961, 'stepTime': 0.592992186546326, 
    'totalEnergy': 0.239329740405083, 'jobName': 'Job-1', 
    'artificialEnergy': 39.4073333740234, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 38661, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.08157539367676, 'kineticEnergy': 1.59735071659088, 
    'wallTime': 1707.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600008010864258, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 41.4477806091309, 'stepTime': 0.600008010864258, 
    'totalEnergy': 0.255018025636673, 'jobName': 'Job-1', 
    'artificialEnergy': 39.8912353515625, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39119, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.114049077034, 'kineticEnergy': 1.6653881072998, 
    'wallTime': 1727.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.models['Model-1'].sketches['__edit__'].undo()
#* Nothing to undo.
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    42.8810844421387, 15.2833604812622), value=6.04743416489242, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[14], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[13])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    48.9213409423828, 14.1857643127441), value=16.5474341649025, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[13], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[15])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    38.989372253418, 18.1400718688965), value=1.85769750528906, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[14], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[13])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.64165872335434, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 44.2208404541016, 'stepTime': 0.64165872335434, 
    'totalEnergy': 0.259082674980164, 'jobName': 'Job-1', 
    'artificialEnergy': 42.6679649353027, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 41838, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.10859751701355, 'kineticEnergy': 1.67751681804657, 
    'wallTime': 1850.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.650007247924805, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 44.6084289550781, 'stepTime': 0.650007247924805, 
    'totalEnergy': 0.232222408056259, 'jobName': 'Job-1', 
    'artificialEnergy': 43.2077484130859, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 42383, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.08595204353333, 'kineticEnergy': 1.49577331542969, 
    'wallTime': 1873.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.692178785800934, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 47.6128273010254, 'stepTime': 0.692178785800934, 
    'totalEnergy': 0.262936115264893, 'jobName': 'Job-1', 
    'artificialEnergy': 46.0622520446777, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 45136, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.06342709064484, 'kineticEnergy': 1.69485509395599, 
    'wallTime': 1999.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700006484985352, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 47.9367294311523, 'stepTime': 0.700006484985352, 
    'totalEnergy': 0.23335374891758, 'jobName': 'Job-1', 
    'artificialEnergy': 46.5246543884277, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 45647, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.05171608924866, 'kineticEnergy': 1.61639058589935, 
    'wallTime': 2022.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.742101430892944, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 50.7426910400391, 'stepTime': 0.742101430892944, 
    'totalEnergy': 0.241371512413025, 'jobName': 'Job-1', 
    'artificialEnergy': 49.2838287353516, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 48395, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.04027104377747, 'kineticEnergy': 1.62627124786377, 
    'wallTime': 2150.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750005722045898, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 51.3427276611328, 'stepTime': 0.750005722045898, 
    'totalEnergy': 0.253267765045166, 'jobName': 'Job-1', 
    'artificialEnergy': 49.8100967407227, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 48911, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.14803123474121, 'kineticEnergy': 1.61963784694672, 
    'wallTime': 2173.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.792299807071686, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 54.0335540771484, 'stepTime': 0.792299807071686, 
    'totalEnergy': 0.242108389735222, 'jobName': 'Job-1', 
    'artificialEnergy': 52.595890045166, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 51672, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.09189820289612, 'kineticEnergy': 1.54210019111633, 
    'wallTime': 2300.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800004959106445, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 54.6085586547852, 'stepTime': 0.800004959106445, 
    'totalEnergy': 0.251138359308243, 'jobName': 'Job-1', 
    'artificialEnergy': 53.1162147521973, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 52175, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.11579740047455, 'kineticEnergy': 1.59572768211365, 
    'wallTime': 2322.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.842299044132233, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 57.3570022583008, 'stepTime': 0.842299044132233, 
    'totalEnergy': 0.23895151913166, 'jobName': 'Job-1', 
    'artificialEnergy': 55.9131126403809, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 54936, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.11744558811188, 'kineticEnergy': 1.53741061687469, 
    'wallTime': 2451.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.850004196166992, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 57.9948921203613, 'stepTime': 0.850004196166992, 
    'totalEnergy': 0.26220291852951, 'jobName': 'Job-1', 
    'artificialEnergy': 56.4259719848633, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 55439, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.15179669857025, 'kineticEnergy': 1.59291315078735, 
    'wallTime': 2473.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.892037868499756, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 60.6137771606445, 'stepTime': 0.892037868499756, 
    'totalEnergy': 0.241765096783638, 'jobName': 'Job-1', 
    'artificialEnergy': 59.1617317199707, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 58183, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.03488993644714, 'kineticEnergy': 1.56257176399231, 
    'wallTime': 2607.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900003433227539, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 61.1519203186035, 'stepTime': 0.900003433227539, 
    'totalEnergy': 0.238781154155731, 'jobName': 'Job-1', 
    'artificialEnergy': 59.6716461181641, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 58703, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.13062071800232, 'kineticEnergy': 1.56735634803772, 
    'wallTime': 2630.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.942083060741425, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 63.9813194274902, 'stepTime': 0.942083060741425, 
    'totalEnergy': 0.256422162055969, 'jobName': 'Job-1', 
    'artificialEnergy': 62.4876899719238, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 61450, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.14160144329071, 'kineticEnergy': 1.63949239253998, 
    'wallTime': 2766.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.950002670288086, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 64.4570388793945, 'stepTime': 0.950002670288086, 
    'totalEnergy': 0.240683540701866, 'jobName': 'Job-1', 
    'artificialEnergy': 62.996166229248, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 61967, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.13350319862366, 'kineticEnergy': 1.5751793384552, 
    'wallTime': 2789.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.992266118526459, 
    'stableTimeIncrement': 1.53062264871551e-05, 
    'internalEnergy': 67.3737869262695, 'stepTime': 0.992266118526459, 
    'totalEnergy': 0.247474268078804, 'jobName': 'Job-1', 
    'artificialEnergy': 65.8489456176758, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 64726, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.10089445114136, 'kineticEnergy': 1.70658206939697, 
    'wallTime': 2914.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 
    'stableTimeIncrement': 1.53062264871551e-05, 
    'internalEnergy': 67.6820297241211, 'stepTime': 1.0, 
    'totalEnergy': 0.227976694703102, 'jobName': 'Job-1', 
    'artificialEnergy': 66.2931518554688, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 65231, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.09132158756256, 'kineticEnergy': 1.53944826126099, 
    'wallTime': 2936.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Apr 23 14:53:02 2025', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(63.75, 5.0))
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    31.4826965332031, -8.4232349395752), value=26.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    30.6101989746094, 2.75933456420898), value=0.5, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Wall', type=
    ANALYTIC_RIGID_SURFACE)
mdb.models['Model-1'].parts['Wall'].AnalyticRigidSurfExtrude(depth=7.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Wall-1', part=
    mdb.models['Model-1'].parts['Wall'])
mdb.models['Model-1'].rootAssembly.rotate(angle=90.0, axisDirection=(-10.0, 
    0.0, 0.0), axisPoint=(63.75, 4.5, -3.5), instanceList=('Wall-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Wall-1', ), vector=
    (-37.25, -4.5, -1.5))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, 1.0, 0.0), instanceList=('Wall-1', ), number1=1, 
    number2=2, spacing1=26.5, spacing2=7.0)
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Wall-1-lin-1-2', ), 
    vector=(0.0, -7.0, 5.5))
# Save by tpennock on 2025_04_24-10.03.51; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Block'].Surface(name='top', side1Faces=
    mdb.models['Model-1'].parts['Block'].faces.getSequenceFromMask(('[#10 ]', 
    ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['HalfBlock'].Surface(name='Top', side1Faces=
    mdb.models['Model-1'].parts['HalfBlock'].faces.getSequenceFromMask((
    '[#10 ]', ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['Block'].Surface(name='bot', side1Faces=
    mdb.models['Model-1'].parts['Block'].faces.getSequenceFromMask(('[#20 ]', 
    ), ))
mdb.models['Model-1'].parts['Block'].Surface(name='side', side1Faces=
    mdb.models['Model-1'].parts['Block'].faces.getSequenceFromMask(('[#f ]', ), 
    ))
mdb.models['Model-1'].parts['HalfBlock'].Surface(name='bot', side1Faces=
    mdb.models['Model-1'].parts['HalfBlock'].faces.getSequenceFromMask((
    '[#20 ]', ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ContactProperty('BLOCK-FILTER')
mdb.models['Model-1'].interactionProperties['BLOCK-FILTER'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.6, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['BLOCK-FILTER'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].interactionProperties['IntProp-1'].normalBehavior.setValues(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.85, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].parts['Wall'].Surface(name='Surf-Wall', side2Faces=
    mdb.models['Model-1'].parts['Wall'].faces.getSequenceFromMask(('[#f ]', ), 
    ))
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].parts['Block'].surfaces['top']
del mdb.models['Model-1'].parts['Block'].surfaces['side']
del mdb.models['Model-1'].parts['HalfBlock'].surfaces['Top']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Surface(name='Bottoms', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-8'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-9'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#20 ]', ), ))
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((mdb.models['Model-1'].rootAssembly.surfaces['Bottoms'], 
    mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].surfaces['Surf-2'], 
    'BLOCK-FILTER'), ), stepName='Loading')
mdb.models['Model-1'].steps['Loading'].setValues(improvedDtMethod=ON, 
    timeIncrementationMethod=FIXED_USER_DEFINED_INC, userDefinedInc=0.01)
mdb.Job(name='Job-2', objectToCopy=mdb.jobs['Job-1'])
mdb.models['Model-1'].RigidBody(name='Constraint-2', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side2Faces=mdb.models['Model-1'].rootAssembly.instances['Wall-1'].faces.getSequenceFromMask(
    mask=('[#f ]', ), )))
mdb.models['Model-1'].RigidBody(name='Constraint-3', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side2Faces=mdb.models['Model-1'].rootAssembly.instances['Wall-1-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#f ]', ), )))
# Save by tpennock on 2025_04_25-11.59.13; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row1', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (0.01, 0.0), (0.02, 
    0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (0.07, 0.0), (
    0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), (0.13, 0.0), 
    (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 0.0), (0.19, 
    0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (0.24, 0.0), (
    0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 0.0), (0.3, 0.0), 
    (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (0.35, 0.0), (0.36, 
    0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), (0.41, 0.0), (
    0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 0.0), (0.47, 
    0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (0.52, 0.0), (
    0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 0.0), (0.58, 
    0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (0.63, 0.0), (
    0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 0.0), (0.69, 
    0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (0.74, 0.0), (
    0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 0.0), (0.8, 0.0), 
    (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (0.85, 0.0), (0.86, 
    0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), (0.91, 0.0), (
    0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 0.0), (0.97, 
    0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (1.02, 0.0), (
    1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 0.0), (1.08, 
    0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (1.13, 0.0), (
    1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 0.0), (1.19, 
    0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (1.24, 0.0), (
    1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 0.0), (1.3, 0.0), 
    (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (1.35, 0.0), (1.36, 
    0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), (1.41, 0.0), (
    1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 0.0), (1.47, 
    0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (1.52, 0.0), (
    1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 0.0), (1.58, 
    0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (1.63, 0.0), (
    1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 0.0), (1.69, 
    0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (1.74, 0.0), (
    1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 0.0), (1.8, 0.0), 
    (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (1.85, 0.0), (1.86, 
    0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), (1.91, 0.0), (
    1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 0.0), (1.97, 
    0.0), (1.98, 0.0), (1.99, 0.0), (2.0, 0.0), (2.01, 0.0), (2.02, 0.0), (
    2.03, 0.0), (2.04, 0.0), (2.05, 0.0), (2.06, 0.0), (2.07, 0.0), (2.08, 
    0.0), (2.09, 0.0), (2.1, 0.0), (2.11, 0.0), (2.12, 0.0), (2.13, 0.0), (
    2.14, 0.0), (2.15, 0.0), (2.16, 0.0), (2.17, 0.0), (2.18, 0.0), (2.19, 
    0.0), (2.2, 0.0), (2.21, 0.0), (2.22, 0.0), (2.23, 0.0), (2.24, 0.0), (
    2.25, 0.0), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), 
    (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, 0.0), (6.0, 0.0), (6.01, 0.0), (6.02, 0.0), (
    6.03, 0.0), (6.04, 0.0), (6.05, 0.0), (6.06, 0.0), (6.07, 0.0), (6.08, 
    0.0), (6.09, 0.0), (6.1, 0.0), (6.11, 0.0), (6.12, 0.0), (6.13, 0.0), (
    6.14, 0.0), (6.15, 0.0), (6.16, 0.0), (6.17, 0.0), (6.18, 0.0), (6.19, 
    0.0), (6.2, 0.0), (6.21, 0.0), (6.22, 0.0), (6.23, 0.0), (6.24, 0.0), (
    6.25, 0.0), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), 
    (6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 
    0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (
    6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 
    0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (
    6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 
    0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (
    6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 
    0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (
    6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), 
    (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 
    0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (
    6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 
    0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (
    7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 
    0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (
    7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 
    0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (
    7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), 
    (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 
    0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (
    7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 
    0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (
    7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 
    0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (
    7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 
    0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (
    7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), 
    (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 
    0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (
    7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 
    0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (
    8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 
    0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (
    8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 
    0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (
    8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), 
    (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 
    0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (
    8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 
    0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (
    8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 
    0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (
    8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 
    0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (
    8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), 
    (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 
    0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (
    8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 
    0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (
    9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 
    0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (
    9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 
    0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (
    9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), 
    (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 
    0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (
    9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 
    0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (
    9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 
    0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (
    9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 
    0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (
    9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), 
    (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 
    0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (
    9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 
    0.0), (9.98, 0.0), (9.99, 0.0), (10.0, 0.0), (10.01, 0.0), (10.02, 0.0), (
    10.03, 0.0), (10.04, 0.0), (10.05, 0.0), (10.06, 0.0), (10.07, 0.0), (
    10.08, 0.0), (10.09, 0.0), (10.1, 0.0), (10.11, 0.0), (10.12, 0.0), (10.13, 
    0.0), (10.14, 0.0), (10.15, 0.0), (10.16, 0.0), (10.17, 0.0), (10.18, 0.0), 
    (10.19, 0.0), (10.2, 0.0), (10.21, 0.0), (10.22, 0.0), (10.23, 0.0), (
    10.24, 0.0), (10.25, 0.0), (10.26, 0.0), (10.27, 0.0), (10.28, 0.0), (
    10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (10.33, 0.0), (10.34, 
    0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (10.38, 0.0), (10.39, 0.0), 
    (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 0.0), (10.44, 0.0), (
    10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), (10.49, 0.0), (10.5, 
    0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (10.54, 0.0), (10.55, 0.0), 
    (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (10.59, 0.0), (10.6, 0.0), (
    10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 0.0), (10.65, 0.0), (
    10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), (10.7, 0.0), (10.71, 
    0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (10.75, 0.0), (10.76, 0.0), 
    (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 0.0), (10.81, 0.0), (
    10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), (10.86, 0.0), (
    10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (10.91, 0.0), (10.92, 
    0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (10.96, 0.0), (10.97, 0.0), 
    (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 0.0), (11.02, 0.0), (
    11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), (11.07, 0.0), (
    11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (11.12, 0.0), (11.13, 
    0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (11.17, 0.0), (11.18, 0.0), 
    (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 0.0), (11.23, 0.0), (
    11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), (11.28, 0.0), (
    11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (11.33, 0.0), (11.34, 
    0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (11.38, 0.0), (11.39, 0.0), 
    (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 0.0), (11.44, 0.0), (
    11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), (11.49, 0.0), (11.5, 
    0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (11.54, 0.0), (11.55, 0.0), 
    (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (11.59, 0.0), (11.6, 0.0), (
    11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 0.0), (11.65, 0.0), (
    11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), (11.7, 0.0), (11.71, 
    0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (11.75, 0.0), (11.76, 0.0), 
    (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 0.0), (11.81, 0.0), (
    11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), (11.86, 0.0), (
    11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (11.91, 0.0), (11.92, 
    0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (11.96, 0.0), (11.97, 0.0), 
    (11.98, 0.0), (11.99, 0.0)), name='Row1', smooth=SOLVER_DEFAULT, timeSpan=
    STEP)
mdb.models['Model-1'].Amplitude(name='Row2', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row1'])
mdb.models['Model-1'].Amplitude(name='Row3', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row2'])
mdb.models['Model-1'].Amplitude(name='Row2-Copy', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row2'])
del mdb.models['Model-1'].amplitudes['Row2-Copy']
mdb.models['Model-1'].Amplitude(name='Row4', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row3'])
mdb.models['Model-1'].Amplitude(name='Row5', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row3'])
mdb.models['Model-1'].Amplitude(name='Row6', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row5'])
mdb.models['Model-1'].Amplitude(name='Row7', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row6'])
mdb.models['Model-1'].Amplitude(name='Row8', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row7'])
mdb.models['Model-1'].Amplitude(name='Row9', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row3'])
mdb.models['Model-1'].Amplitude(name='Row10', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row4'])
mdb.models['Model-1'].Amplitude(name='Row11', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row6'])
mdb.models['Model-1'].Amplitude(name='Row12', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row6'])
mdb.models['Model-1'].Amplitude(name='Row13', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row6'])
mdb.models['Model-1'].Amplitude(name='Row14', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row4'])
mdb.models['Model-1'].Amplitude(name='Row15', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row6'])
mdb.models['Model-1'].Amplitude(name='Row16', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row8'])
mdb.models['Model-1'].Amplitude(name='Row17', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row8'])
mdb.models['Model-1'].Amplitude(name='Row18', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row8'])
mdb.models['Model-1'].Amplitude(name='Row19', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row8'])
mdb.models['Model-1'].Amplitude(name='Row20', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row8'])
mdb.models['Model-1'].Amplitude(name='Row21', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row10'])
mdb.models['Model-1'].Amplitude(name='Row22', objectToCopy=
    mdb.models['Model-1'].amplitudes['Row4'])
mdb.models['Model-1'].amplitudes['Row2'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.0), (2.0, 0.0), (2.01, 0.0), (
    2.02, 0.0), (2.03, 0.0), (2.04, 0.0), (2.05, 0.0), (2.06, 0.0), (2.07, 
    0.0), (2.08, 0.0), (2.09, 0.0), (2.1, 0.0), (2.11, 0.0), (2.12, 0.0), (
    2.13, 0.0), (2.14, 0.0), (2.15, 0.0), (2.16, 0.0), (2.17, 0.0), (2.18, 
    0.0), (2.19, 0.0), (2.2, 0.0), (2.21, 0.0), (2.22, 0.0), (2.23, 0.0), (
    2.24, 0.0), (2.25, 0.0), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 
    0.0), (2.3, 0.0), (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (
    2.35, 0.0), (2.36, 0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), 
    (2.41, 0.0), (2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 
    0.0), (2.47, 0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (
    2.52, 0.0), (2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 
    0.0), (2.58, 0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (
    2.63, 0.0), (2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 
    0.0), (2.69, 0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (
    2.74, 0.0), (2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 
    0.0), (2.8, 0.0), (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (
    2.85, 0.0), (2.86, 0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), 
    (2.91, 0.0), (2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 
    0.0), (2.97, 0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (
    3.02, 0.0), (3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 
    0.0), (3.08, 0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (
    3.13, 0.0), (3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 
    0.0), (3.19, 0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (
    3.24, 0.0), (3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 
    0.0), (3.3, 0.0), (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (
    3.35, 0.0), (3.36, 0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), 
    (3.41, 0.0), (3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 
    0.0), (3.47, 0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (
    3.52, 0.0), (3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 
    0.0), (3.58, 0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (
    3.63, 0.0), (3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 
    0.0), (3.69, 0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (
    3.74, 0.0), (3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 
    0.0), (3.8, 0.0), (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (
    3.85, 0.0), (3.86, 0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), 
    (3.91, 0.0), (3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 
    0.0), (3.97, 0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (
    4.02, 0.0), (4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 
    0.0), (4.08, 0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (
    4.13, 0.0), (4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 
    0.0), (4.19, 0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (
    4.24, 0.0), (4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 
    0.0), (4.3, 0.0), (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (
    4.35, 0.0), (4.36, 0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), 
    (4.41, 0.0), (4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 
    0.0), (4.47, 0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (
    4.52, 0.0), (4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 
    0.0), (4.58, 0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (
    4.63, 0.0), (4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 
    0.0), (4.69, 0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (
    4.74, 0.0), (4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 
    0.0), (4.8, 0.0), (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (
    4.85, 0.0), (4.86, 0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), 
    (4.91, 0.0), (4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 
    0.0), (4.97, 0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (
    5.02, 0.0), (5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 
    0.0), (5.08, 0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (
    5.13, 0.0), (5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 
    0.0), (5.19, 0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (
    5.24, 0.0), (5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 
    0.0), (5.3, 0.0), (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (
    5.35, 0.0), (5.36, 0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), 
    (5.41, 0.0), (5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 
    0.0), (5.47, 0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (
    5.52, 0.0), (5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 
    0.0), (5.58, 0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (
    5.63, 0.0), (5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 
    0.0), (5.69, 0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (
    5.74, 0.0), (5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 
    0.0), (5.8, 0.0), (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (
    5.85, 0.0), (5.86, 0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), 
    (5.91, 0.0), (5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 
    0.0), (5.97, 0.0), (5.98, 0.0), (5.99, 0.0), (6.0, 0.0), (6.01, 0.0), (
    6.02, 0.0), (6.03, 0.0), (6.04, 0.0), (6.05, 0.0), (6.06, 0.0), (6.07, 
    0.0), (6.08, 0.0), (6.09, 0.0), (6.1, 0.0), (6.11, 0.0), (6.12, 0.0), (
    6.13, 0.0), (6.14, 0.0), (6.15, 0.0), (6.16, 0.0), (6.17, 0.0), (6.18, 
    0.0), (6.19, 0.0), (6.2, 0.0), (6.21, 0.0), (6.22, 0.0), (6.23, 0.0), (
    6.24, 0.0), (6.25, 0.0), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 
    0.0), (6.3, 0.0), (6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (
    6.35, 0.0), (6.36, 0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), 
    (6.41, 0.0), (6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 
    0.0), (6.47, 0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (
    6.52, 0.0), (6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 
    0.0), (6.58, 0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (
    6.63, 0.0), (6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 
    0.0), (6.69, 0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (
    6.74, 0.0), (6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 
    0.0), (6.8, 0.0), (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (
    6.85, 0.0), (6.86, 0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), 
    (6.91, 0.0), (6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 
    0.0), (6.97, 0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (
    7.02, 0.0), (7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 
    0.0), (7.08, 0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (
    7.13, 0.0), (7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 
    0.0), (7.19, 0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (
    7.24, 0.0), (7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 
    0.0), (7.3, 0.0), (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (
    7.35, 0.0), (7.36, 0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), 
    (7.41, 0.0), (7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 
    0.0), (7.47, 0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (
    7.52, 0.0), (7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 
    0.0), (7.58, 0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (
    7.63, 0.0), (7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 
    0.0), (7.69, 0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (
    7.74, 0.0), (7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 
    0.0), (7.8, 0.0), (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (
    7.85, 0.0), (7.86, 0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), 
    (7.91, 0.0), (7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 
    0.0), (7.97, 0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (
    8.02, 0.0), (8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 
    0.0), (8.08, 0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (
    8.13, 0.0), (8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 
    0.0), (8.19, 0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (
    8.24, 0.0), (8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 
    0.0), (8.3, 0.0), (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (
    8.35, 0.0), (8.36, 0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), 
    (8.41, 0.0), (8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 
    0.0), (8.47, 0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (
    8.52, 0.0), (8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 
    0.0), (8.58, 0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (
    8.63, 0.0), (8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 
    0.0), (8.69, 0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (
    8.74, 0.0), (8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 
    0.0), (8.8, 0.0), (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (
    8.85, 0.0), (8.86, 0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), 
    (8.91, 0.0), (8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 
    0.0), (8.97, 0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (
    9.02, 0.0), (9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 
    0.0), (9.08, 0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (
    9.13, 0.0), (9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 
    0.0), (9.19, 0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (
    9.24, 0.0), (9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 
    0.0), (9.3, 0.0), (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (
    9.35, 0.0), (9.36, 0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), 
    (9.41, 0.0), (9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 
    0.0), (9.47, 0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (
    9.52, 0.0), (9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 
    0.0), (9.58, 0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (
    9.63, 0.0), (9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 
    0.0), (9.69, 0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (
    9.74, 0.0), (9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 
    0.0), (9.8, 0.0), (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (
    9.85, 0.0), (9.86, 0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), 
    (9.91, 0.0), (9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 
    0.0), (9.97, 0.0), (9.98, 0.0), (9.99, 0.0), (10.0, 0.0), (10.01, 0.0), (
    10.02, 0.0), (10.03, 0.0), (10.04, 0.0), (10.05, 0.0), (10.06, 0.0), (
    10.07, 0.0), (10.08, 0.0), (10.09, 0.0), (10.1, 0.0), (10.11, 0.0), (10.12, 
    0.0), (10.13, 0.0), (10.14, 0.0), (10.15, 0.0), (10.16, 0.0), (10.17, 0.0), 
    (10.18, 0.0), (10.19, 0.0), (10.2, 0.0), (10.21, 0.0), (10.22, 0.0), (
    10.23, 0.0), (10.24, 0.0), (10.25, 0.0), (10.26, 0.0), (10.27, 0.0), (
    10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (10.33, 
    0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (10.38, 0.0), 
    (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 0.0), (
    10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), (
    10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (10.54, 
    0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (10.59, 0.0), 
    (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 0.0), (
    10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), (10.7, 
    0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (10.75, 0.0), 
    (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 0.0), (
    10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), (
    10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (10.91, 
    0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (10.96, 0.0), 
    (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 0.0), (
    11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), (
    11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (11.12, 
    0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (11.17, 0.0), 
    (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 0.0), (
    11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), (
    11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (11.33, 
    0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (11.38, 0.0), 
    (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 0.0), (
    11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), (
    11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (11.54, 
    0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (11.59, 0.0), 
    (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 0.0), (
    11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), (11.7, 
    0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (11.75, 0.0), 
    (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 0.0), (
    11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), (
    11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (11.91, 
    0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (11.96, 0.0), 
    (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=SOLVER_DEFAULT, timeSpan=
    STEP)
mdb.models['Model-1'].amplitudes['Row4'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.0), (2.0, -3e-05), (2.01, -5e-05), 
    (2.02, -0.0001), (2.03, -0.00015), (2.04, -0.0002), (2.05, -0.00025), (
    2.06, -0.00024), (2.07, -0.00023), (2.08, -0.00022), (2.09, -0.0002), (2.1, 
    -0.00019), (2.11, -0.00018), (2.12, -0.00017), (2.13, -0.00015), (2.14, 
    -0.00014), (2.15, -0.00013), (2.16, -0.00011), (2.17, -0.0001), (2.18, 
    -9e-05), (2.19, -8e-05), (2.2, -6e-05), (2.21, -5e-05), (2.22, -4e-05), (
    2.23, -3e-05), (2.24, -1e-05), (2.25, 0.0), (2.26, 0.0), (2.27, 0.0), (
    2.28, 0.0), (2.29, 0.0), (2.3, 0.0), (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), 
    (2.34, 0.0), (2.35, 0.0), (2.36, 0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 
    0.0), (2.4, 0.0), (2.41, 0.0), (2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (
    2.45, 0.0), (2.46, 0.0), (2.47, 0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), 
    (2.51, 0.0), (2.52, 0.0), (2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 
    0.0), (2.57, 0.0), (2.58, 0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (
    2.62, 0.0), (2.63, 0.0), (2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 
    0.0), (2.68, 0.0), (2.69, 0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (
    2.73, 0.0), (2.74, 0.0), (2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 
    0.0), (2.79, 0.0), (2.8, 0.0), (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (
    2.84, 0.0), (2.85, 0.0), (2.86, 0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 
    0.0), (2.9, 0.0), (2.91, 0.0), (2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (
    2.95, 0.0), (2.96, 0.0), (2.97, 0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), 
    (3.01, 0.0), (3.02, 0.0), (3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 
    0.0), (3.07, 0.0), (3.08, 0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (
    3.12, 0.0), (3.13, 0.0), (3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 
    0.0), (3.18, 0.0), (3.19, 0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (
    3.23, 0.0), (3.24, 0.0), (3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 
    0.0), (3.29, 0.0), (3.3, 0.0), (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (
    3.34, 0.0), (3.35, 0.0), (3.36, 0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 
    0.0), (3.4, 0.0), (3.41, 0.0), (3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (
    3.45, 0.0), (3.46, 0.0), (3.47, 0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), 
    (3.51, 0.0), (3.52, 0.0), (3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 
    0.0), (3.57, 0.0), (3.58, 0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (
    3.62, 0.0), (3.63, 0.0), (3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 
    0.0), (3.68, 0.0), (3.69, 0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (
    3.73, 0.0), (3.74, 0.0), (3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 
    0.0), (3.79, 0.0), (3.8, 0.0), (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (
    3.84, 0.0), (3.85, 0.0), (3.86, 0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 
    0.0), (3.9, 0.0), (3.91, 0.0), (3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (
    3.95, 0.0), (3.96, 0.0), (3.97, 0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), 
    (4.01, 0.0), (4.02, 0.0), (4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 
    0.0), (4.07, 0.0), (4.08, 0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (
    4.12, 0.0), (4.13, 0.0), (4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 
    0.0), (4.18, 0.0), (4.19, 0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (
    4.23, 0.0), (4.24, 0.0), (4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 
    0.0), (4.29, 0.0), (4.3, 0.0), (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (
    4.34, 0.0), (4.35, 0.0), (4.36, 0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 
    0.0), (4.4, 0.0), (4.41, 0.0), (4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (
    4.45, 0.0), (4.46, 0.0), (4.47, 0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), 
    (4.51, 0.0), (4.52, 0.0), (4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 
    0.0), (4.57, 0.0), (4.58, 0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (
    4.62, 0.0), (4.63, 0.0), (4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 
    0.0), (4.68, 0.0), (4.69, 0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (
    4.73, 0.0), (4.74, 0.0), (4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 
    0.0), (4.79, 0.0), (4.8, 0.0), (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (
    4.84, 0.0), (4.85, 0.0), (4.86, 0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 
    0.0), (4.9, 0.0), (4.91, 0.0), (4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (
    4.95, 0.0), (4.96, 0.0), (4.97, 0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), 
    (5.01, 0.0), (5.02, 0.0), (5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 
    0.0), (5.07, 0.0), (5.08, 0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (
    5.12, 0.0), (5.13, 0.0), (5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 
    0.0), (5.18, 0.0), (5.19, 0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (
    5.23, 0.0), (5.24, 0.0), (5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 
    0.0), (5.29, 0.0), (5.3, 0.0), (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (
    5.34, 0.0), (5.35, 0.0), (5.36, 0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 
    0.0), (5.4, 0.0), (5.41, 0.0), (5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (
    5.45, 0.0), (5.46, 0.0), (5.47, 0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), 
    (5.51, 0.0), (5.52, 0.0), (5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 
    0.0), (5.57, 0.0), (5.58, 0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (
    5.62, 0.0), (5.63, 0.0), (5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 
    0.0), (5.68, 0.0), (5.69, 0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (
    5.73, 0.0), (5.74, 0.0), (5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 
    0.0), (5.79, 0.0), (5.8, 0.0), (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (
    5.84, 0.0), (5.85, 0.0), (5.86, 0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 
    0.0), (5.9, 0.0), (5.91, 0.0), (5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (
    5.95, 0.0), (5.96, 0.0), (5.97, 0.0), (5.98, 0.0), (5.99, 0.0), (6.0, 
    -3e-05), (6.01, -5e-05), (6.02, -0.0001), (6.03, -0.00015), (6.04, 
    -0.0002), (6.05, -0.00025), (6.06, -0.00024), (6.07, -0.00023), (6.08, 
    -0.00022), (6.09, -0.0002), (6.1, -0.00019), (6.11, -0.00018), (6.12, 
    -0.00017), (6.13, -0.00015), (6.14, -0.00014), (6.15, -0.00013), (6.16, 
    -0.00011), (6.17, -0.0001), (6.18, -9e-05), (6.19, -8e-05), (6.2, -6e-05), 
    (6.21, -5e-05), (6.22, -4e-05), (6.23, -3e-05), (6.24, -1e-05), (6.25, 
    0.0), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (
    6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 
    0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (
    6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 
    0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (
    6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 
    0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (
    6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 
    0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (
    6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), 
    (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 
    0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (
    6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 
    0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (
    7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 
    0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (
    7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 
    0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (
    7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), 
    (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 
    0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (
    7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 
    0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (
    7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 
    0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (
    7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 
    0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (
    7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), 
    (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 
    0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (
    7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 
    0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (
    8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 
    0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (
    8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 
    0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (
    8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), 
    (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 
    0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (
    8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 
    0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (
    8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 
    0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (
    8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 
    0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (
    8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), 
    (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 
    0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (
    8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 
    0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (
    9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 
    0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (
    9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 
    0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (
    9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), 
    (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 
    0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (
    9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 
    0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (
    9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 
    0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (
    9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 
    0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (
    9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), 
    (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 
    0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (
    9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 
    0.0), (9.98, 0.0), (9.99, 0.0), (10.0, -3e-05), (10.01, -5e-05), (10.02, 
    -0.0001), (10.03, -0.00015), (10.04, -0.0002), (10.05, -0.00025), (10.06, 
    -0.00024), (10.07, -0.00023), (10.08, -0.00022), (10.09, -0.0002), (10.1, 
    -0.00019), (10.11, -0.00018), (10.12, -0.00017), (10.13, -0.00015), (10.14, 
    -0.00014), (10.15, -0.00013), (10.16, -0.00011), (10.17, -0.0001), (10.18, 
    -9e-05), (10.19, -8e-05), (10.2, -6e-05), (10.21, -5e-05), (10.22, -4e-05), 
    (10.23, -3e-05), (10.24, -1e-05), (10.25, 0.0), (10.26, 0.0), (10.27, 0.0), 
    (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (
    10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (
    10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 
    0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), 
    (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (
    10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (
    10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 
    0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), 
    (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (
    10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 
    0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), 
    (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (
    10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (
    10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 
    0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), 
    (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (
    11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (
    11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 
    0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), 
    (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (
    11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (
    11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 
    0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), 
    (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (
    11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (
    11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 
    0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), 
    (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (
    11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 
    0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), 
    (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (
    11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (
    11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=
    SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row5'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -2e-05), (2.0, -0.00311), (2.01, 
    -0.0062), (2.02, -0.01237), (2.03, -0.01856), (2.04, -0.02465), (2.05, 
    -0.03074), (2.06, -0.02939), (2.07, -0.02784), (2.08, -0.02629), (2.09, 
    -0.02475), (2.1, -0.0232), (2.11, -0.02165), (2.12, -0.02011), (2.13, 
    -0.01856), (2.14, -0.01701), (2.15, -0.01547), (2.16, -0.01392), (2.17, 
    -0.01237), (2.18, -0.01083), (2.19, -0.00928), (2.2, -0.00773), (2.21, 
    -0.00619), (2.22, -0.00464), (2.23, -0.00309), (2.24, -0.00163), (2.25, 
    -0.00018), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), 
    (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, -2e-05), (6.0, -0.00311), (6.01, -0.0062), (6.02, 
    -0.01237), (6.03, -0.01856), (6.04, -0.02465), (6.05, -0.03074), (6.06, 
    -0.02939), (6.07, -0.02784), (6.08, -0.02629), (6.09, -0.02475), (6.1, 
    -0.0232), (6.11, -0.02165), (6.12, -0.02011), (6.13, -0.01856), (6.14, 
    -0.01701), (6.15, -0.01547), (6.16, -0.01392), (6.17, -0.01237), (6.18, 
    -0.01083), (6.19, -0.00928), (6.2, -0.00773), (6.21, -0.00619), (6.22, 
    -0.00464), (6.23, -0.00309), (6.24, -0.00163), (6.25, -0.00018), (6.26, 
    0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), (
    6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, -2e-05), (10.0, -0.00311), (10.01, -0.0062), (10.02, 
    -0.01237), (10.03, -0.01856), (10.04, -0.02465), (10.05, -0.03074), (10.06, 
    -0.02939), (10.07, -0.02784), (10.08, -0.02629), (10.09, -0.02475), (10.1, 
    -0.0232), (10.11, -0.02165), (10.12, -0.02011), (10.13, -0.01856), (10.14, 
    -0.01701), (10.15, -0.01547), (10.16, -0.01392), (10.17, -0.01237), (10.18, 
    -0.01083), (10.19, -0.00928), (10.2, -0.00773), (10.21, -0.00619), (10.22, 
    -0.00464), (10.23, -0.00309), (10.24, -0.00163), (10.25, -0.00018), (10.26, 
    0.0), (10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), 
    (10.32, 0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (
    10.37, 0.0), (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 
    0.0), (10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), 
    (10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (
    10.53, 0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (
    10.58, 0.0), (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 
    0.0), (10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), 
    (10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (
    10.74, 0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (
    10.79, 0.0), (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 
    0.0), (10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), 
    (10.9, 0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (
    10.95, 0.0), (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 
    0.0), (11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), 
    (11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (
    11.11, 0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (
    11.16, 0.0), (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 
    0.0), (11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), 
    (11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (
    11.32, 0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (
    11.37, 0.0), (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 
    0.0), (11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), 
    (11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (
    11.53, 0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (
    11.58, 0.0), (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 
    0.0), (11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), 
    (11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (
    11.74, 0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (
    11.79, 0.0), (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 
    0.0), (11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), 
    (11.9, 0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (
    11.95, 0.0), (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), 
    smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row6'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -0.00077), (2.0, -0.15488), (2.01, 
    -0.30898), (2.02, -0.61641), (2.03, -0.92461), (2.04, -1.22807), (2.05, 
    -1.53146), (2.06, -1.46396), (2.07, -1.38691), (2.08, -1.30986), (2.09, 
    -1.23281), (2.1, -1.15576), (2.11, -1.07871), (2.12, -1.00166), (2.13, 
    -0.92461), (2.14, -0.84756), (2.15, -0.77051), (2.16, -0.69346), (2.17, 
    -0.61641), (2.18, -0.53936), (2.19, -0.4623), (2.2, -0.38525), (2.21, 
    -0.3082), (2.22, -0.23115), (2.23, -0.1541), (2.24, -0.08131), (2.25, 
    -0.00907), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), 
    (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, -0.00077), (6.0, -0.15488), (6.01, -0.30898), (
    6.02, -0.61641), (6.03, -0.92461), (6.04, -1.22807), (6.05, -1.53146), (
    6.06, -1.46396), (6.07, -1.38691), (6.08, -1.30986), (6.09, -1.23281), (
    6.1, -1.15576), (6.11, -1.07871), (6.12, -1.00166), (6.13, -0.92461), (
    6.14, -0.84756), (6.15, -0.77051), (6.16, -0.69346), (6.17, -0.61641), (
    6.18, -0.53936), (6.19, -0.4623), (6.2, -0.38525), (6.21, -0.3082), (6.22, 
    -0.23115), (6.23, -0.1541), (6.24, -0.08131), (6.25, -0.00907), (6.26, 
    0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), (
    6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, -0.00077), (10.0, -0.15488), (10.01, -0.30898), (10.02, 
    -0.61641), (10.03, -0.92461), (10.04, -1.22807), (10.05, -1.53146), (10.06, 
    -1.46396), (10.07, -1.38691), (10.08, -1.30986), (10.09, -1.23281), (10.1, 
    -1.15576), (10.11, -1.07871), (10.12, -1.00166), (10.13, -0.92461), (10.14, 
    -0.84756), (10.15, -0.77051), (10.16, -0.69346), (10.17, -0.61641), (10.18, 
    -0.53936), (10.19, -0.4623), (10.2, -0.38525), (10.21, -0.3082), (10.22, 
    -0.23115), (10.23, -0.1541), (10.24, -0.08131), (10.25, -0.00907), (10.26, 
    0.0), (10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), 
    (10.32, 0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (
    10.37, 0.0), (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 
    0.0), (10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), 
    (10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (
    10.53, 0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (
    10.58, 0.0), (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 
    0.0), (10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), 
    (10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (
    10.74, 0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (
    10.79, 0.0), (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 
    0.0), (10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), 
    (10.9, 0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (
    10.95, 0.0), (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 
    0.0), (11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), 
    (11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (
    11.11, 0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (
    11.16, 0.0), (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 
    0.0), (11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), 
    (11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (
    11.32, 0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (
    11.37, 0.0), (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 
    0.0), (11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), 
    (11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (
    11.53, 0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (
    11.58, 0.0), (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 
    0.0), (11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), 
    (11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (
    11.74, 0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (
    11.79, 0.0), (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 
    0.0), (11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), 
    (11.9, 0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (
    11.95, 0.0), (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), 
    smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row7'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -0.01623), (2.0, -3.24571), (2.01, 
    -6.47519), (2.02, -12.91792), (2.03, -19.37688), (2.04, -25.73644), (2.05, 
    -32.09447), (2.06, -30.68005), (2.07, -29.06531), (2.08, -27.45057), (2.09, 
    -25.83584), (2.1, -24.2211), (2.11, -22.60636), (2.12, -20.99162), (2.13, 
    -19.37688), (2.14, -17.76214), (2.15, -16.1474), (2.16, -14.53266), (2.17, 
    -12.91792), (2.18, -11.30318), (2.19, -9.68844), (2.2, -8.0737), (2.21, 
    -6.45896), (2.22, -4.84422), (2.23, -3.22948), (2.24, -1.704), (2.25, 
    -0.19018), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), 
    (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, -0.01623), (6.0, -3.24571), (6.01, -6.47519), (
    6.02, -12.91792), (6.03, -19.37688), (6.04, -25.73644), (6.05, -32.09447), 
    (6.06, -30.68005), (6.07, -29.06531), (6.08, -27.45057), (6.09, -25.83584), 
    (6.1, -24.2211), (6.11, -22.60636), (6.12, -20.99162), (6.13, -19.37688), (
    6.14, -17.76214), (6.15, -16.1474), (6.16, -14.53266), (6.17, -12.91792), (
    6.18, -11.30318), (6.19, -9.68844), (6.2, -8.0737), (6.21, -6.45896), (
    6.22, -4.84422), (6.23, -3.22948), (6.24, -1.704), (6.25, -0.19018), (6.26, 
    0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), (
    6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, -0.01623), (10.0, -3.24571), (10.01, -6.47519), (10.02, 
    -12.91792), (10.03, -19.37688), (10.04, -25.73644), (10.05, -32.09447), (
    10.06, -30.68005), (10.07, -29.06531), (10.08, -27.45057), (10.09, 
    -25.83584), (10.1, -24.2211), (10.11, -22.60636), (10.12, -20.99162), (
    10.13, -19.37688), (10.14, -17.76214), (10.15, -16.1474), (10.16, 
    -14.53266), (10.17, -12.91792), (10.18, -11.30318), (10.19, -9.68844), (
    10.2, -8.0737), (10.21, -6.45896), (10.22, -4.84422), (10.23, -3.22948), (
    10.24, -1.704), (10.25, -0.19018), (10.26, 0.0), (10.27, 0.0), (10.28, 
    0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (10.33, 0.0), 
    (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (10.38, 0.0), (
    10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 0.0), (10.44, 
    0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), (10.49, 0.0), 
    (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (10.54, 0.0), (
    10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (10.59, 0.0), (10.6, 
    0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 0.0), (10.65, 0.0), 
    (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), (10.7, 0.0), (
    10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (10.75, 0.0), (
    10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 0.0), (10.81, 
    0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), (10.86, 0.0), 
    (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (10.91, 0.0), (
    10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (10.96, 0.0), (
    10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 0.0), (11.02, 
    0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), (11.07, 0.0), 
    (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (11.12, 0.0), (
    11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (11.17, 0.0), (
    11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 0.0), (11.23, 
    0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), (11.28, 0.0), 
    (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (11.33, 0.0), (
    11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (11.38, 0.0), (
    11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 0.0), (11.44, 
    0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), (11.49, 0.0), 
    (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (11.54, 0.0), (
    11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (11.59, 0.0), (11.6, 
    0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 0.0), (11.65, 0.0), 
    (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), (11.7, 0.0), (
    11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (11.75, 0.0), (
    11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 0.0), (11.81, 
    0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), (11.86, 0.0), 
    (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (11.91, 0.0), (
    11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (11.96, 0.0), (
    11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=SOLVER_DEFAULT, timeSpan=
    STEP)
mdb.models['Model-1'].amplitudes['Row8'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -0.14786), (2.0, -29.57278), (2.01, 
    -58.99769), (2.02, -117.69965), (2.03, -176.54947), (2.04, -234.49363), (
    2.05, -292.42392), (2.06, -279.53666), (2.07, -264.8242), (2.08, 
    -250.11175), (2.09, -235.39929), (2.1, -220.68684), (2.11, -205.97438), (
    2.12, -191.26193), (2.13, -176.54947), (2.14, -161.83701), (2.15, 
    -147.12456), (2.16, -132.4121), (2.17, -117.69965), (2.18, -102.98719), (
    2.19, -88.27473), (2.2, -73.56228), (2.21, -58.84982), (2.22, -44.13737), (
    2.23, -29.42491), (2.24, -15.52571), (2.25, -1.73278), (2.26, 0.0), (2.27, 
    0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), (2.31, 0.0), (2.32, 0.0), (
    2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 0.0), (2.37, 0.0), (2.38, 
    0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (2.42, 0.0), (2.43, 0.0), (
    2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 0.0), (2.48, 0.0), (2.49, 
    0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (2.53, 0.0), (2.54, 0.0), (
    2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 0.0), (2.59, 0.0), (2.6, 0.0), 
    (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (2.64, 0.0), (2.65, 0.0), (2.66, 
    0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 0.0), (2.7, 0.0), (2.71, 0.0), (
    2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (2.75, 0.0), (2.76, 0.0), (2.77, 
    0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), (2.81, 0.0), (2.82, 0.0), (
    2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 0.0), (2.87, 0.0), (2.88, 
    0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (2.92, 0.0), (2.93, 0.0), (
    2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 0.0), (2.98, 0.0), (2.99, 
    0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (3.03, 0.0), (3.04, 0.0), (
    3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 0.0), (3.09, 0.0), (3.1, 0.0), 
    (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (3.14, 0.0), (3.15, 0.0), (3.16, 
    0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 0.0), (3.2, 0.0), (3.21, 0.0), (
    3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (3.25, 0.0), (3.26, 0.0), (3.27, 
    0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), (3.31, 0.0), (3.32, 0.0), (
    3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 0.0), (3.37, 0.0), (3.38, 
    0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (3.42, 0.0), (3.43, 0.0), (
    3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 0.0), (3.48, 0.0), (3.49, 
    0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (3.53, 0.0), (3.54, 0.0), (
    3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 0.0), (3.59, 0.0), (3.6, 0.0), 
    (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (3.64, 0.0), (3.65, 0.0), (3.66, 
    0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 0.0), (3.7, 0.0), (3.71, 0.0), (
    3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (3.75, 0.0), (3.76, 0.0), (3.77, 
    0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), (3.81, 0.0), (3.82, 0.0), (
    3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 0.0), (3.87, 0.0), (3.88, 
    0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (3.92, 0.0), (3.93, 0.0), (
    3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 0.0), (3.98, 0.0), (3.99, 
    0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (4.03, 0.0), (4.04, 0.0), (
    4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 0.0), (4.09, 0.0), (4.1, 0.0), 
    (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (4.14, 0.0), (4.15, 0.0), (4.16, 
    0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 0.0), (4.2, 0.0), (4.21, 0.0), (
    4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (4.25, 0.0), (4.26, 0.0), (4.27, 
    0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), (4.31, 0.0), (4.32, 0.0), (
    4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 0.0), (4.37, 0.0), (4.38, 
    0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (4.42, 0.0), (4.43, 0.0), (
    4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 0.0), (4.48, 0.0), (4.49, 
    0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (4.53, 0.0), (4.54, 0.0), (
    4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 0.0), (4.59, 0.0), (4.6, 0.0), 
    (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (4.64, 0.0), (4.65, 0.0), (4.66, 
    0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 0.0), (4.7, 0.0), (4.71, 0.0), (
    4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (4.75, 0.0), (4.76, 0.0), (4.77, 
    0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), (4.81, 0.0), (4.82, 0.0), (
    4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 0.0), (4.87, 0.0), (4.88, 
    0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (4.92, 0.0), (4.93, 0.0), (
    4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 0.0), (4.98, 0.0), (4.99, 
    0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (5.03, 0.0), (5.04, 0.0), (
    5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 0.0), (5.09, 0.0), (5.1, 0.0), 
    (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (5.14, 0.0), (5.15, 0.0), (5.16, 
    0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 0.0), (5.2, 0.0), (5.21, 0.0), (
    5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (5.25, 0.0), (5.26, 0.0), (5.27, 
    0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), (5.31, 0.0), (5.32, 0.0), (
    5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 0.0), (5.37, 0.0), (5.38, 
    0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (5.42, 0.0), (5.43, 0.0), (
    5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 0.0), (5.48, 0.0), (5.49, 
    0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (5.53, 0.0), (5.54, 0.0), (
    5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 0.0), (5.59, 0.0), (5.6, 0.0), 
    (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (5.64, 0.0), (5.65, 0.0), (5.66, 
    0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 0.0), (5.7, 0.0), (5.71, 0.0), (
    5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (5.75, 0.0), (5.76, 0.0), (5.77, 
    0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), (5.81, 0.0), (5.82, 0.0), (
    5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 0.0), (5.87, 0.0), (5.88, 
    0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (5.92, 0.0), (5.93, 0.0), (
    5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 0.0), (5.98, 0.0), (5.99, 
    -0.14786), (6.0, -29.57278), (6.01, -58.99769), (6.02, -117.69965), (6.03, 
    -176.54947), (6.04, -234.49363), (6.05, -292.42392), (6.06, -279.53666), (
    6.07, -264.8242), (6.08, -250.11175), (6.09, -235.39929), (6.1, 
    -220.68684), (6.11, -205.97438), (6.12, -191.26193), (6.13, -176.54947), (
    6.14, -161.83701), (6.15, -147.12456), (6.16, -132.4121), (6.17, 
    -117.69965), (6.18, -102.98719), (6.19, -88.27473), (6.2, -73.56228), (
    6.21, -58.84982), (6.22, -44.13737), (6.23, -29.42491), (6.24, -15.52571), 
    (6.25, -1.73278), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 
    0.0), (6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (
    6.36, 0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), 
    (6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 
    0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (
    6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 
    0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (
    6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 
    0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (
    6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), 
    (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 
    0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (
    6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 
    0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (
    7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 
    0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (
    7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 
    0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (
    7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), 
    (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 
    0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (
    7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 
    0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (
    7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 
    0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (
    7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 
    0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (
    7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), 
    (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 
    0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (
    7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 
    0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (
    8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 
    0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (
    8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 
    0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (
    8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), 
    (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 
    0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (
    8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 
    0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (
    8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 
    0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (
    8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 
    0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (
    8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), 
    (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 
    0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (
    8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 
    0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (
    9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 
    0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (
    9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 
    0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (
    9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), 
    (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 
    0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (
    9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 
    0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (
    9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 
    0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (
    9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 
    0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (
    9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), 
    (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 
    0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (
    9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 
    0.0), (9.98, 0.0), (9.99, -0.14786), (10.0, -29.57278), (10.01, -58.99769), 
    (10.02, -117.69965), (10.03, -176.54947), (10.04, -234.49363), (10.05, 
    -292.42392), (10.06, -279.53666), (10.07, -264.8242), (10.08, -250.11175), 
    (10.09, -235.39929), (10.1, -220.68684), (10.11, -205.97438), (10.12, 
    -191.26193), (10.13, -176.54947), (10.14, -161.83701), (10.15, -147.12456), 
    (10.16, -132.4121), (10.17, -117.69965), (10.18, -102.98719), (10.19, 
    -88.27473), (10.2, -73.56228), (10.21, -58.84982), (10.22, -44.13737), (
    10.23, -29.42491), (10.24, -15.52571), (10.25, -1.73278), (10.26, 0.0), (
    10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 
    0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), 
    (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (
    10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (
    10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 
    0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), 
    (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (
    10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (
    10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 
    0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), 
    (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (
    10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 
    0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), 
    (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (
    11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (
    11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 
    0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), 
    (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (
    11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (
    11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 
    0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), 
    (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (
    11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (
    11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 
    0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), 
    (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (
    11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (
    11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 
    0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), 
    (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (
    11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 
    0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), 
    (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=
    SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row9'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.41887), (2.0, 83.7743), (2.01, 
    167.12973), (2.02, 333.42172), (2.03, 500.13258), (2.04, 664.27785), (2.05, 
    828.38385), (2.06, 791.87658), (2.07, 750.19886), (2.08, 708.52115), (2.09, 
    666.84343), (2.1, 625.16572), (2.11, 583.488), (2.12, 541.81029), (2.13, 
    500.13258), (2.14, 458.45486), (2.15, 416.77715), (2.16, 375.09943), (2.17, 
    333.42172), (2.18, 291.744), (2.19, 250.06629), (2.2, 208.38857), (2.21, 
    166.71086), (2.22, 125.03314), (2.23, 83.35543), (2.24, 43.98151), (2.25, 
    4.90865), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), (
    2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, 0.41887), (6.0, 83.7743), (6.01, 167.12973), (
    6.02, 333.42172), (6.03, 500.13258), (6.04, 664.27785), (6.05, 828.38385), 
    (6.06, 791.87658), (6.07, 750.19886), (6.08, 708.52115), (6.09, 666.84343), 
    (6.1, 625.16572), (6.11, 583.488), (6.12, 541.81029), (6.13, 500.13258), (
    6.14, 458.45486), (6.15, 416.77715), (6.16, 375.09943), (6.17, 333.42172), 
    (6.18, 291.744), (6.19, 250.06629), (6.2, 208.38857), (6.21, 166.71086), (
    6.22, 125.03314), (6.23, 83.35543), (6.24, 43.98151), (6.25, 4.90865), (
    6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), 
    (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, 0.41887), (10.0, 83.7743), (10.01, 167.12973), (10.02, 
    333.42172), (10.03, 500.13258), (10.04, 664.27785), (10.05, 828.38385), (
    10.06, 791.87658), (10.07, 750.19886), (10.08, 708.52115), (10.09, 
    666.84343), (10.1, 625.16572), (10.11, 583.488), (10.12, 541.81029), (
    10.13, 500.13258), (10.14, 458.45486), (10.15, 416.77715), (10.16, 
    375.09943), (10.17, 333.42172), (10.18, 291.744), (10.19, 250.06629), (
    10.2, 208.38857), (10.21, 166.71086), (10.22, 125.03314), (10.23, 
    83.35543), (10.24, 43.98151), (10.25, 4.90865), (10.26, 0.0), (10.27, 0.0), 
    (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (
    10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (
    10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 
    0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), 
    (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (
    10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (
    10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 
    0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), 
    (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (
    10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 
    0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), 
    (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (
    10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (
    10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 
    0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), 
    (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (
    11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (
    11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 
    0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), 
    (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (
    11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (
    11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 
    0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), 
    (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (
    11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (
    11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 
    0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), 
    (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (
    11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 
    0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), 
    (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (
    11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (
    11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=
    SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row10'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.41887), (2.0, 83.7743), (2.01, 
    167.12973), (2.02, 333.42172), (2.03, 500.13258), (2.04, 664.27785), (2.05, 
    828.38385), (2.06, 791.87658), (2.07, 750.19886), (2.08, 708.52115), (2.09, 
    666.84343), (2.1, 625.16572), (2.11, 583.488), (2.12, 541.81029), (2.13, 
    500.13258), (2.14, 458.45486), (2.15, 416.77715), (2.16, 375.09943), (2.17, 
    333.42172), (2.18, 291.744), (2.19, 250.06629), (2.2, 208.38857), (2.21, 
    166.71086), (2.22, 125.03314), (2.23, 83.35543), (2.24, 43.98151), (2.25, 
    4.90865), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), (
    2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, 0.41887), (6.0, 83.7743), (6.01, 167.12973), (
    6.02, 333.42172), (6.03, 500.13258), (6.04, 664.27785), (6.05, 828.38385), 
    (6.06, 791.87658), (6.07, 750.19886), (6.08, 708.52115), (6.09, 666.84343), 
    (6.1, 625.16572), (6.11, 583.488), (6.12, 541.81029), (6.13, 500.13258), (
    6.14, 458.45486), (6.15, 416.77715), (6.16, 375.09943), (6.17, 333.42172), 
    (6.18, 291.744), (6.19, 250.06629), (6.2, 208.38857), (6.21, 166.71086), (
    6.22, 125.03314), (6.23, 83.35543), (6.24, 43.98151), (6.25, 4.90865), (
    6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), 
    (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, 0.41887), (10.0, 83.7743), (10.01, 167.12973), (10.02, 
    333.42172), (10.03, 500.13258), (10.04, 664.27785), (10.05, 828.38385), (
    10.06, 791.87658), (10.07, 750.19886), (10.08, 708.52115), (10.09, 
    666.84343), (10.1, 625.16572), (10.11, 583.488), (10.12, 541.81029), (
    10.13, 500.13258), (10.14, 458.45486), (10.15, 416.77715), (10.16, 
    375.09943), (10.17, 333.42172), (10.18, 291.744), (10.19, 250.06629), (
    10.2, 208.38857), (10.21, 166.71086), (10.22, 125.03314), (10.23, 
    83.35543), (10.24, 43.98151), (10.25, 4.90865), (10.26, 0.0), (10.27, 0.0), 
    (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (
    10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (
    10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 
    0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), 
    (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (
    10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (
    10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 
    0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), 
    (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (
    10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 
    0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), 
    (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (
    10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (
    10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 
    0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), 
    (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (
    11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (
    11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 
    0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), 
    (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (
    11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (
    11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 
    0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), 
    (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (
    11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (
    11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 
    0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), 
    (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (
    11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 
    0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), 
    (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (
    11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (
    11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=
    SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row11'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.71099), (2.0, 142.1977), (2.01, 
    283.68442), (2.02, 565.94686), (2.03, 848.92028), (2.04, 1127.53891), (
    2.05, 1406.09087), (2.06, 1344.12378), (2.07, 1273.38042), (2.08, 
    1202.63707), (2.09, 1131.89371), (2.1, 1061.15035), (2.11, 990.407), (2.12, 
    919.66364), (2.13, 848.92028), (2.14, 778.17693), (2.15, 707.43357), (2.16, 
    636.69021), (2.17, 565.94686), (2.18, 495.2035), (2.19, 424.46014), (2.2, 
    353.71678), (2.21, 282.97343), (2.22, 212.23007), (2.23, 141.48671), (2.24, 
    74.65379), (2.25, 8.3319), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 
    0.0), (2.3, 0.0), (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (
    2.35, 0.0), (2.36, 0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), 
    (2.41, 0.0), (2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 
    0.0), (2.47, 0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (
    2.52, 0.0), (2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 
    0.0), (2.58, 0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (
    2.63, 0.0), (2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 
    0.0), (2.69, 0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (
    2.74, 0.0), (2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 
    0.0), (2.8, 0.0), (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (
    2.85, 0.0), (2.86, 0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), 
    (2.91, 0.0), (2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 
    0.0), (2.97, 0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (
    3.02, 0.0), (3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 
    0.0), (3.08, 0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (
    3.13, 0.0), (3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 
    0.0), (3.19, 0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (
    3.24, 0.0), (3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 
    0.0), (3.3, 0.0), (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (
    3.35, 0.0), (3.36, 0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), 
    (3.41, 0.0), (3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 
    0.0), (3.47, 0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (
    3.52, 0.0), (3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 
    0.0), (3.58, 0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (
    3.63, 0.0), (3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 
    0.0), (3.69, 0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (
    3.74, 0.0), (3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 
    0.0), (3.8, 0.0), (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (
    3.85, 0.0), (3.86, 0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), 
    (3.91, 0.0), (3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 
    0.0), (3.97, 0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (
    4.02, 0.0), (4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 
    0.0), (4.08, 0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (
    4.13, 0.0), (4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 
    0.0), (4.19, 0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (
    4.24, 0.0), (4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 
    0.0), (4.3, 0.0), (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (
    4.35, 0.0), (4.36, 0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), 
    (4.41, 0.0), (4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 
    0.0), (4.47, 0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (
    4.52, 0.0), (4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 
    0.0), (4.58, 0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (
    4.63, 0.0), (4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 
    0.0), (4.69, 0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (
    4.74, 0.0), (4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 
    0.0), (4.8, 0.0), (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (
    4.85, 0.0), (4.86, 0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), 
    (4.91, 0.0), (4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 
    0.0), (4.97, 0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (
    5.02, 0.0), (5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 
    0.0), (5.08, 0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (
    5.13, 0.0), (5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 
    0.0), (5.19, 0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (
    5.24, 0.0), (5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 
    0.0), (5.3, 0.0), (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (
    5.35, 0.0), (5.36, 0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), 
    (5.41, 0.0), (5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 
    0.0), (5.47, 0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (
    5.52, 0.0), (5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 
    0.0), (5.58, 0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (
    5.63, 0.0), (5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 
    0.0), (5.69, 0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (
    5.74, 0.0), (5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 
    0.0), (5.8, 0.0), (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (
    5.85, 0.0), (5.86, 0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), 
    (5.91, 0.0), (5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 
    0.0), (5.97, 0.0), (5.98, 0.0), (5.99, 0.71099), (6.0, 142.1977), (6.01, 
    283.68442), (6.02, 565.94686), (6.03, 848.92028), (6.04, 1127.53891), (
    6.05, 1406.09087), (6.06, 1344.12378), (6.07, 1273.38042), (6.08, 
    1202.63707), (6.09, 1131.89371), (6.1, 1061.15035), (6.11, 990.407), (6.12, 
    919.66364), (6.13, 848.92028), (6.14, 778.17693), (6.15, 707.43357), (6.16, 
    636.69021), (6.17, 565.94686), (6.18, 495.2035), (6.19, 424.46014), (6.2, 
    353.71678), (6.21, 282.97343), (6.22, 212.23007), (6.23, 141.48671), (6.24, 
    74.65379), (6.25, 8.3319), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 
    0.0), (6.3, 0.0), (6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (
    6.35, 0.0), (6.36, 0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), 
    (6.41, 0.0), (6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 
    0.0), (6.47, 0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (
    6.52, 0.0), (6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 
    0.0), (6.58, 0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (
    6.63, 0.0), (6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 
    0.0), (6.69, 0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (
    6.74, 0.0), (6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 
    0.0), (6.8, 0.0), (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (
    6.85, 0.0), (6.86, 0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), 
    (6.91, 0.0), (6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 
    0.0), (6.97, 0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (
    7.02, 0.0), (7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 
    0.0), (7.08, 0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (
    7.13, 0.0), (7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 
    0.0), (7.19, 0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (
    7.24, 0.0), (7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 
    0.0), (7.3, 0.0), (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (
    7.35, 0.0), (7.36, 0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), 
    (7.41, 0.0), (7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 
    0.0), (7.47, 0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (
    7.52, 0.0), (7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 
    0.0), (7.58, 0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (
    7.63, 0.0), (7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 
    0.0), (7.69, 0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (
    7.74, 0.0), (7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 
    0.0), (7.8, 0.0), (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (
    7.85, 0.0), (7.86, 0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), 
    (7.91, 0.0), (7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 
    0.0), (7.97, 0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (
    8.02, 0.0), (8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 
    0.0), (8.08, 0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (
    8.13, 0.0), (8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 
    0.0), (8.19, 0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (
    8.24, 0.0), (8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 
    0.0), (8.3, 0.0), (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (
    8.35, 0.0), (8.36, 0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), 
    (8.41, 0.0), (8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 
    0.0), (8.47, 0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (
    8.52, 0.0), (8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 
    0.0), (8.58, 0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (
    8.63, 0.0), (8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 
    0.0), (8.69, 0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (
    8.74, 0.0), (8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 
    0.0), (8.8, 0.0), (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (
    8.85, 0.0), (8.86, 0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), 
    (8.91, 0.0), (8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 
    0.0), (8.97, 0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (
    9.02, 0.0), (9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 
    0.0), (9.08, 0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (
    9.13, 0.0), (9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 
    0.0), (9.19, 0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (
    9.24, 0.0), (9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 
    0.0), (9.3, 0.0), (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (
    9.35, 0.0), (9.36, 0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), 
    (9.41, 0.0), (9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 
    0.0), (9.47, 0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (
    9.52, 0.0), (9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 
    0.0), (9.58, 0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (
    9.63, 0.0), (9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 
    0.0), (9.69, 0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (
    9.74, 0.0), (9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 
    0.0), (9.8, 0.0), (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (
    9.85, 0.0), (9.86, 0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), 
    (9.91, 0.0), (9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 
    0.0), (9.97, 0.0), (9.98, 0.0), (9.99, 0.71099), (10.0, 142.1977), (10.01, 
    283.68442), (10.02, 565.94686), (10.03, 848.92028), (10.04, 1127.53891), (
    10.05, 1406.09087), (10.06, 1344.12378), (10.07, 1273.38042), (10.08, 
    1202.63707), (10.09, 1131.89371), (10.1, 1061.15035), (10.11, 990.407), (
    10.12, 919.66364), (10.13, 848.92028), (10.14, 778.17693), (10.15, 
    707.43357), (10.16, 636.69021), (10.17, 565.94686), (10.18, 495.2035), (
    10.19, 424.46014), (10.2, 353.71678), (10.21, 282.97343), (10.22, 
    212.23007), (10.23, 141.48671), (10.24, 74.65379), (10.25, 8.3319), (10.26, 
    0.0), (10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), 
    (10.32, 0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (
    10.37, 0.0), (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 
    0.0), (10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), 
    (10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (
    10.53, 0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (
    10.58, 0.0), (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 
    0.0), (10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), 
    (10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (
    10.74, 0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (
    10.79, 0.0), (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 
    0.0), (10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), 
    (10.9, 0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (
    10.95, 0.0), (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 
    0.0), (11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), 
    (11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (
    11.11, 0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (
    11.16, 0.0), (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 
    0.0), (11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), 
    (11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (
    11.32, 0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (
    11.37, 0.0), (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 
    0.0), (11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), 
    (11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (
    11.53, 0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (
    11.58, 0.0), (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 
    0.0), (11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), 
    (11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (
    11.74, 0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (
    11.79, 0.0), (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 
    0.0), (11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), 
    (11.9, 0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (
    11.95, 0.0), (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), 
    smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row12'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.58472), (2.0, 116.94388), (2.01, 
    233.30303), (2.02, 465.43663), (2.03, 698.15494), (2.04, 927.29185), (2.05, 
    1156.37394), (2.06, 1105.41199), (2.07, 1047.23241), (2.08, 989.05283), (
    2.09, 930.87326), (2.1, 872.69368), (2.11, 814.5141), (2.12, 756.33452), (
    2.13, 698.15494), (2.14, 639.97536), (2.15, 581.79579), (2.16, 523.61621), 
    (2.17, 465.43663), (2.18, 407.25705), (2.19, 349.07747), (2.2, 290.89789), 
    (2.21, 232.71831), (2.22, 174.53874), (2.23, 116.35916), (2.24, 61.39554), 
    (2.25, 6.85218), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 
    0.0), (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (
    2.36, 0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), 
    (2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, 0.58472), (6.0, 116.94388), (6.01, 233.30303), (
    6.02, 465.43663), (6.03, 698.15494), (6.04, 927.29185), (6.05, 1156.37394), 
    (6.06, 1105.41199), (6.07, 1047.23241), (6.08, 989.05283), (6.09, 
    930.87326), (6.1, 872.69368), (6.11, 814.5141), (6.12, 756.33452), (6.13, 
    698.15494), (6.14, 639.97536), (6.15, 581.79579), (6.16, 523.61621), (6.17, 
    465.43663), (6.18, 407.25705), (6.19, 349.07747), (6.2, 290.89789), (6.21, 
    232.71831), (6.22, 174.53874), (6.23, 116.35916), (6.24, 61.39554), (6.25, 
    6.85218), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (
    6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 
    0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (
    6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 
    0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (
    6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 
    0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (
    6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 
    0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (
    6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), 
    (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 
    0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (
    6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 
    0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (
    7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 
    0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (
    7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 
    0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (
    7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), 
    (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 
    0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (
    7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 
    0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (
    7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 
    0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (
    7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 
    0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (
    7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), 
    (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 
    0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (
    7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 
    0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (
    8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 
    0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (
    8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 
    0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (
    8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), 
    (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 
    0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (
    8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 
    0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (
    8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 
    0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (
    8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 
    0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (
    8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), 
    (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 
    0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (
    8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 
    0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (
    9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 
    0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (
    9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 
    0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (
    9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), 
    (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 
    0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (
    9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 
    0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (
    9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 
    0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (
    9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 
    0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (
    9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), 
    (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 
    0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (
    9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 
    0.0), (9.98, 0.0), (9.99, 0.58472), (10.0, 116.94388), (10.01, 233.30303), 
    (10.02, 465.43663), (10.03, 698.15494), (10.04, 927.29185), (10.05, 
    1156.37394), (10.06, 1105.41199), (10.07, 1047.23241), (10.08, 989.05283), 
    (10.09, 930.87326), (10.1, 872.69368), (10.11, 814.5141), (10.12, 
    756.33452), (10.13, 698.15494), (10.14, 639.97536), (10.15, 581.79579), (
    10.16, 523.61621), (10.17, 465.43663), (10.18, 407.25705), (10.19, 
    349.07747), (10.2, 290.89789), (10.21, 232.71831), (10.22, 174.53874), (
    10.23, 116.35916), (10.24, 61.39554), (10.25, 6.85218), (10.26, 0.0), (
    10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 
    0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), 
    (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (
    10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (
    10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 
    0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), 
    (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (
    10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (
    10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 
    0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), 
    (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (
    10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 
    0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), 
    (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (
    11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (
    11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 
    0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), 
    (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (
    11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (
    11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 
    0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), 
    (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (
    11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (
    11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 
    0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), 
    (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (
    11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (
    11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 
    0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), 
    (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (
    11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 
    0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), 
    (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=
    SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row13'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -0.18688), (2.0, -37.37606), (2.01, 
    -74.56524), (2.02, -148.75673), (2.03, -223.13509), (2.04, -296.36881), (
    2.05, -369.58501), (2.06, -353.29723), (2.07, -334.70264), (2.08, 
    -316.10805), (2.09, -297.51346), (2.1, -278.91886), (2.11, -260.32427), (
    2.12, -241.72968), (2.13, -223.13509), (2.14, -204.5405), (2.15, 
    -185.94591), (2.16, -167.35132), (2.17, -148.75673), (2.18, -130.16214), (
    2.19, -111.56755), (2.2, -92.97295), (2.21, -74.37836), (2.22, -55.78377), 
    (2.23, -37.18918), (2.24, -19.62243), (2.25, -2.19), (2.26, 0.0), (2.27, 
    0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), (2.31, 0.0), (2.32, 0.0), (
    2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 0.0), (2.37, 0.0), (2.38, 
    0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (2.42, 0.0), (2.43, 0.0), (
    2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 0.0), (2.48, 0.0), (2.49, 
    0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (2.53, 0.0), (2.54, 0.0), (
    2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 0.0), (2.59, 0.0), (2.6, 0.0), 
    (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (2.64, 0.0), (2.65, 0.0), (2.66, 
    0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 0.0), (2.7, 0.0), (2.71, 0.0), (
    2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (2.75, 0.0), (2.76, 0.0), (2.77, 
    0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), (2.81, 0.0), (2.82, 0.0), (
    2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 0.0), (2.87, 0.0), (2.88, 
    0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (2.92, 0.0), (2.93, 0.0), (
    2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 0.0), (2.98, 0.0), (2.99, 
    0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (3.03, 0.0), (3.04, 0.0), (
    3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 0.0), (3.09, 0.0), (3.1, 0.0), 
    (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (3.14, 0.0), (3.15, 0.0), (3.16, 
    0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 0.0), (3.2, 0.0), (3.21, 0.0), (
    3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (3.25, 0.0), (3.26, 0.0), (3.27, 
    0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), (3.31, 0.0), (3.32, 0.0), (
    3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 0.0), (3.37, 0.0), (3.38, 
    0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (3.42, 0.0), (3.43, 0.0), (
    3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 0.0), (3.48, 0.0), (3.49, 
    0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (3.53, 0.0), (3.54, 0.0), (
    3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 0.0), (3.59, 0.0), (3.6, 0.0), 
    (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (3.64, 0.0), (3.65, 0.0), (3.66, 
    0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 0.0), (3.7, 0.0), (3.71, 0.0), (
    3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (3.75, 0.0), (3.76, 0.0), (3.77, 
    0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), (3.81, 0.0), (3.82, 0.0), (
    3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 0.0), (3.87, 0.0), (3.88, 
    0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (3.92, 0.0), (3.93, 0.0), (
    3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 0.0), (3.98, 0.0), (3.99, 
    0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (4.03, 0.0), (4.04, 0.0), (
    4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 0.0), (4.09, 0.0), (4.1, 0.0), 
    (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (4.14, 0.0), (4.15, 0.0), (4.16, 
    0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 0.0), (4.2, 0.0), (4.21, 0.0), (
    4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (4.25, 0.0), (4.26, 0.0), (4.27, 
    0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), (4.31, 0.0), (4.32, 0.0), (
    4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 0.0), (4.37, 0.0), (4.38, 
    0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (4.42, 0.0), (4.43, 0.0), (
    4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 0.0), (4.48, 0.0), (4.49, 
    0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (4.53, 0.0), (4.54, 0.0), (
    4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 0.0), (4.59, 0.0), (4.6, 0.0), 
    (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (4.64, 0.0), (4.65, 0.0), (4.66, 
    0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 0.0), (4.7, 0.0), (4.71, 0.0), (
    4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (4.75, 0.0), (4.76, 0.0), (4.77, 
    0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), (4.81, 0.0), (4.82, 0.0), (
    4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 0.0), (4.87, 0.0), (4.88, 
    0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (4.92, 0.0), (4.93, 0.0), (
    4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 0.0), (4.98, 0.0), (4.99, 
    0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (5.03, 0.0), (5.04, 0.0), (
    5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 0.0), (5.09, 0.0), (5.1, 0.0), 
    (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (5.14, 0.0), (5.15, 0.0), (5.16, 
    0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 0.0), (5.2, 0.0), (5.21, 0.0), (
    5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (5.25, 0.0), (5.26, 0.0), (5.27, 
    0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), (5.31, 0.0), (5.32, 0.0), (
    5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 0.0), (5.37, 0.0), (5.38, 
    0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (5.42, 0.0), (5.43, 0.0), (
    5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 0.0), (5.48, 0.0), (5.49, 
    0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (5.53, 0.0), (5.54, 0.0), (
    5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 0.0), (5.59, 0.0), (5.6, 0.0), 
    (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (5.64, 0.0), (5.65, 0.0), (5.66, 
    0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 0.0), (5.7, 0.0), (5.71, 0.0), (
    5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (5.75, 0.0), (5.76, 0.0), (5.77, 
    0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), (5.81, 0.0), (5.82, 0.0), (
    5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 0.0), (5.87, 0.0), (5.88, 
    0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (5.92, 0.0), (5.93, 0.0), (
    5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 0.0), (5.98, 0.0), (5.99, 
    -0.18688), (6.0, -37.37606), (6.01, -74.56524), (6.02, -148.75673), (6.03, 
    -223.13509), (6.04, -296.36881), (6.05, -369.58501), (6.06, -353.29723), (
    6.07, -334.70264), (6.08, -316.10805), (6.09, -297.51346), (6.1, 
    -278.91886), (6.11, -260.32427), (6.12, -241.72968), (6.13, -223.13509), (
    6.14, -204.5405), (6.15, -185.94591), (6.16, -167.35132), (6.17, 
    -148.75673), (6.18, -130.16214), (6.19, -111.56755), (6.2, -92.97295), (
    6.21, -74.37836), (6.22, -55.78377), (6.23, -37.18918), (6.24, -19.62243), 
    (6.25, -2.19), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 
    0.0), (6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (
    6.36, 0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), 
    (6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 
    0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (
    6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 
    0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (
    6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 
    0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (
    6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), 
    (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 
    0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (
    6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 
    0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (
    7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 
    0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (
    7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 
    0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (
    7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), 
    (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 
    0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (
    7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 
    0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (
    7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 
    0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (
    7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 
    0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (
    7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), 
    (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 
    0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (
    7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 
    0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (
    8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 
    0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (
    8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 
    0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (
    8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), 
    (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 
    0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (
    8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 
    0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (
    8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 
    0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (
    8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 
    0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (
    8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), 
    (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 
    0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (
    8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 
    0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (
    9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 
    0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (
    9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 
    0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (
    9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), 
    (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 
    0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (
    9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 
    0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (
    9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 
    0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (
    9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 
    0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (
    9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), 
    (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 
    0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (
    9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 
    0.0), (9.98, 0.0), (9.99, -0.18688), (10.0, -37.37606), (10.01, -74.56524), 
    (10.02, -148.75673), (10.03, -223.13509), (10.04, -296.36881), (10.05, 
    -369.58501), (10.06, -353.29723), (10.07, -334.70264), (10.08, -316.10805), 
    (10.09, -297.51346), (10.1, -278.91886), (10.11, -260.32427), (10.12, 
    -241.72968), (10.13, -223.13509), (10.14, -204.5405), (10.15, -185.94591), 
    (10.16, -167.35132), (10.17, -148.75673), (10.18, -130.16214), (10.19, 
    -111.56755), (10.2, -92.97295), (10.21, -74.37836), (10.22, -55.78377), (
    10.23, -37.18918), (10.24, -19.62243), (10.25, -2.19), (10.26, 0.0), (
    10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 
    0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), 
    (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (
    10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (
    10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 
    0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), 
    (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (
    10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (
    10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 
    0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), 
    (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (
    10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 
    0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), 
    (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (
    11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (
    11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 
    0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), 
    (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (
    11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (
    11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 
    0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), 
    (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (
    11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (
    11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 
    0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), 
    (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (
    11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (
    11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 
    0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), 
    (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (
    11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 
    0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), 
    (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=
    SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row14'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -0.02278), (2.0, -4.55663), (2.01, 
    -9.09048), (2.02, -18.13539), (2.03, -27.20308), (2.04, -36.13123), (2.05, 
    -45.05724), (2.06, -43.07154), (2.07, -40.80462), (2.08, -38.5377), (2.09, 
    -36.27077), (2.1, -34.00385), (2.11, -31.73693), (2.12, -29.47), (2.13, 
    -27.20308), (2.14, -24.93616), (2.15, -22.66923), (2.16, -20.40231), (2.17, 
    -18.13539), (2.18, -15.86846), (2.19, -13.60154), (2.2, -11.33462), (2.21, 
    -9.06769), (2.22, -6.80077), (2.23, -4.53385), (2.24, -2.39223), (2.25, 
    -0.26699), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), 
    (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, -0.02278), (6.0, -4.55663), (6.01, -9.09048), (
    6.02, -18.13539), (6.03, -27.20308), (6.04, -36.13123), (6.05, -45.05724), 
    (6.06, -43.07154), (6.07, -40.80462), (6.08, -38.5377), (6.09, -36.27077), 
    (6.1, -34.00385), (6.11, -31.73693), (6.12, -29.47), (6.13, -27.20308), (
    6.14, -24.93616), (6.15, -22.66923), (6.16, -20.40231), (6.17, -18.13539), 
    (6.18, -15.86846), (6.19, -13.60154), (6.2, -11.33462), (6.21, -9.06769), (
    6.22, -6.80077), (6.23, -4.53385), (6.24, -2.39223), (6.25, -0.26699), (
    6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), 
    (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, -0.02278), (10.0, -4.55663), (10.01, -9.09048), (10.02, 
    -18.13539), (10.03, -27.20308), (10.04, -36.13123), (10.05, -45.05724), (
    10.06, -43.07154), (10.07, -40.80462), (10.08, -38.5377), (10.09, 
    -36.27077), (10.1, -34.00385), (10.11, -31.73693), (10.12, -29.47), (10.13, 
    -27.20308), (10.14, -24.93616), (10.15, -22.66923), (10.16, -20.40231), (
    10.17, -18.13539), (10.18, -15.86846), (10.19, -13.60154), (10.2, 
    -11.33462), (10.21, -9.06769), (10.22, -6.80077), (10.23, -4.53385), (
    10.24, -2.39223), (10.25, -0.26699), (10.26, 0.0), (10.27, 0.0), (10.28, 
    0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (10.33, 0.0), 
    (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (10.38, 0.0), (
    10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 0.0), (10.44, 
    0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), (10.49, 0.0), 
    (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (10.54, 0.0), (
    10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (10.59, 0.0), (10.6, 
    0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 0.0), (10.65, 0.0), 
    (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), (10.7, 0.0), (
    10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (10.75, 0.0), (
    10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 0.0), (10.81, 
    0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), (10.86, 0.0), 
    (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (10.91, 0.0), (
    10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (10.96, 0.0), (
    10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 0.0), (11.02, 
    0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), (11.07, 0.0), 
    (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (11.12, 0.0), (
    11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (11.17, 0.0), (
    11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 0.0), (11.23, 
    0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), (11.28, 0.0), 
    (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (11.33, 0.0), (
    11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (11.38, 0.0), (
    11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 0.0), (11.44, 
    0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), (11.49, 0.0), 
    (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (11.54, 0.0), (
    11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (11.59, 0.0), (11.6, 
    0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 0.0), (11.65, 0.0), 
    (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), (11.7, 0.0), (
    11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (11.75, 0.0), (
    11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 0.0), (11.81, 
    0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), (11.86, 0.0), 
    (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (11.91, 0.0), (
    11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (11.96, 0.0), (
    11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=SOLVER_DEFAULT, timeSpan=
    STEP)
mdb.models['Model-1'].amplitudes['Row15'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -0.00121), (2.0, -0.24201), (2.01, 
    -0.48282), (2.02, -0.96321), (2.03, -1.44482), (2.04, -1.91901), (2.05, 
    -2.39309), (2.06, -2.28762), (2.07, -2.16722), (2.08, -2.04682), (2.09, 
    -1.92642), (2.1, -1.80602), (2.11, -1.68562), (2.12, -1.56522), (2.13, 
    -1.44482), (2.14, -1.32441), (2.15, -1.20401), (2.16, -1.08361), (2.17, 
    -0.96321), (2.18, -0.84281), (2.19, -0.72241), (2.2, -0.60201), (2.21, 
    -0.48161), (2.22, -0.3612), (2.23, -0.2408), (2.24, -0.12706), (2.25, 
    -0.01418), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), 
    (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, -0.00121), (6.0, -0.24201), (6.01, -0.48282), (
    6.02, -0.96321), (6.03, -1.44482), (6.04, -1.91901), (6.05, -2.39309), (
    6.06, -2.28762), (6.07, -2.16722), (6.08, -2.04682), (6.09, -1.92642), (
    6.1, -1.80602), (6.11, -1.68562), (6.12, -1.56522), (6.13, -1.44482), (
    6.14, -1.32441), (6.15, -1.20401), (6.16, -1.08361), (6.17, -0.96321), (
    6.18, -0.84281), (6.19, -0.72241), (6.2, -0.60201), (6.21, -0.48161), (
    6.22, -0.3612), (6.23, -0.2408), (6.24, -0.12706), (6.25, -0.01418), (6.26, 
    0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), (
    6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, -0.00121), (10.0, -0.24201), (10.01, -0.48282), (10.02, 
    -0.96321), (10.03, -1.44482), (10.04, -1.91901), (10.05, -2.39309), (10.06, 
    -2.28762), (10.07, -2.16722), (10.08, -2.04682), (10.09, -1.92642), (10.1, 
    -1.80602), (10.11, -1.68562), (10.12, -1.56522), (10.13, -1.44482), (10.14, 
    -1.32441), (10.15, -1.20401), (10.16, -1.08361), (10.17, -0.96321), (10.18, 
    -0.84281), (10.19, -0.72241), (10.2, -0.60201), (10.21, -0.48161), (10.22, 
    -0.3612), (10.23, -0.2408), (10.24, -0.12706), (10.25, -0.01418), (10.26, 
    0.0), (10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), 
    (10.32, 0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (
    10.37, 0.0), (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 
    0.0), (10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), 
    (10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (
    10.53, 0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (
    10.58, 0.0), (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 
    0.0), (10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), 
    (10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (
    10.74, 0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (
    10.79, 0.0), (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 
    0.0), (10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), 
    (10.9, 0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (
    10.95, 0.0), (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 
    0.0), (11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), 
    (11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (
    11.11, 0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (
    11.16, 0.0), (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 
    0.0), (11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), 
    (11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (
    11.32, 0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (
    11.37, 0.0), (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 
    0.0), (11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), 
    (11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (
    11.53, 0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (
    11.58, 0.0), (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 
    0.0), (11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), 
    (11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (
    11.74, 0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (
    11.79, 0.0), (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 
    0.0), (11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), 
    (11.9, 0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (
    11.95, 0.0), (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), 
    smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row16'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, -3e-05), (2.0, -0.00551), (2.01, 
    -0.01098), (2.02, -0.02191), (2.03, -0.03287), (2.04, -0.04365), (2.05, 
    -0.05444), (2.06, -0.05204), (2.07, -0.0493), (2.08, -0.04656), (2.09, 
    -0.04382), (2.1, -0.04108), (2.11, -0.03835), (2.12, -0.03561), (2.13, 
    -0.03287), (2.14, -0.03013), (2.15, -0.02739), (2.16, -0.02465), (2.17, 
    -0.02191), (2.18, -0.01917), (2.19, -0.01643), (2.2, -0.01369), (2.21, 
    -0.01096), (2.22, -0.00822), (2.23, -0.00548), (2.24, -0.00289), (2.25, 
    -0.00032), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), 
    (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 
    0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (
    2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 
    0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (
    2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 
    0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (
    2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 
    0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (
    2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), 
    (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 
    0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (
    2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 
    0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (
    3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 
    0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (
    3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 
    0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (
    3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), 
    (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 
    0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (
    3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 
    0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (
    3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 
    0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (
    3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 
    0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (
    3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), 
    (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 
    0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (
    3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 
    0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (
    4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 
    0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (
    4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 
    0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (
    4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), 
    (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 
    0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (
    4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 
    0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (
    4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 
    0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (
    4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 
    0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (
    4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), 
    (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 
    0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (
    4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 
    0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (
    5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 
    0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (
    5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 
    0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (
    5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), 
    (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 
    0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (
    5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 
    0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (
    5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 
    0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (
    5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 
    0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (
    5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), 
    (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 
    0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (
    5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 
    0.0), (5.98, 0.0), (5.99, -3e-05), (6.0, -0.00551), (6.01, -0.01098), (
    6.02, -0.02191), (6.03, -0.03287), (6.04, -0.04365), (6.05, -0.05444), (
    6.06, -0.05204), (6.07, -0.0493), (6.08, -0.04656), (6.09, -0.04382), (6.1, 
    -0.04108), (6.11, -0.03835), (6.12, -0.03561), (6.13, -0.03287), (6.14, 
    -0.03013), (6.15, -0.02739), (6.16, -0.02465), (6.17, -0.02191), (6.18, 
    -0.01917), (6.19, -0.01643), (6.2, -0.01369), (6.21, -0.01096), (6.22, 
    -0.00822), (6.23, -0.00548), (6.24, -0.00289), (6.25, -0.00032), (6.26, 
    0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), (
    6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 
    0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (
    6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 
    0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (
    6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 
    0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (
    6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), 
    (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 
    0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (
    6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 
    0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (
    6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 
    0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (
    7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 
    0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (
    7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), 
    (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 
    0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (
    7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 
    0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (
    7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 
    0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (
    7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 
    0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (
    7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), 
    (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 
    0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (
    7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 
    0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (
    7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 
    0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (
    8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 
    0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (
    8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), 
    (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 
    0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (
    8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 
    0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (
    8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 
    0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (
    8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 
    0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (
    8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), 
    (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 
    0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (
    8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 
    0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (
    8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 
    0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (
    9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 
    0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (
    9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), 
    (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 
    0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (
    9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 
    0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (
    9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 
    0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (
    9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 
    0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (
    9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), 
    (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 
    0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (
    9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 
    0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (
    9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 
    0.0), (9.99, -3e-05), (10.0, -0.00551), (10.01, -0.01098), (10.02, 
    -0.02191), (10.03, -0.03287), (10.04, -0.04365), (10.05, -0.05444), (10.06, 
    -0.05204), (10.07, -0.0493), (10.08, -0.04656), (10.09, -0.04382), (10.1, 
    -0.04108), (10.11, -0.03835), (10.12, -0.03561), (10.13, -0.03287), (10.14, 
    -0.03013), (10.15, -0.02739), (10.16, -0.02465), (10.17, -0.02191), (10.18, 
    -0.01917), (10.19, -0.01643), (10.2, -0.01369), (10.21, -0.01096), (10.22, 
    -0.00822), (10.23, -0.00548), (10.24, -0.00289), (10.25, -0.00032), (10.26, 
    0.0), (10.27, 0.0), (10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), 
    (10.32, 0.0), (10.33, 0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (
    10.37, 0.0), (10.38, 0.0), (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 
    0.0), (10.43, 0.0), (10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), 
    (10.48, 0.0), (10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (
    10.53, 0.0), (10.54, 0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (
    10.58, 0.0), (10.59, 0.0), (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 
    0.0), (10.64, 0.0), (10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), 
    (10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (
    10.74, 0.0), (10.75, 0.0), (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (
    10.79, 0.0), (10.8, 0.0), (10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 
    0.0), (10.85, 0.0), (10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), 
    (10.9, 0.0), (10.91, 0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (
    10.95, 0.0), (10.96, 0.0), (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 
    0.0), (11.01, 0.0), (11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), 
    (11.06, 0.0), (11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (
    11.11, 0.0), (11.12, 0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (
    11.16, 0.0), (11.17, 0.0), (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 
    0.0), (11.22, 0.0), (11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), 
    (11.27, 0.0), (11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (
    11.32, 0.0), (11.33, 0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (
    11.37, 0.0), (11.38, 0.0), (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 
    0.0), (11.43, 0.0), (11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), 
    (11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (
    11.53, 0.0), (11.54, 0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (
    11.58, 0.0), (11.59, 0.0), (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 
    0.0), (11.64, 0.0), (11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), 
    (11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (
    11.74, 0.0), (11.75, 0.0), (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (
    11.79, 0.0), (11.8, 0.0), (11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 
    0.0), (11.85, 0.0), (11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), 
    (11.9, 0.0), (11.91, 0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (
    11.95, 0.0), (11.96, 0.0), (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), 
    smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row17'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.0), (2.0, -5e-05), (2.01, 
    -0.0001), (2.02, -0.00021), (2.03, -0.00031), (2.04, -0.00041), (2.05, 
    -0.00052), (2.06, -0.00049), (2.07, -0.00047), (2.08, -0.00044), (2.09, 
    -0.00042), (2.1, -0.00039), (2.11, -0.00036), (2.12, -0.00034), (2.13, 
    -0.00031), (2.14, -0.00029), (2.15, -0.00026), (2.16, -0.00023), (2.17, 
    -0.00021), (2.18, -0.00018), (2.19, -0.00016), (2.2, -0.00013), (2.21, 
    -0.0001), (2.22, -8e-05), (2.23, -5e-05), (2.24, -3e-05), (2.25, 0.0), (
    2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 0.0), (2.3, 0.0), (2.31, 0.0), 
    (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (2.35, 0.0), (2.36, 0.0), (2.37, 
    0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), (2.41, 0.0), (2.42, 0.0), (
    2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 0.0), (2.47, 0.0), (2.48, 
    0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (2.52, 0.0), (2.53, 0.0), (
    2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 0.0), (2.58, 0.0), (2.59, 
    0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (2.63, 0.0), (2.64, 0.0), (
    2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 0.0), (2.69, 0.0), (2.7, 0.0), 
    (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (2.74, 0.0), (2.75, 0.0), (2.76, 
    0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 0.0), (2.8, 0.0), (2.81, 0.0), (
    2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (2.85, 0.0), (2.86, 0.0), (2.87, 
    0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), (2.91, 0.0), (2.92, 0.0), (
    2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 0.0), (2.97, 0.0), (2.98, 
    0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (3.02, 0.0), (3.03, 0.0), (
    3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 0.0), (3.08, 0.0), (3.09, 
    0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (3.13, 0.0), (3.14, 0.0), (
    3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 0.0), (3.19, 0.0), (3.2, 0.0), 
    (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (3.24, 0.0), (3.25, 0.0), (3.26, 
    0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 0.0), (3.3, 0.0), (3.31, 0.0), (
    3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (3.35, 0.0), (3.36, 0.0), (3.37, 
    0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), (3.41, 0.0), (3.42, 0.0), (
    3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 0.0), (3.47, 0.0), (3.48, 
    0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (3.52, 0.0), (3.53, 0.0), (
    3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 0.0), (3.58, 0.0), (3.59, 
    0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (3.63, 0.0), (3.64, 0.0), (
    3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 0.0), (3.69, 0.0), (3.7, 0.0), 
    (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (3.74, 0.0), (3.75, 0.0), (3.76, 
    0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 0.0), (3.8, 0.0), (3.81, 0.0), (
    3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (3.85, 0.0), (3.86, 0.0), (3.87, 
    0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), (3.91, 0.0), (3.92, 0.0), (
    3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 0.0), (3.97, 0.0), (3.98, 
    0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (4.02, 0.0), (4.03, 0.0), (
    4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 0.0), (4.08, 0.0), (4.09, 
    0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (4.13, 0.0), (4.14, 0.0), (
    4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 0.0), (4.19, 0.0), (4.2, 0.0), 
    (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (4.24, 0.0), (4.25, 0.0), (4.26, 
    0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 0.0), (4.3, 0.0), (4.31, 0.0), (
    4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (4.35, 0.0), (4.36, 0.0), (4.37, 
    0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), (4.41, 0.0), (4.42, 0.0), (
    4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 0.0), (4.47, 0.0), (4.48, 
    0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (4.52, 0.0), (4.53, 0.0), (
    4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 0.0), (4.58, 0.0), (4.59, 
    0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (4.63, 0.0), (4.64, 0.0), (
    4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 0.0), (4.69, 0.0), (4.7, 0.0), 
    (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (4.74, 0.0), (4.75, 0.0), (4.76, 
    0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 0.0), (4.8, 0.0), (4.81, 0.0), (
    4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (4.85, 0.0), (4.86, 0.0), (4.87, 
    0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), (4.91, 0.0), (4.92, 0.0), (
    4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 0.0), (4.97, 0.0), (4.98, 
    0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (5.02, 0.0), (5.03, 0.0), (
    5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 0.0), (5.08, 0.0), (5.09, 
    0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (5.13, 0.0), (5.14, 0.0), (
    5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 0.0), (5.19, 0.0), (5.2, 0.0), 
    (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (5.24, 0.0), (5.25, 0.0), (5.26, 
    0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 0.0), (5.3, 0.0), (5.31, 0.0), (
    5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (5.35, 0.0), (5.36, 0.0), (5.37, 
    0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), (5.41, 0.0), (5.42, 0.0), (
    5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 0.0), (5.47, 0.0), (5.48, 
    0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (5.52, 0.0), (5.53, 0.0), (
    5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 0.0), (5.58, 0.0), (5.59, 
    0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (5.63, 0.0), (5.64, 0.0), (
    5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 0.0), (5.69, 0.0), (5.7, 0.0), 
    (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (5.74, 0.0), (5.75, 0.0), (5.76, 
    0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 0.0), (5.8, 0.0), (5.81, 0.0), (
    5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (5.85, 0.0), (5.86, 0.0), (5.87, 
    0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), (5.91, 0.0), (5.92, 0.0), (
    5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 0.0), (5.97, 0.0), (5.98, 
    0.0), (5.99, 0.0), (6.0, -5e-05), (6.01, -0.0001), (6.02, -0.00021), (6.03, 
    -0.00031), (6.04, -0.00041), (6.05, -0.00052), (6.06, -0.00049), (6.07, 
    -0.00047), (6.08, -0.00044), (6.09, -0.00042), (6.1, -0.00039), (6.11, 
    -0.00036), (6.12, -0.00034), (6.13, -0.00031), (6.14, -0.00029), (6.15, 
    -0.00026), (6.16, -0.00023), (6.17, -0.00021), (6.18, -0.00018), (6.19, 
    -0.00016), (6.2, -0.00013), (6.21, -0.0001), (6.22, -8e-05), (6.23, 
    -5e-05), (6.24, -3e-05), (6.25, 0.0), (6.26, 0.0), (6.27, 0.0), (6.28, 
    0.0), (6.29, 0.0), (6.3, 0.0), (6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (
    6.34, 0.0), (6.35, 0.0), (6.36, 0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 
    0.0), (6.4, 0.0), (6.41, 0.0), (6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (
    6.45, 0.0), (6.46, 0.0), (6.47, 0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), 
    (6.51, 0.0), (6.52, 0.0), (6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 
    0.0), (6.57, 0.0), (6.58, 0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (
    6.62, 0.0), (6.63, 0.0), (6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 
    0.0), (6.68, 0.0), (6.69, 0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (
    6.73, 0.0), (6.74, 0.0), (6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 
    0.0), (6.79, 0.0), (6.8, 0.0), (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (
    6.84, 0.0), (6.85, 0.0), (6.86, 0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 
    0.0), (6.9, 0.0), (6.91, 0.0), (6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (
    6.95, 0.0), (6.96, 0.0), (6.97, 0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), 
    (7.01, 0.0), (7.02, 0.0), (7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 
    0.0), (7.07, 0.0), (7.08, 0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (
    7.12, 0.0), (7.13, 0.0), (7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 
    0.0), (7.18, 0.0), (7.19, 0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (
    7.23, 0.0), (7.24, 0.0), (7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 
    0.0), (7.29, 0.0), (7.3, 0.0), (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (
    7.34, 0.0), (7.35, 0.0), (7.36, 0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 
    0.0), (7.4, 0.0), (7.41, 0.0), (7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (
    7.45, 0.0), (7.46, 0.0), (7.47, 0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), 
    (7.51, 0.0), (7.52, 0.0), (7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 
    0.0), (7.57, 0.0), (7.58, 0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (
    7.62, 0.0), (7.63, 0.0), (7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 
    0.0), (7.68, 0.0), (7.69, 0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (
    7.73, 0.0), (7.74, 0.0), (7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 
    0.0), (7.79, 0.0), (7.8, 0.0), (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (
    7.84, 0.0), (7.85, 0.0), (7.86, 0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 
    0.0), (7.9, 0.0), (7.91, 0.0), (7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (
    7.95, 0.0), (7.96, 0.0), (7.97, 0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), 
    (8.01, 0.0), (8.02, 0.0), (8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 
    0.0), (8.07, 0.0), (8.08, 0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (
    8.12, 0.0), (8.13, 0.0), (8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 
    0.0), (8.18, 0.0), (8.19, 0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (
    8.23, 0.0), (8.24, 0.0), (8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 
    0.0), (8.29, 0.0), (8.3, 0.0), (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (
    8.34, 0.0), (8.35, 0.0), (8.36, 0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 
    0.0), (8.4, 0.0), (8.41, 0.0), (8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (
    8.45, 0.0), (8.46, 0.0), (8.47, 0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), 
    (8.51, 0.0), (8.52, 0.0), (8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 
    0.0), (8.57, 0.0), (8.58, 0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (
    8.62, 0.0), (8.63, 0.0), (8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 
    0.0), (8.68, 0.0), (8.69, 0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (
    8.73, 0.0), (8.74, 0.0), (8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 
    0.0), (8.79, 0.0), (8.8, 0.0), (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (
    8.84, 0.0), (8.85, 0.0), (8.86, 0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 
    0.0), (8.9, 0.0), (8.91, 0.0), (8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (
    8.95, 0.0), (8.96, 0.0), (8.97, 0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), 
    (9.01, 0.0), (9.02, 0.0), (9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 
    0.0), (9.07, 0.0), (9.08, 0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (
    9.12, 0.0), (9.13, 0.0), (9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 
    0.0), (9.18, 0.0), (9.19, 0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (
    9.23, 0.0), (9.24, 0.0), (9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 
    0.0), (9.29, 0.0), (9.3, 0.0), (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (
    9.34, 0.0), (9.35, 0.0), (9.36, 0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 
    0.0), (9.4, 0.0), (9.41, 0.0), (9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (
    9.45, 0.0), (9.46, 0.0), (9.47, 0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), 
    (9.51, 0.0), (9.52, 0.0), (9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 
    0.0), (9.57, 0.0), (9.58, 0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (
    9.62, 0.0), (9.63, 0.0), (9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 
    0.0), (9.68, 0.0), (9.69, 0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (
    9.73, 0.0), (9.74, 0.0), (9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 
    0.0), (9.79, 0.0), (9.8, 0.0), (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (
    9.84, 0.0), (9.85, 0.0), (9.86, 0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 
    0.0), (9.9, 0.0), (9.91, 0.0), (9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (
    9.95, 0.0), (9.96, 0.0), (9.97, 0.0), (9.98, 0.0), (9.99, 0.0), (10.0, 
    -5e-05), (10.01, -0.0001), (10.02, -0.00021), (10.03, -0.00031), (10.04, 
    -0.00041), (10.05, -0.00052), (10.06, -0.00049), (10.07, -0.00047), (10.08, 
    -0.00044), (10.09, -0.00042), (10.1, -0.00039), (10.11, -0.00036), (10.12, 
    -0.00034), (10.13, -0.00031), (10.14, -0.00029), (10.15, -0.00026), (10.16, 
    -0.00023), (10.17, -0.00021), (10.18, -0.00018), (10.19, -0.00016), (10.2, 
    -0.00013), (10.21, -0.0001), (10.22, -8e-05), (10.23, -5e-05), (10.24, 
    -3e-05), (10.25, 0.0), (10.26, 0.0), (10.27, 0.0), (10.28, 0.0), (10.29, 
    0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (10.33, 0.0), (10.34, 0.0), 
    (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (10.38, 0.0), (10.39, 0.0), (
    10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 0.0), (10.44, 0.0), (10.45, 
    0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), (10.49, 0.0), (10.5, 0.0), 
    (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (10.54, 0.0), (10.55, 0.0), (
    10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (10.59, 0.0), (10.6, 0.0), (10.61, 
    0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 0.0), (10.65, 0.0), (10.66, 0.0), 
    (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), (10.7, 0.0), (10.71, 0.0), (
    10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (10.75, 0.0), (10.76, 0.0), (
    10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 0.0), (10.81, 0.0), (10.82, 
    0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), (10.86, 0.0), (10.87, 0.0), 
    (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (10.91, 0.0), (10.92, 0.0), (
    10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (10.96, 0.0), (10.97, 0.0), (
    10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 0.0), (11.02, 0.0), (11.03, 
    0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), (11.07, 0.0), (11.08, 0.0), 
    (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (11.12, 0.0), (11.13, 0.0), (
    11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (11.17, 0.0), (11.18, 0.0), (
    11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 0.0), (11.23, 0.0), (11.24, 
    0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), (11.28, 0.0), (11.29, 0.0), 
    (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (11.33, 0.0), (11.34, 0.0), (
    11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (11.38, 0.0), (11.39, 0.0), (11.4, 
    0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 0.0), (11.44, 0.0), (11.45, 0.0), 
    (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), (11.49, 0.0), (11.5, 0.0), (
    11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (11.54, 0.0), (11.55, 0.0), (
    11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (11.59, 0.0), (11.6, 0.0), (11.61, 
    0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 0.0), (11.65, 0.0), (11.66, 0.0), 
    (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), (11.7, 0.0), (11.71, 0.0), (
    11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (11.75, 0.0), (11.76, 0.0), (
    11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 0.0), (11.81, 0.0), (11.82, 
    0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), (11.86, 0.0), (11.87, 0.0), 
    (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (11.91, 0.0), (11.92, 0.0), (
    11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (11.96, 0.0), (11.97, 0.0), (
    11.98, 0.0), (11.99, 0.0)), smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].amplitudes['Row18'].setValues(data=((0.0, 0.0), (0.01, 
    0.0), (0.02, 0.0), (0.03, 0.0), (0.04, 0.0), (0.05, 0.0), (0.06, 0.0), (
    0.07, 0.0), (0.08, 0.0), (0.09, 0.0), (0.1, 0.0), (0.11, 0.0), (0.12, 0.0), 
    (0.13, 0.0), (0.14, 0.0), (0.15, 0.0), (0.16, 0.0), (0.17, 0.0), (0.18, 
    0.0), (0.19, 0.0), (0.2, 0.0), (0.21, 0.0), (0.22, 0.0), (0.23, 0.0), (
    0.24, 0.0), (0.25, 0.0), (0.26, 0.0), (0.27, 0.0), (0.28, 0.0), (0.29, 
    0.0), (0.3, 0.0), (0.31, 0.0), (0.32, 0.0), (0.33, 0.0), (0.34, 0.0), (
    0.35, 0.0), (0.36, 0.0), (0.37, 0.0), (0.38, 0.0), (0.39, 0.0), (0.4, 0.0), 
    (0.41, 0.0), (0.42, 0.0), (0.43, 0.0), (0.44, 0.0), (0.45, 0.0), (0.46, 
    0.0), (0.47, 0.0), (0.48, 0.0), (0.49, 0.0), (0.5, 0.0), (0.51, 0.0), (
    0.52, 0.0), (0.53, 0.0), (0.54, 0.0), (0.55, 0.0), (0.56, 0.0), (0.57, 
    0.0), (0.58, 0.0), (0.59, 0.0), (0.6, 0.0), (0.61, 0.0), (0.62, 0.0), (
    0.63, 0.0), (0.64, 0.0), (0.65, 0.0), (0.66, 0.0), (0.67, 0.0), (0.68, 
    0.0), (0.69, 0.0), (0.7, 0.0), (0.71, 0.0), (0.72, 0.0), (0.73, 0.0), (
    0.74, 0.0), (0.75, 0.0), (0.76, 0.0), (0.77, 0.0), (0.78, 0.0), (0.79, 
    0.0), (0.8, 0.0), (0.81, 0.0), (0.82, 0.0), (0.83, 0.0), (0.84, 0.0), (
    0.85, 0.0), (0.86, 0.0), (0.87, 0.0), (0.88, 0.0), (0.89, 0.0), (0.9, 0.0), 
    (0.91, 0.0), (0.92, 0.0), (0.93, 0.0), (0.94, 0.0), (0.95, 0.0), (0.96, 
    0.0), (0.97, 0.0), (0.98, 0.0), (0.99, 0.0), (1.0, 0.0), (1.01, 0.0), (
    1.02, 0.0), (1.03, 0.0), (1.04, 0.0), (1.05, 0.0), (1.06, 0.0), (1.07, 
    0.0), (1.08, 0.0), (1.09, 0.0), (1.1, 0.0), (1.11, 0.0), (1.12, 0.0), (
    1.13, 0.0), (1.14, 0.0), (1.15, 0.0), (1.16, 0.0), (1.17, 0.0), (1.18, 
    0.0), (1.19, 0.0), (1.2, 0.0), (1.21, 0.0), (1.22, 0.0), (1.23, 0.0), (
    1.24, 0.0), (1.25, 0.0), (1.26, 0.0), (1.27, 0.0), (1.28, 0.0), (1.29, 
    0.0), (1.3, 0.0), (1.31, 0.0), (1.32, 0.0), (1.33, 0.0), (1.34, 0.0), (
    1.35, 0.0), (1.36, 0.0), (1.37, 0.0), (1.38, 0.0), (1.39, 0.0), (1.4, 0.0), 
    (1.41, 0.0), (1.42, 0.0), (1.43, 0.0), (1.44, 0.0), (1.45, 0.0), (1.46, 
    0.0), (1.47, 0.0), (1.48, 0.0), (1.49, 0.0), (1.5, 0.0), (1.51, 0.0), (
    1.52, 0.0), (1.53, 0.0), (1.54, 0.0), (1.55, 0.0), (1.56, 0.0), (1.57, 
    0.0), (1.58, 0.0), (1.59, 0.0), (1.6, 0.0), (1.61, 0.0), (1.62, 0.0), (
    1.63, 0.0), (1.64, 0.0), (1.65, 0.0), (1.66, 0.0), (1.67, 0.0), (1.68, 
    0.0), (1.69, 0.0), (1.7, 0.0), (1.71, 0.0), (1.72, 0.0), (1.73, 0.0), (
    1.74, 0.0), (1.75, 0.0), (1.76, 0.0), (1.77, 0.0), (1.78, 0.0), (1.79, 
    0.0), (1.8, 0.0), (1.81, 0.0), (1.82, 0.0), (1.83, 0.0), (1.84, 0.0), (
    1.85, 0.0), (1.86, 0.0), (1.87, 0.0), (1.88, 0.0), (1.89, 0.0), (1.9, 0.0), 
    (1.91, 0.0), (1.92, 0.0), (1.93, 0.0), (1.94, 0.0), (1.95, 0.0), (1.96, 
    0.0), (1.97, 0.0), (1.98, 0.0), (1.99, 0.0), (2.0, 0.0), (2.01, 0.0), (
    2.02, 0.0), (2.03, 0.0), (2.04, 0.0), (2.05, 0.0), (2.06, 0.0), (2.07, 
    0.0), (2.08, 0.0), (2.09, 0.0), (2.1, 0.0), (2.11, 0.0), (2.12, 0.0), (
    2.13, 0.0), (2.14, 0.0), (2.15, 0.0), (2.16, 0.0), (2.17, 0.0), (2.18, 
    0.0), (2.19, 0.0), (2.2, 0.0), (2.21, 0.0), (2.22, 0.0), (2.23, 0.0), (
    2.24, 0.0), (2.25, 0.0), (2.26, 0.0), (2.27, 0.0), (2.28, 0.0), (2.29, 
    0.0), (2.3, 0.0), (2.31, 0.0), (2.32, 0.0), (2.33, 0.0), (2.34, 0.0), (
    2.35, 0.0), (2.36, 0.0), (2.37, 0.0), (2.38, 0.0), (2.39, 0.0), (2.4, 0.0), 
    (2.41, 0.0), (2.42, 0.0), (2.43, 0.0), (2.44, 0.0), (2.45, 0.0), (2.46, 
    0.0), (2.47, 0.0), (2.48, 0.0), (2.49, 0.0), (2.5, 0.0), (2.51, 0.0), (
    2.52, 0.0), (2.53, 0.0), (2.54, 0.0), (2.55, 0.0), (2.56, 0.0), (2.57, 
    0.0), (2.58, 0.0), (2.59, 0.0), (2.6, 0.0), (2.61, 0.0), (2.62, 0.0), (
    2.63, 0.0), (2.64, 0.0), (2.65, 0.0), (2.66, 0.0), (2.67, 0.0), (2.68, 
    0.0), (2.69, 0.0), (2.7, 0.0), (2.71, 0.0), (2.72, 0.0), (2.73, 0.0), (
    2.74, 0.0), (2.75, 0.0), (2.76, 0.0), (2.77, 0.0), (2.78, 0.0), (2.79, 
    0.0), (2.8, 0.0), (2.81, 0.0), (2.82, 0.0), (2.83, 0.0), (2.84, 0.0), (
    2.85, 0.0), (2.86, 0.0), (2.87, 0.0), (2.88, 0.0), (2.89, 0.0), (2.9, 0.0), 
    (2.91, 0.0), (2.92, 0.0), (2.93, 0.0), (2.94, 0.0), (2.95, 0.0), (2.96, 
    0.0), (2.97, 0.0), (2.98, 0.0), (2.99, 0.0), (3.0, 0.0), (3.01, 0.0), (
    3.02, 0.0), (3.03, 0.0), (3.04, 0.0), (3.05, 0.0), (3.06, 0.0), (3.07, 
    0.0), (3.08, 0.0), (3.09, 0.0), (3.1, 0.0), (3.11, 0.0), (3.12, 0.0), (
    3.13, 0.0), (3.14, 0.0), (3.15, 0.0), (3.16, 0.0), (3.17, 0.0), (3.18, 
    0.0), (3.19, 0.0), (3.2, 0.0), (3.21, 0.0), (3.22, 0.0), (3.23, 0.0), (
    3.24, 0.0), (3.25, 0.0), (3.26, 0.0), (3.27, 0.0), (3.28, 0.0), (3.29, 
    0.0), (3.3, 0.0), (3.31, 0.0), (3.32, 0.0), (3.33, 0.0), (3.34, 0.0), (
    3.35, 0.0), (3.36, 0.0), (3.37, 0.0), (3.38, 0.0), (3.39, 0.0), (3.4, 0.0), 
    (3.41, 0.0), (3.42, 0.0), (3.43, 0.0), (3.44, 0.0), (3.45, 0.0), (3.46, 
    0.0), (3.47, 0.0), (3.48, 0.0), (3.49, 0.0), (3.5, 0.0), (3.51, 0.0), (
    3.52, 0.0), (3.53, 0.0), (3.54, 0.0), (3.55, 0.0), (3.56, 0.0), (3.57, 
    0.0), (3.58, 0.0), (3.59, 0.0), (3.6, 0.0), (3.61, 0.0), (3.62, 0.0), (
    3.63, 0.0), (3.64, 0.0), (3.65, 0.0), (3.66, 0.0), (3.67, 0.0), (3.68, 
    0.0), (3.69, 0.0), (3.7, 0.0), (3.71, 0.0), (3.72, 0.0), (3.73, 0.0), (
    3.74, 0.0), (3.75, 0.0), (3.76, 0.0), (3.77, 0.0), (3.78, 0.0), (3.79, 
    0.0), (3.8, 0.0), (3.81, 0.0), (3.82, 0.0), (3.83, 0.0), (3.84, 0.0), (
    3.85, 0.0), (3.86, 0.0), (3.87, 0.0), (3.88, 0.0), (3.89, 0.0), (3.9, 0.0), 
    (3.91, 0.0), (3.92, 0.0), (3.93, 0.0), (3.94, 0.0), (3.95, 0.0), (3.96, 
    0.0), (3.97, 0.0), (3.98, 0.0), (3.99, 0.0), (4.0, 0.0), (4.01, 0.0), (
    4.02, 0.0), (4.03, 0.0), (4.04, 0.0), (4.05, 0.0), (4.06, 0.0), (4.07, 
    0.0), (4.08, 0.0), (4.09, 0.0), (4.1, 0.0), (4.11, 0.0), (4.12, 0.0), (
    4.13, 0.0), (4.14, 0.0), (4.15, 0.0), (4.16, 0.0), (4.17, 0.0), (4.18, 
    0.0), (4.19, 0.0), (4.2, 0.0), (4.21, 0.0), (4.22, 0.0), (4.23, 0.0), (
    4.24, 0.0), (4.25, 0.0), (4.26, 0.0), (4.27, 0.0), (4.28, 0.0), (4.29, 
    0.0), (4.3, 0.0), (4.31, 0.0), (4.32, 0.0), (4.33, 0.0), (4.34, 0.0), (
    4.35, 0.0), (4.36, 0.0), (4.37, 0.0), (4.38, 0.0), (4.39, 0.0), (4.4, 0.0), 
    (4.41, 0.0), (4.42, 0.0), (4.43, 0.0), (4.44, 0.0), (4.45, 0.0), (4.46, 
    0.0), (4.47, 0.0), (4.48, 0.0), (4.49, 0.0), (4.5, 0.0), (4.51, 0.0), (
    4.52, 0.0), (4.53, 0.0), (4.54, 0.0), (4.55, 0.0), (4.56, 0.0), (4.57, 
    0.0), (4.58, 0.0), (4.59, 0.0), (4.6, 0.0), (4.61, 0.0), (4.62, 0.0), (
    4.63, 0.0), (4.64, 0.0), (4.65, 0.0), (4.66, 0.0), (4.67, 0.0), (4.68, 
    0.0), (4.69, 0.0), (4.7, 0.0), (4.71, 0.0), (4.72, 0.0), (4.73, 0.0), (
    4.74, 0.0), (4.75, 0.0), (4.76, 0.0), (4.77, 0.0), (4.78, 0.0), (4.79, 
    0.0), (4.8, 0.0), (4.81, 0.0), (4.82, 0.0), (4.83, 0.0), (4.84, 0.0), (
    4.85, 0.0), (4.86, 0.0), (4.87, 0.0), (4.88, 0.0), (4.89, 0.0), (4.9, 0.0), 
    (4.91, 0.0), (4.92, 0.0), (4.93, 0.0), (4.94, 0.0), (4.95, 0.0), (4.96, 
    0.0), (4.97, 0.0), (4.98, 0.0), (4.99, 0.0), (5.0, 0.0), (5.01, 0.0), (
    5.02, 0.0), (5.03, 0.0), (5.04, 0.0), (5.05, 0.0), (5.06, 0.0), (5.07, 
    0.0), (5.08, 0.0), (5.09, 0.0), (5.1, 0.0), (5.11, 0.0), (5.12, 0.0), (
    5.13, 0.0), (5.14, 0.0), (5.15, 0.0), (5.16, 0.0), (5.17, 0.0), (5.18, 
    0.0), (5.19, 0.0), (5.2, 0.0), (5.21, 0.0), (5.22, 0.0), (5.23, 0.0), (
    5.24, 0.0), (5.25, 0.0), (5.26, 0.0), (5.27, 0.0), (5.28, 0.0), (5.29, 
    0.0), (5.3, 0.0), (5.31, 0.0), (5.32, 0.0), (5.33, 0.0), (5.34, 0.0), (
    5.35, 0.0), (5.36, 0.0), (5.37, 0.0), (5.38, 0.0), (5.39, 0.0), (5.4, 0.0), 
    (5.41, 0.0), (5.42, 0.0), (5.43, 0.0), (5.44, 0.0), (5.45, 0.0), (5.46, 
    0.0), (5.47, 0.0), (5.48, 0.0), (5.49, 0.0), (5.5, 0.0), (5.51, 0.0), (
    5.52, 0.0), (5.53, 0.0), (5.54, 0.0), (5.55, 0.0), (5.56, 0.0), (5.57, 
    0.0), (5.58, 0.0), (5.59, 0.0), (5.6, 0.0), (5.61, 0.0), (5.62, 0.0), (
    5.63, 0.0), (5.64, 0.0), (5.65, 0.0), (5.66, 0.0), (5.67, 0.0), (5.68, 
    0.0), (5.69, 0.0), (5.7, 0.0), (5.71, 0.0), (5.72, 0.0), (5.73, 0.0), (
    5.74, 0.0), (5.75, 0.0), (5.76, 0.0), (5.77, 0.0), (5.78, 0.0), (5.79, 
    0.0), (5.8, 0.0), (5.81, 0.0), (5.82, 0.0), (5.83, 0.0), (5.84, 0.0), (
    5.85, 0.0), (5.86, 0.0), (5.87, 0.0), (5.88, 0.0), (5.89, 0.0), (5.9, 0.0), 
    (5.91, 0.0), (5.92, 0.0), (5.93, 0.0), (5.94, 0.0), (5.95, 0.0), (5.96, 
    0.0), (5.97, 0.0), (5.98, 0.0), (5.99, 0.0), (6.0, 0.0), (6.01, 0.0), (
    6.02, 0.0), (6.03, 0.0), (6.04, 0.0), (6.05, 0.0), (6.06, 0.0), (6.07, 
    0.0), (6.08, 0.0), (6.09, 0.0), (6.1, 0.0), (6.11, 0.0), (6.12, 0.0), (
    6.13, 0.0), (6.14, 0.0), (6.15, 0.0), (6.16, 0.0), (6.17, 0.0), (6.18, 
    0.0), (6.19, 0.0), (6.2, 0.0), (6.21, 0.0), (6.22, 0.0), (6.23, 0.0), (
    6.24, 0.0), (6.25, 0.0), (6.26, 0.0), (6.27, 0.0), (6.28, 0.0), (6.29, 
    0.0), (6.3, 0.0), (6.31, 0.0), (6.32, 0.0), (6.33, 0.0), (6.34, 0.0), (
    6.35, 0.0), (6.36, 0.0), (6.37, 0.0), (6.38, 0.0), (6.39, 0.0), (6.4, 0.0), 
    (6.41, 0.0), (6.42, 0.0), (6.43, 0.0), (6.44, 0.0), (6.45, 0.0), (6.46, 
    0.0), (6.47, 0.0), (6.48, 0.0), (6.49, 0.0), (6.5, 0.0), (6.51, 0.0), (
    6.52, 0.0), (6.53, 0.0), (6.54, 0.0), (6.55, 0.0), (6.56, 0.0), (6.57, 
    0.0), (6.58, 0.0), (6.59, 0.0), (6.6, 0.0), (6.61, 0.0), (6.62, 0.0), (
    6.63, 0.0), (6.64, 0.0), (6.65, 0.0), (6.66, 0.0), (6.67, 0.0), (6.68, 
    0.0), (6.69, 0.0), (6.7, 0.0), (6.71, 0.0), (6.72, 0.0), (6.73, 0.0), (
    6.74, 0.0), (6.75, 0.0), (6.76, 0.0), (6.77, 0.0), (6.78, 0.0), (6.79, 
    0.0), (6.8, 0.0), (6.81, 0.0), (6.82, 0.0), (6.83, 0.0), (6.84, 0.0), (
    6.85, 0.0), (6.86, 0.0), (6.87, 0.0), (6.88, 0.0), (6.89, 0.0), (6.9, 0.0), 
    (6.91, 0.0), (6.92, 0.0), (6.93, 0.0), (6.94, 0.0), (6.95, 0.0), (6.96, 
    0.0), (6.97, 0.0), (6.98, 0.0), (6.99, 0.0), (7.0, 0.0), (7.01, 0.0), (
    7.02, 0.0), (7.03, 0.0), (7.04, 0.0), (7.05, 0.0), (7.06, 0.0), (7.07, 
    0.0), (7.08, 0.0), (7.09, 0.0), (7.1, 0.0), (7.11, 0.0), (7.12, 0.0), (
    7.13, 0.0), (7.14, 0.0), (7.15, 0.0), (7.16, 0.0), (7.17, 0.0), (7.18, 
    0.0), (7.19, 0.0), (7.2, 0.0), (7.21, 0.0), (7.22, 0.0), (7.23, 0.0), (
    7.24, 0.0), (7.25, 0.0), (7.26, 0.0), (7.27, 0.0), (7.28, 0.0), (7.29, 
    0.0), (7.3, 0.0), (7.31, 0.0), (7.32, 0.0), (7.33, 0.0), (7.34, 0.0), (
    7.35, 0.0), (7.36, 0.0), (7.37, 0.0), (7.38, 0.0), (7.39, 0.0), (7.4, 0.0), 
    (7.41, 0.0), (7.42, 0.0), (7.43, 0.0), (7.44, 0.0), (7.45, 0.0), (7.46, 
    0.0), (7.47, 0.0), (7.48, 0.0), (7.49, 0.0), (7.5, 0.0), (7.51, 0.0), (
    7.52, 0.0), (7.53, 0.0), (7.54, 0.0), (7.55, 0.0), (7.56, 0.0), (7.57, 
    0.0), (7.58, 0.0), (7.59, 0.0), (7.6, 0.0), (7.61, 0.0), (7.62, 0.0), (
    7.63, 0.0), (7.64, 0.0), (7.65, 0.0), (7.66, 0.0), (7.67, 0.0), (7.68, 
    0.0), (7.69, 0.0), (7.7, 0.0), (7.71, 0.0), (7.72, 0.0), (7.73, 0.0), (
    7.74, 0.0), (7.75, 0.0), (7.76, 0.0), (7.77, 0.0), (7.78, 0.0), (7.79, 
    0.0), (7.8, 0.0), (7.81, 0.0), (7.82, 0.0), (7.83, 0.0), (7.84, 0.0), (
    7.85, 0.0), (7.86, 0.0), (7.87, 0.0), (7.88, 0.0), (7.89, 0.0), (7.9, 0.0), 
    (7.91, 0.0), (7.92, 0.0), (7.93, 0.0), (7.94, 0.0), (7.95, 0.0), (7.96, 
    0.0), (7.97, 0.0), (7.98, 0.0), (7.99, 0.0), (8.0, 0.0), (8.01, 0.0), (
    8.02, 0.0), (8.03, 0.0), (8.04, 0.0), (8.05, 0.0), (8.06, 0.0), (8.07, 
    0.0), (8.08, 0.0), (8.09, 0.0), (8.1, 0.0), (8.11, 0.0), (8.12, 0.0), (
    8.13, 0.0), (8.14, 0.0), (8.15, 0.0), (8.16, 0.0), (8.17, 0.0), (8.18, 
    0.0), (8.19, 0.0), (8.2, 0.0), (8.21, 0.0), (8.22, 0.0), (8.23, 0.0), (
    8.24, 0.0), (8.25, 0.0), (8.26, 0.0), (8.27, 0.0), (8.28, 0.0), (8.29, 
    0.0), (8.3, 0.0), (8.31, 0.0), (8.32, 0.0), (8.33, 0.0), (8.34, 0.0), (
    8.35, 0.0), (8.36, 0.0), (8.37, 0.0), (8.38, 0.0), (8.39, 0.0), (8.4, 0.0), 
    (8.41, 0.0), (8.42, 0.0), (8.43, 0.0), (8.44, 0.0), (8.45, 0.0), (8.46, 
    0.0), (8.47, 0.0), (8.48, 0.0), (8.49, 0.0), (8.5, 0.0), (8.51, 0.0), (
    8.52, 0.0), (8.53, 0.0), (8.54, 0.0), (8.55, 0.0), (8.56, 0.0), (8.57, 
    0.0), (8.58, 0.0), (8.59, 0.0), (8.6, 0.0), (8.61, 0.0), (8.62, 0.0), (
    8.63, 0.0), (8.64, 0.0), (8.65, 0.0), (8.66, 0.0), (8.67, 0.0), (8.68, 
    0.0), (8.69, 0.0), (8.7, 0.0), (8.71, 0.0), (8.72, 0.0), (8.73, 0.0), (
    8.74, 0.0), (8.75, 0.0), (8.76, 0.0), (8.77, 0.0), (8.78, 0.0), (8.79, 
    0.0), (8.8, 0.0), (8.81, 0.0), (8.82, 0.0), (8.83, 0.0), (8.84, 0.0), (
    8.85, 0.0), (8.86, 0.0), (8.87, 0.0), (8.88, 0.0), (8.89, 0.0), (8.9, 0.0), 
    (8.91, 0.0), (8.92, 0.0), (8.93, 0.0), (8.94, 0.0), (8.95, 0.0), (8.96, 
    0.0), (8.97, 0.0), (8.98, 0.0), (8.99, 0.0), (9.0, 0.0), (9.01, 0.0), (
    9.02, 0.0), (9.03, 0.0), (9.04, 0.0), (9.05, 0.0), (9.06, 0.0), (9.07, 
    0.0), (9.08, 0.0), (9.09, 0.0), (9.1, 0.0), (9.11, 0.0), (9.12, 0.0), (
    9.13, 0.0), (9.14, 0.0), (9.15, 0.0), (9.16, 0.0), (9.17, 0.0), (9.18, 
    0.0), (9.19, 0.0), (9.2, 0.0), (9.21, 0.0), (9.22, 0.0), (9.23, 0.0), (
    9.24, 0.0), (9.25, 0.0), (9.26, 0.0), (9.27, 0.0), (9.28, 0.0), (9.29, 
    0.0), (9.3, 0.0), (9.31, 0.0), (9.32, 0.0), (9.33, 0.0), (9.34, 0.0), (
    9.35, 0.0), (9.36, 0.0), (9.37, 0.0), (9.38, 0.0), (9.39, 0.0), (9.4, 0.0), 
    (9.41, 0.0), (9.42, 0.0), (9.43, 0.0), (9.44, 0.0), (9.45, 0.0), (9.46, 
    0.0), (9.47, 0.0), (9.48, 0.0), (9.49, 0.0), (9.5, 0.0), (9.51, 0.0), (
    9.52, 0.0), (9.53, 0.0), (9.54, 0.0), (9.55, 0.0), (9.56, 0.0), (9.57, 
    0.0), (9.58, 0.0), (9.59, 0.0), (9.6, 0.0), (9.61, 0.0), (9.62, 0.0), (
    9.63, 0.0), (9.64, 0.0), (9.65, 0.0), (9.66, 0.0), (9.67, 0.0), (9.68, 
    0.0), (9.69, 0.0), (9.7, 0.0), (9.71, 0.0), (9.72, 0.0), (9.73, 0.0), (
    9.74, 0.0), (9.75, 0.0), (9.76, 0.0), (9.77, 0.0), (9.78, 0.0), (9.79, 
    0.0), (9.8, 0.0), (9.81, 0.0), (9.82, 0.0), (9.83, 0.0), (9.84, 0.0), (
    9.85, 0.0), (9.86, 0.0), (9.87, 0.0), (9.88, 0.0), (9.89, 0.0), (9.9, 0.0), 
    (9.91, 0.0), (9.92, 0.0), (9.93, 0.0), (9.94, 0.0), (9.95, 0.0), (9.96, 
    0.0), (9.97, 0.0), (9.98, 0.0), (9.99, 0.0), (10.0, 0.0), (10.01, 0.0), (
    10.02, 0.0), (10.03, 0.0), (10.04, 0.0), (10.05, 0.0), (10.06, 0.0), (
    10.07, 0.0), (10.08, 0.0), (10.09, 0.0), (10.1, 0.0), (10.11, 0.0), (10.12, 
    0.0), (10.13, 0.0), (10.14, 0.0), (10.15, 0.0), (10.16, 0.0), (10.17, 0.0), 
    (10.18, 0.0), (10.19, 0.0), (10.2, 0.0), (10.21, 0.0), (10.22, 0.0), (
    10.23, 0.0), (10.24, 0.0), (10.25, 0.0), (10.26, 0.0), (10.27, 0.0), (
    10.28, 0.0), (10.29, 0.0), (10.3, 0.0), (10.31, 0.0), (10.32, 0.0), (10.33, 
    0.0), (10.34, 0.0), (10.35, 0.0), (10.36, 0.0), (10.37, 0.0), (10.38, 0.0), 
    (10.39, 0.0), (10.4, 0.0), (10.41, 0.0), (10.42, 0.0), (10.43, 0.0), (
    10.44, 0.0), (10.45, 0.0), (10.46, 0.0), (10.47, 0.0), (10.48, 0.0), (
    10.49, 0.0), (10.5, 0.0), (10.51, 0.0), (10.52, 0.0), (10.53, 0.0), (10.54, 
    0.0), (10.55, 0.0), (10.56, 0.0), (10.57, 0.0), (10.58, 0.0), (10.59, 0.0), 
    (10.6, 0.0), (10.61, 0.0), (10.62, 0.0), (10.63, 0.0), (10.64, 0.0), (
    10.65, 0.0), (10.66, 0.0), (10.67, 0.0), (10.68, 0.0), (10.69, 0.0), (10.7, 
    0.0), (10.71, 0.0), (10.72, 0.0), (10.73, 0.0), (10.74, 0.0), (10.75, 0.0), 
    (10.76, 0.0), (10.77, 0.0), (10.78, 0.0), (10.79, 0.0), (10.8, 0.0), (
    10.81, 0.0), (10.82, 0.0), (10.83, 0.0), (10.84, 0.0), (10.85, 0.0), (
    10.86, 0.0), (10.87, 0.0), (10.88, 0.0), (10.89, 0.0), (10.9, 0.0), (10.91, 
    0.0), (10.92, 0.0), (10.93, 0.0), (10.94, 0.0), (10.95, 0.0), (10.96, 0.0), 
    (10.97, 0.0), (10.98, 0.0), (10.99, 0.0), (11.0, 0.0), (11.01, 0.0), (
    11.02, 0.0), (11.03, 0.0), (11.04, 0.0), (11.05, 0.0), (11.06, 0.0), (
    11.07, 0.0), (11.08, 0.0), (11.09, 0.0), (11.1, 0.0), (11.11, 0.0), (11.12, 
    0.0), (11.13, 0.0), (11.14, 0.0), (11.15, 0.0), (11.16, 0.0), (11.17, 0.0), 
    (11.18, 0.0), (11.19, 0.0), (11.2, 0.0), (11.21, 0.0), (11.22, 0.0), (
    11.23, 0.0), (11.24, 0.0), (11.25, 0.0), (11.26, 0.0), (11.27, 0.0), (
    11.28, 0.0), (11.29, 0.0), (11.3, 0.0), (11.31, 0.0), (11.32, 0.0), (11.33, 
    0.0), (11.34, 0.0), (11.35, 0.0), (11.36, 0.0), (11.37, 0.0), (11.38, 0.0), 
    (11.39, 0.0), (11.4, 0.0), (11.41, 0.0), (11.42, 0.0), (11.43, 0.0), (
    11.44, 0.0), (11.45, 0.0), (11.46, 0.0), (11.47, 0.0), (11.48, 0.0), (
    11.49, 0.0), (11.5, 0.0), (11.51, 0.0), (11.52, 0.0), (11.53, 0.0), (11.54, 
    0.0), (11.55, 0.0), (11.56, 0.0), (11.57, 0.0), (11.58, 0.0), (11.59, 0.0), 
    (11.6, 0.0), (11.61, 0.0), (11.62, 0.0), (11.63, 0.0), (11.64, 0.0), (
    11.65, 0.0), (11.66, 0.0), (11.67, 0.0), (11.68, 0.0), (11.69, 0.0), (11.7, 
    0.0), (11.71, 0.0), (11.72, 0.0), (11.73, 0.0), (11.74, 0.0), (11.75, 0.0), 
    (11.76, 0.0), (11.77, 0.0), (11.78, 0.0), (11.79, 0.0), (11.8, 0.0), (
    11.81, 0.0), (11.82, 0.0), (11.83, 0.0), (11.84, 0.0), (11.85, 0.0), (
    11.86, 0.0), (11.87, 0.0), (11.88, 0.0), (11.89, 0.0), (11.9, 0.0), (11.91, 
    0.0), (11.92, 0.0), (11.93, 0.0), (11.94, 0.0), (11.95, 0.0), (11.96, 0.0), 
    (11.97, 0.0), (11.98, 0.0), (11.99, 0.0)), smooth=SOLVER_DEFAULT, timeSpan=
    STEP)
mdb.models['Model-1'].loads['Row1'].setValues(amplitude='Row1')
mdb.models['Model-1'].Pressure(amplitude='Row2', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row2', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-11-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row3', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row3', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row4', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row4', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-10-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row5', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Load-6', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].loads.changeKey(fromName='Load-6', toName='Row5')
mdb.models['Model-1'].Pressure(amplitude='Row6', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row6', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-9-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row7', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row7', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row8', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row8', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-8-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row9', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row9', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row10', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row10', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-7-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row11', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row11', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row12', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row12', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-6-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row13', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row13', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row14', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row14', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-5-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row15', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row15', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row16', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row16', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-4-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row17', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row17', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row18', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row18', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-3-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row19', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row19', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row20', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row20', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row21', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row21', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-8'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8-lin-2-1-lin-1-9'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].Pressure(amplitude='Row22', createStepName='Loading', 
    distributionType=UNIFORM, field='', magnitude=-1.0, name='Row22', region=
    Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-8'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-7'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-6'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-5'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-4'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-3'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Block-2'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['HalfBlock-1'].faces.getSequenceFromMask(
    mask=('[#10 ]', ), )))
mdb.models['Model-1'].steps['Loading'].setValues(improvedDtMethod=ON, 
    timePeriod=12.0)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE 2 (ASSEMBLY) IS USED AS A REFERENCE NODE FOR MORE THAN ONE RIGID BODY PROPERTY DEFINITION. EACH RIGID BODY PROPERTY DEFINITION MUST HAVE A UNIQUE REFERENCE NODE', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE 2 (ASSEMBLY) IS USED AS A REFERENCE NODE FOR MORE THAN ONE RIGID BODY PROPERTY DEFINITION. EACH RIGID BODY PROPERTY DEFINITION MUST HAVE A UNIQUE REFERENCE NODE', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'D:\\tpennock\\First delta flume\\Job-2.odb', 'jobName': 'Job-2'})
# Save by tpennock on 2025_04_28-16.00.16; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.meshEditOptions.setValues(enableUndo=True, maxUndoCacheElements=0.5)
# Save by tpennock on 2025_05_20-09.35.14; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.deleteFeatures(('RP-1', 'RP-2'))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 1.0))
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=(0.0, 0.0, 2.0))
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[478], 
    mdb.models['Model-1'].rootAssembly.referencePoints[479], 
    mdb.models['Model-1'].rootAssembly.referencePoints[480], )))
mdb.models['Model-1'].constraints['Constraint-1'].setValues(refPointRegion=
    Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[478], )))
mdb.models['Model-1'].constraints['Constraint-2'].setValues(refPointRegion=
    Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[479], )))
mdb.models['Model-1'].constraints['Constraint-3'].setValues(refPointRegion=
    Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[480], )))
mdb.models['Model-1'].loads.delete(('Row1', 'Row2', 'Row3', 'Row4', 'Row5', 
    'Row6', 'Row7', 'Row8', 'Row9', 'Row10', 'Row11', 'Row12', 'Row13', 
    'Row14', 'Row15', 'Row16', 'Row17', 'Row18', 'Row19', 'Row20', 'Row21', 
    'Row22'))
del mdb.models['Model-1'].amplitudes['Row1']
del mdb.models['Model-1'].amplitudes['Row2']
del mdb.models['Model-1'].amplitudes['Row3']
del mdb.models['Model-1'].amplitudes['Row4']
del mdb.models['Model-1'].amplitudes['Row5']
del mdb.models['Model-1'].amplitudes['Row6']
del mdb.models['Model-1'].amplitudes['Row7']
del mdb.models['Model-1'].amplitudes['Row8']
del mdb.models['Model-1'].amplitudes['Row9']
del mdb.models['Model-1'].amplitudes['Row10']
del mdb.models['Model-1'].amplitudes['Row11']
del mdb.models['Model-1'].amplitudes['Row12']
del mdb.models['Model-1'].amplitudes['Row13']
del mdb.models['Model-1'].amplitudes['Row14']
del mdb.models['Model-1'].amplitudes['Row15']
del mdb.models['Model-1'].amplitudes['Row16']
del mdb.models['Model-1'].amplitudes['Row17']
del mdb.models['Model-1'].amplitudes['Row18']
del mdb.models['Model-1'].amplitudes['Row19']
del mdb.models['Model-1'].amplitudes['Row20']
del mdb.models['Model-1'].amplitudes['Row21']
del mdb.models['Model-1'].amplitudes['Row22']
# Save by tpennock on 2025_05_26-10.15.24; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 21308, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 20640, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 0.00999999977648258, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-2', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Print-out suppressed for subsequent distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There are a total of 8965 excessively distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some nodes involved in general contact have penetrated their tracked faces by more than 50.000 percent of the typical element dimension in the general contact domain, 6.94815E-02. Please check the node set "InfoNodeDeepPenetFirst". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some edges involved in general contact have penetrated by more than 50.000 percent of the typical element dimension in the general contact domain, 6.94815E-02. Please check the node set "InfoEdgeDeepPenetFirst".Please make sure that these edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0199999995529652, 
    'stableTimeIncrement': 9.9999998245167e-15, 'internalEnergy': 0.0, 
    'stepTime': 0.0199999995529652, 'totalEnergy': 1.61436522234362e+24, 
    'jobName': 'Job-2', 'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 3, 'distortionContrEnergy': 0.0, 
    'externalWork': -5362904.5, 'kineticEnergy': 1.61436507822843e+24, 
    'wallTime': 4.0})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All  nodes involved in general contact that have undergone deep penetration of their tracked faces during this step have been listed in node set "InfoNodeDeepPenetAll". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All nodes of edges involved in general contact that have undergone deep penetration during this step have been listed in node set "InfoEdgeDeepPenetAll". Please make sure that these contacting edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
# Save by tpennock on 2025_05_26-11.22.22; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 2092, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-2'})
mdb.models['Model-1'].Interaction(name='Int-2', objectToCopy=
    mdb.models['Model-1'].interactions['Int-1'], toStepName='Initial')
#* The specified type of interaction cannot be created or resumed in this type 
#* of step.
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 3556, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 0.00999999977648258, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-2', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Print-out suppressed for subsequent distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There are a total of 8965 excessively distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some nodes involved in general contact have penetrated their tracked faces by more than 50.000 percent of the typical element dimension in the general contact domain, 6.94815E-02. Please check the node set "InfoNodeDeepPenetFirst". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some edges involved in general contact have penetrated by more than 50.000 percent of the typical element dimension in the general contact domain, 6.94815E-02. Please check the node set "InfoEdgeDeepPenetFirst".Please make sure that these edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0199999995529652, 
    'stableTimeIncrement': 9.9999998245167e-15, 'internalEnergy': 0.0, 
    'stepTime': 0.0199999995529652, 'totalEnergy': 1.61436522234362e+24, 
    'jobName': 'Job-2', 'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 3, 'distortionContrEnergy': 0.0, 
    'externalWork': -5362904.5, 'kineticEnergy': 1.61436507822843e+24, 
    'wallTime': 4.0})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All  nodes involved in general contact that have undergone deep penetration of their tracked faces during this step have been listed in node set "InfoNodeDeepPenetAll". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All nodes of edges involved in general contact that have undergone deep penetration during this step have been listed in node set "InfoEdgeDeepPenetAll". Please make sure that these contacting edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
mdb.models['Model-1'].ContactExp(createStepName='Initial', name='Int-2')
mdb.models['Model-1'].interactions['Int-2'].includedPairs.setValuesInStep(
    stepName='Initial', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-2'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, 'IntProp-1'), ), stepName='Initial')
del mdb.models['Model-1'].interactions['Int-1']
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 25148, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 14152, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 0.00999999977648258, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-2', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Print-out suppressed for subsequent distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There are a total of 8965 excessively distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some nodes involved in general contact have penetrated their tracked faces by more than 50.000 percent of the typical element dimension in the general contact domain, 6.94815E-02. Please check the node set "InfoNodeDeepPenetFirst". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some edges involved in general contact have penetrated by more than 50.000 percent of the typical element dimension in the general contact domain, 6.94815E-02. Please check the node set "InfoEdgeDeepPenetFirst".Please make sure that these edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0199999995529652, 
    'stableTimeIncrement': 9.9999998245167e-15, 'internalEnergy': 0.0, 
    'stepTime': 0.0199999995529652, 'totalEnergy': 1.61436522234362e+24, 
    'jobName': 'Job-2', 'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 3, 'distortionContrEnergy': 0.0, 
    'externalWork': -5362904.5, 'kineticEnergy': 1.61436507822843e+24, 
    'wallTime': 4.0})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All  nodes involved in general contact that have undergone deep penetration of their tracked faces during this step have been listed in node set "InfoNodeDeepPenetAll". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All nodes of edges involved in general contact that have undergone deep penetration during this step have been listed in node set "InfoEdgeDeepPenetAll". Please make sure that these contacting edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
mdb.models['Model-1'].SmoothStepAmplitude(data=((0.0, 0.0), (1.0, 1.0)), name=
    'Amp-1', timeSpan=STEP)
mdb.models['Model-1'].loads['Gravity'].setValues(amplitude='Amp-1', 
    distributionType=UNIFORM, field='')
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 26212, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 2392, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 0.00999999977648258, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-2', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed in the elements in element set WarnElemDeformRateExceedsRatio-Step1 exceed the warning ratio.  Refer to the status file for further details. This message is printed during the first applicable increment, but will not be printed during subsequent increments for the remainder of the step.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Print-out suppressed for subsequent distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'There are a total of 72 excessively distorted elements', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some nodes involved in general contact have penetrated their tracked faces by more than 50.000 percent of the typical element dimension in the general contact domain, 17.116. Please check the node set "InfoNodeDeepPenetFirst". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'Some edges involved in general contact have penetrated by more than 50.000 percent of the typical element dimension in the general contact domain, 17.116. Please check the node set "InfoEdgeDeepPenetFirst".Please make sure that these edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0299999993294477, 
    'stableTimeIncrement': 9.9999998245167e-15, 'internalEnergy': 27595658.0, 
    'stepTime': 0.0299999993294477, 'totalEnergy': 7.08720874067203e+19, 
    'jobName': 'Job-2', 'artificialEnergy': 4506509.5, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 4, 'distortionContrEnergy': 0.0, 
    'externalWork': -0.230796009302139, 'kineticEnergy': 7.08649361830933e+19, 
    'wallTime': 101.0})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All  nodes involved in general contact that have undergone deep penetration of their tracked faces during this step have been listed in node set "InfoNodeDeepPenetAll". Please make sure that these nodes and their contacting faces have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'All nodes of edges involved in general contact that have undergone deep penetration during this step have been listed in node set "InfoEdgeDeepPenetAll". Please make sure that these contacting edges have sufficient mass to allow the code to calculate realistic contact penalties for enforcing the contact constraint.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ABORTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-2'})
mdb.models['Model-1'].steps['Loading'].setValues(improvedDtMethod=ON, 
    maxIncrement=None, scaleFactor=1.0, timeIncrementationMethod=
    AUTOMATIC_GLOBAL)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
mdb.jobs['Job-2']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 26136, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 18828, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.19284413813148e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-2', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.0696418508887291, 
    'stableTimeIncrement': 1.48145436469349e-05, 
    'internalEnergy': 0.0779958814382553, 'stepTime': 0.0696418508887291, 
    'totalEnergy': 0.000379989214707166, 'jobName': 'Job-2', 
    'artificialEnergy': 0.0760603100061417, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4667, 'distortionContrEnergy': 0.0, 
    'externalWork': -0.0429128035902977, 'kineticEnergy': 0.21964704990387, 
    'wallTime': 121.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.143691539764404, 
    'stableTimeIncrement': 1.44632685987744e-05, 
    'internalEnergy': 0.0807227492332458, 'stepTime': 0.143691539764404, 
    'totalEnergy': 0.000386682979296893, 'jobName': 'Job-2', 
    'artificialEnergy': 0.078765757381916, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9694, 'distortionContrEnergy': 0.0, 
    'externalWork': -0.130523443222046, 'kineticEnergy': 0.124956376850605, 
    'wallTime': 241.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.211426168680191, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 0.356532007455826, 'stepTime': 0.211426168680191, 
    'totalEnergy': 0.00731332926079631, 'jobName': 'Job-2', 
    'artificialEnergy': 0.225936412811279, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 14370, 'distortionContrEnergy': 0.0, 
    'externalWork': 2.55322337150574, 'kineticEnergy': 0.926074743270874, 
    'wallTime': 361.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.27077117562294, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 0.514051079750061, 'stepTime': 0.27077117562294, 
    'totalEnergy': 0.00844025518745184, 'jobName': 'Job-2', 
    'artificialEnergy': 0.41658541560173, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 18473, 'distortionContrEnergy': 0.0, 
    'externalWork': 3.4089789390564, 'kineticEnergy': 0.281260371208191, 
    'wallTime': 481.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.324049085378647, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 0.609784722328186, 'stepTime': 0.324049085378647, 
    'totalEnergy': 0.0128685496747494, 'jobName': 'Job-2', 
    'artificialEnergy': 0.541209995746613, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22159, 'distortionContrEnergy': 0.0, 
    'externalWork': 3.72680234909058, 'kineticEnergy': 0.0815224125981331, 
    'wallTime': 601.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.374002546072006, 
    'stableTimeIncrement': 1.44629821079434e-05, 
    'internalEnergy': 0.718635678291321, 'stepTime': 0.374002546072006, 
    'totalEnergy': 0.0124433394521475, 'jobName': 'Job-2', 
    'artificialEnergy': 0.654042422771454, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 25615, 'distortionContrEnergy': 0.0, 
    'externalWork': 3.81692028045654, 'kineticEnergy': 0.059108454734087, 
    'wallTime': 721.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.42061710357666, 
    'stableTimeIncrement': 1.44629848364275e-05, 
    'internalEnergy': 0.855396628379822, 'stepTime': 0.42061710357666, 
    'totalEnergy': 0.016302140429616, 'jobName': 'Job-2', 
    'artificialEnergy': 0.767306208610535, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28840, 'distortionContrEnergy': 0.0, 
    'externalWork': 3.88772106170654, 'kineticEnergy': 0.0778462812304497, 
    'wallTime': 841.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.466653496026993, 
    'stableTimeIncrement': 1.44629539136076e-05, 
    'internalEnergy': 1.01443898677826, 'stepTime': 0.466653496026993, 
    'totalEnergy': 0.0198664404451847, 'jobName': 'Job-2', 
    'artificialEnergy': 0.898059725761414, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 32025, 'distortionContrEnergy': 0.0, 
    'externalWork': 3.96132588386536, 'kineticEnergy': 0.0921920761466026, 
    'wallTime': 961.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.51404857635498, 
    'stableTimeIncrement': 1.44629848364275e-05, 
    'internalEnergy': 1.18801927566528, 'stepTime': 0.51404857635498, 
    'totalEnergy': 0.0222532898187637, 'jobName': 'Job-2', 
    'artificialEnergy': 1.0495582818985, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 35302, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.04134273529053, 'kineticEnergy': 0.0967817306518555, 
    'wallTime': 1081.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.557703137397766, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 1.37010133266449, 'stepTime': 0.557703137397766, 
    'totalEnergy': 0.0230995565652847, 'jobName': 'Job-2', 
    'artificialEnergy': 1.21088576316833, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 38316, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.08876800537109, 'kineticEnergy': 0.103809610009193, 
    'wallTime': 1201.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.600010693073273, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 1.53887736797333, 'stepTime': 0.600010693073273, 
    'totalEnergy': 0.0246122144162655, 'jobName': 'Job-2', 
    'artificialEnergy': 1.36087727546692, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 41237, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.16620063781738, 'kineticEnergy': 0.0938469171524048, 
    'wallTime': 1312.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.644592225551605, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 1.83369600772858, 'stepTime': 0.644592225551605, 
    'totalEnergy': 0.0349578224122524, 'jobName': 'Job-2', 
    'artificialEnergy': 1.56723809242249, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 44315, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.23018789291382, 'kineticEnergy': 0.162652909755707, 
    'wallTime': 1433.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.685726583003998, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 2.07227611541748, 'stepTime': 0.685726583003998, 
    'totalEnergy': 0.0353598482906818, 'jobName': 'Job-2', 
    'artificialEnergy': 1.78572618961334, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 47155, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.23878049850464, 'kineticEnergy': 0.186647817492485, 
    'wallTime': 1553.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.727252006530762, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 2.30370140075684, 'stepTime': 0.727252006530762, 
    'totalEnergy': 0.0337303094565868, 'jobName': 'Job-2', 
    'artificialEnergy': 2.01809549331665, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 50022, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.29538059234619, 'kineticEnergy': 0.144664734601974, 
    'wallTime': 1673.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.768893301486969, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 2.58477091789246, 'stepTime': 0.768893301486969, 
    'totalEnergy': 0.0372510589659214, 'jobName': 'Job-2', 
    'artificialEnergy': 2.26298880577087, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 52897, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.34245920181274, 'kineticEnergy': 0.170947566628456, 
    'wallTime': 1793.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.810607016086578, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 2.83265900611877, 'stepTime': 0.810607016086578, 
    'totalEnergy': 0.0359349250793457, 'jobName': 'Job-2', 
    'artificialEnergy': 2.50136995315552, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 55777, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.35653400421143, 'kineticEnergy': 0.158204317092896, 
    'wallTime': 1913.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.849728107452393, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 3.19106364250183, 'stepTime': 0.849728107452393, 
    'totalEnergy': 0.0418677963316441, 'jobName': 'Job-2', 
    'artificialEnergy': 2.80901670455933, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 58478, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.41816234588623, 'kineticEnergy': 0.202562719583511, 
    'wallTime': 2033.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.890616238117218, 
    'stableTimeIncrement': 1.44629848364275e-05, 
    'internalEnergy': 3.47275996208191, 'stepTime': 0.890616238117218, 
    'totalEnergy': 0.0418168939650059, 'jobName': 'Job-2', 
    'artificialEnergy': 3.09813809394836, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 61301, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.42495107650757, 'kineticEnergy': 0.197380304336548, 
    'wallTime': 2153.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.931011915206909, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 3.74650907516479, 'stepTime': 0.931011915206909, 
    'totalEnergy': 0.0388326682150364, 'jobName': 'Job-2', 
    'artificialEnergy': 3.36050653457642, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 64090, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48361682891846, 'kineticEnergy': 0.164721488952637, 
    'wallTime': 2273.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 0.971929013729095, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 4.03827714920044, 'stepTime': 0.971929013729095, 
    'totalEnergy': 0.0398889109492302, 'jobName': 'Job-2', 
    'artificialEnergy': 3.6448335647583, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 66915, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47528028488159, 'kineticEnergy': 0.181162744760513, 
    'wallTime': 2393.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.01249039173126, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 4.32602167129517, 'stepTime': 1.01249039173126, 
    'totalEnergy': 0.0415825918316841, 'jobName': 'Job-2', 
    'artificialEnergy': 3.92811870574951, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 69719, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48654222488403, 'kineticEnergy': 0.18381755053997, 
    'wallTime': 2513.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.05263328552246, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 4.54952001571655, 'stepTime': 1.05263328552246, 
    'totalEnergy': 0.0375654324889183, 'jobName': 'Job-2', 
    'artificialEnergy': 4.16974687576294, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 72502, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46557235717773, 'kineticEnergy': 0.163976058363914, 
    'wallTime': 2633.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.09292042255402, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 4.8022985458374, 'stepTime': 1.09292042255402, 
    'totalEnergy': 0.0375996828079224, 'jobName': 'Job-2', 
    'artificialEnergy': 4.42244529724121, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 75295, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48286581039429, 'kineticEnergy': 0.162533283233643, 
    'wallTime': 2753.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.13469326496124, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 5.08210372924805, 'stepTime': 1.13469326496124, 
    'totalEnergy': 0.0403723903000355, 'jobName': 'Job-2', 
    'artificialEnergy': 4.68217420578003, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 78191, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4990553855896, 'kineticEnergy': 0.184395223855972, 
    'wallTime': 2873.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.17645168304443, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 5.32622671127319, 'stepTime': 1.17645168304443, 
    'totalEnergy': 0.0380961075425148, 'jobName': 'Job-2', 
    'artificialEnergy': 4.94805860519409, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 81086, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49117231369019, 'kineticEnergy': 0.164832890033722, 
    'wallTime': 2993.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.20000660419464, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 5.51966285705566, 'stepTime': 1.20000660419464, 
    'totalEnergy': 0.041466623544693, 'jobName': 'Job-2', 
    'artificialEnergy': 5.10164546966553, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 82719, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.51227378845215, 'kineticEnergy': 0.186504825949669, 
    'wallTime': 3060.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.24407291412354, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 5.77633428573608, 'stepTime': 1.24407291412354, 
    'totalEnergy': 0.0385540500283241, 'jobName': 'Job-2', 
    'artificialEnergy': 5.3881950378418, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 85774, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47217798233032, 'kineticEnergy': 0.162890002131462, 
    'wallTime': 3180.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.28862965106964, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 6.13003587722778, 'stepTime': 1.28862965106964, 
    'totalEnergy': 0.0423919409513474, 'jobName': 'Job-2', 
    'artificialEnergy': 5.69845151901245, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 88863, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48368501663208, 'kineticEnergy': 0.199948444962502, 
    'wallTime': 3300.0})
# Save by tpennock on 2025_05_26-16.48.27; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.33307099342346, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 6.39505052566528, 'stepTime': 1.33307099342346, 
    'totalEnergy': 0.0416710339486599, 'jobName': 'Job-2', 
    'artificialEnergy': 5.99755048751831, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 91944, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49692630767822, 'kineticEnergy': 0.187311291694641, 
    'wallTime': 3420.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.37785851955414, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 6.69212627410889, 'stepTime': 1.37785851955414, 
    'totalEnergy': 0.0435062646865845, 'jobName': 'Job-2', 
    'artificialEnergy': 6.29331302642822, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 95049, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50522947311401, 'kineticEnergy': 0.18506346642971, 
    'wallTime': 3540.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.42264604568481, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 7.01178598403931, 'stepTime': 1.42264604568481, 
    'totalEnergy': 0.0421866737306118, 'jobName': 'Job-2', 
    'artificialEnergy': 6.60739850997925, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 98154, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49850845336914, 'kineticEnergy': 0.199989229440689, 
    'wallTime': 3660.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.46740472316742, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 7.32436847686768, 'stepTime': 1.46740472316742, 
    'totalEnergy': 0.0439951010048389, 'jobName': 'Job-2', 
    'artificialEnergy': 6.91565752029419, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 101257, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47541809082031, 'kineticEnergy': 0.199896454811096, 
    'wallTime': 3780.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.51207685470581, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 7.63065958023071, 'stepTime': 1.51207685470581, 
    'totalEnergy': 0.0395271964371204, 'jobName': 'Job-2', 
    'artificialEnergy': 7.21982574462891, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 104354, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50783681869507, 'kineticEnergy': 0.173553332686424, 
    'wallTime': 3900.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.55680668354034, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 7.93301725387573, 'stepTime': 1.55680668354034, 
    'totalEnergy': 0.0395491048693657, 'jobName': 'Job-2', 
    'artificialEnergy': 7.54742097854614, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 107455, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49131011962891, 'kineticEnergy': 0.171110689640045, 
    'wallTime': 4020.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.6014643907547, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 8.26708030700684, 'stepTime': 1.6014643907547, 
    'totalEnergy': 0.0418832637369633, 'jobName': 'Job-2', 
    'artificialEnergy': 7.86926651000977, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 110551, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46827125549316, 'kineticEnergy': 0.195457726716995, 
    'wallTime': 4140.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.64607882499695, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 8.58301734924316, 'stepTime': 1.64607882499695, 
    'totalEnergy': 0.0423703156411648, 'jobName': 'Job-2', 
    'artificialEnergy': 8.18354225158691, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 113644, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50225496292114, 'kineticEnergy': 0.190356835722923, 
    'wallTime': 4261.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.69096732139587, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 8.92022895812988, 'stepTime': 1.69096732139587, 
    'totalEnergy': 0.0438403785228729, 'jobName': 'Job-2', 
    'artificialEnergy': 8.48898410797119, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 116756, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49664449691772, 'kineticEnergy': 0.207388907670975, 
    'wallTime': 4381.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.73574042320251, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 9.15460872650146, 'stepTime': 1.73574042320251, 
    'totalEnergy': 0.0413447022438049, 'jobName': 'Job-2', 
    'artificialEnergy': 8.77079391479492, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 119860, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47376775741577, 'kineticEnergy': 0.17103710770607, 
    'wallTime': 4501.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.78054237365723, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 9.4500560760498, 'stepTime': 1.78054237365723, 
    'totalEnergy': 0.0380082167685032, 'jobName': 'Job-2', 
    'artificialEnergy': 9.0533390045166, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 122966, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50525140762329, 'kineticEnergy': 0.162279739975929, 
    'wallTime': 4621.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.80000078678131, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 9.58384037017822, 'stepTime': 1.80000078678131, 
    'totalEnergy': 0.0414455942809582, 'jobName': 'Job-2', 
    'artificialEnergy': 9.18441486358643, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 124315, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46186208724976, 'kineticEnergy': 0.187139227986336, 
    'wallTime': 4673.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.84540855884552, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 9.85454750061035, 'stepTime': 1.84540855884552, 
    'totalEnergy': 0.044247929006815, 'jobName': 'Job-2', 
    'artificialEnergy': 9.45199203491211, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 127463, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49414014816284, 'kineticEnergy': 0.187145620584488, 
    'wallTime': 4794.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.89096057415009, 
    'stableTimeIncrement': 1.44629502756288e-05, 
    'internalEnergy': 10.1809644699097, 'stepTime': 1.89096057415009, 
    'totalEnergy': 0.043663427233696, 'jobName': 'Job-2', 
    'artificialEnergy': 9.75865459442139, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 130621, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50328731536865, 'kineticEnergy': 0.188995569944382, 
    'wallTime': 4914.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.93619525432587, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 10.4528827667236, 'stepTime': 1.93619525432587, 
    'totalEnergy': 0.0409956723451614, 'jobName': 'Job-2', 
    'artificialEnergy': 10.057147026062, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 133757, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47420597076416, 'kineticEnergy': 0.18016804754734, 
    'wallTime': 5034.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 1.98184823989868, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 10.7807111740112, 'stepTime': 1.98184823989868, 
    'totalEnergy': 0.044047761708498, 'jobName': 'Job-2', 
    'artificialEnergy': 10.3808708190918, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 136922, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4696626663208, 'kineticEnergy': 0.198142617940903, 
    'wallTime': 5154.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.02777218818665, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 11.0621395111084, 'stepTime': 2.02777218818665, 
    'totalEnergy': 0.0382213145494461, 'jobName': 'Job-2', 
    'artificialEnergy': 10.6841621398926, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 140090, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48039770126343, 'kineticEnergy': 0.159564554691315, 
    'wallTime': 5274.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.07374429702759, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 11.398476600647, 'stepTime': 2.07374429702759, 
    'totalEnergy': 0.042008638381958, 'jobName': 'Job-2', 
    'artificialEnergy': 10.9973363876343, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 143251, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48734521865845, 'kineticEnergy': 0.185852393507957, 
    'wallTime': 5394.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.1190619468689, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 11.6838846206665, 'stepTime': 2.1190619468689, 
    'totalEnergy': 0.04073616117239, 'jobName': 'Job-2', 
    'artificialEnergy': 11.2796964645386, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 146367, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.51939249038696, 'kineticEnergy': 0.16755536198616, 
    'wallTime': 5514.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.16465592384338, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 12.0329465866089, 'stepTime': 2.16465592384338, 
    'totalEnergy': 0.0433186292648315, 'jobName': 'Job-2', 
    'artificialEnergy': 11.6068382263184, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 149502, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48660755157471, 'kineticEnergy': 0.19354572892189, 
    'wallTime': 5634.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.21033716201782, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 12.3206129074097, 'stepTime': 2.21033716201782, 
    'totalEnergy': 0.0401452295482159, 'jobName': 'Job-2', 
    'artificialEnergy': 11.9127035140991, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 152643, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50066328048706, 'kineticEnergy': 0.171599388122559, 
    'wallTime': 5754.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.25620746612549, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 12.6207103729248, 'stepTime': 2.25620746612549, 
    'totalEnergy': 0.0421914085745811, 'jobName': 'Job-2', 
    'artificialEnergy': 12.220139503479, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 155797, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49490547180176, 'kineticEnergy': 0.184003561735153, 
    'wallTime': 5874.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.30212140083313, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 12.9064788818359, 'stepTime': 2.30212140083313, 
    'totalEnergy': 0.0400329381227493, 'jobName': 'Job-2', 
    'artificialEnergy': 12.5239305496216, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 158954, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47328472137451, 'kineticEnergy': 0.166897162795067, 
    'wallTime': 5994.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.34797716140747, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 13.2313671112061, 'stepTime': 2.34797716140747, 
    'totalEnergy': 0.0416163578629494, 'jobName': 'Job-2', 
    'artificialEnergy': 12.8301763534546, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 162107, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49872875213623, 'kineticEnergy': 0.18683648109436, 
    'wallTime': 6114.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.39358568191528, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 13.5296039581299, 'stepTime': 2.39358568191528, 
    'totalEnergy': 0.0423256121575832, 'jobName': 'Job-2', 
    'artificialEnergy': 13.1188974380493, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 165243, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50047397613525, 'kineticEnergy': 0.181997016072273, 
    'wallTime': 6234.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.40001392364502, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 13.5589628219604, 'stepTime': 2.40001392364502, 
    'totalEnergy': 0.0419294647872448, 'jobName': 'Job-2', 
    'artificialEnergy': 13.1650819778442, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 165685, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49319458007812, 'kineticEnergy': 0.187146157026291, 
    'wallTime': 6251.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.44632053375244, 
    'stableTimeIncrement': 1.44629784699646e-05, 
    'internalEnergy': 13.8521509170532, 'stepTime': 2.44632053375244, 
    'totalEnergy': 0.0419286079704762, 'jobName': 'Job-2', 
    'artificialEnergy': 13.4579610824585, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 168869, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4826512336731, 'kineticEnergy': 0.181777194142342, 
    'wallTime': 6372.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.49297618865967, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 14.1812896728516, 'stepTime': 2.49297618865967, 
    'totalEnergy': 0.0434563905000687, 'jobName': 'Job-2', 
    'artificialEnergy': 13.7827796936035, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 172077, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50091934204102, 'kineticEnergy': 0.188327178359032, 
    'wallTime': 6492.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.53925371170044, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 14.5200166702271, 'stepTime': 2.53925371170044, 
    'totalEnergy': 0.0416689068078995, 'jobName': 'Job-2', 
    'artificialEnergy': 14.0955829620361, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 175259, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49580907821655, 'kineticEnergy': 0.194829553365707, 
    'wallTime': 6612.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.58534216880798, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 14.7388868331909, 'stepTime': 2.58534216880798, 
    'totalEnergy': 0.0385478958487511, 'jobName': 'Job-2', 
    'artificialEnergy': 14.3621597290039, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 178428, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47013711929321, 'kineticEnergy': 0.159973606467247, 
    'wallTime': 6732.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.63189601898193, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 15.0428133010864, 'stepTime': 2.63189601898193, 
    'totalEnergy': 0.0420669391751289, 'jobName': 'Job-2', 
    'artificialEnergy': 14.6433582305908, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 181629, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47410821914673, 'kineticEnergy': 0.192706793546677, 
    'wallTime': 6852.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.67852258682251, 
    'stableTimeIncrement': 1.44629429996712e-05, 
    'internalEnergy': 15.3587875366211, 'stepTime': 2.67852258682251, 
    'totalEnergy': 0.0449889227747917, 'jobName': 'Job-2', 
    'artificialEnergy': 14.9260587692261, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 184835, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48541021347046, 'kineticEnergy': 0.189719781279564, 
    'wallTime': 6972.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.72520732879639, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 15.5904569625854, 'stepTime': 2.72520732879639, 
    'totalEnergy': 0.0403434075415134, 'jobName': 'Job-2', 
    'artificialEnergy': 15.2065496444702, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 188045, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49216890335083, 'kineticEnergy': 0.163233056664467, 
    'wallTime': 7092.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.77167391777039, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 15.8705472946167, 'stepTime': 2.77167391777039, 
    'totalEnergy': 0.0419420413672924, 'jobName': 'Job-2', 
    'artificialEnergy': 15.4803009033203, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 191240, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49709510803223, 'kineticEnergy': 0.164345130324364, 
    'wallTime': 7212.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.81818413734436, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 16.156702041626, 'stepTime': 2.81818413734436, 
    'totalEnergy': 0.0416958369314671, 'jobName': 'Job-2', 
    'artificialEnergy': 15.7693748474121, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 194438, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4827356338501, 'kineticEnergy': 0.174045592546463, 
    'wallTime': 7332.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.86479616165161, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 16.4736557006836, 'stepTime': 2.86479616165161, 
    'totalEnergy': 0.0411884263157845, 'jobName': 'Job-2', 
    'artificialEnergy': 16.0656909942627, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 197643, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.5092134475708, 'kineticEnergy': 0.168413013219833, 
    'wallTime': 7452.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.91146636009216, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 16.7627792358398, 'stepTime': 2.91146636009216, 
    'totalEnergy': 0.0435578711330891, 'jobName': 'Job-2', 
    'artificialEnergy': 16.3566551208496, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 200852, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48384952545166, 'kineticEnergy': 0.193262204527855, 
    'wallTime': 7572.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 2.95786023139954, 
    'stableTimeIncrement': 1.44629539136076e-05, 
    'internalEnergy': 17.0583553314209, 'stepTime': 2.95786023139954, 
    'totalEnergy': 0.0454717613756657, 'jobName': 'Job-2', 
    'artificialEnergy': 16.6280136108398, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 204042, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.51796054840088, 'kineticEnergy': 0.189334765076637, 
    'wallTime': 7692.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.00000739097595, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 17.316801071167, 'stepTime': 3.00000739097595, 
    'totalEnergy': 0.0453545413911343, 'jobName': 'Job-2', 
    'artificialEnergy': 16.9110221862793, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 206940, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47869873046875, 'kineticEnergy': 0.197103530168533, 
    'wallTime': 7801.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.04645943641663, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 17.6152400970459, 'stepTime': 3.04645943641663, 
    'totalEnergy': 0.0439247339963913, 'jobName': 'Job-2', 
    'artificialEnergy': 17.2080707550049, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 210134, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48596286773682, 'kineticEnergy': 0.199701368808746, 
    'wallTime': 7921.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.0927369594574, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 17.9064712524414, 'stepTime': 3.0927369594574, 
    'totalEnergy': 0.045568436384201, 'jobName': 'Job-2', 
    'artificialEnergy': 17.4783306121826, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 213316, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49270677566528, 'kineticEnergy': 0.19228607416153, 
    'wallTime': 8041.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.1392035484314, 
    'stableTimeIncrement': 1.44629539136076e-05, 
    'internalEnergy': 18.1214714050293, 'stepTime': 3.1392035484314, 
    'totalEnergy': 0.0407215245068073, 'jobName': 'Job-2', 
    'artificialEnergy': 17.7444896697998, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 216511, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50315523147583, 'kineticEnergy': 0.157689049839973, 
    'wallTime': 8161.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.18568468093872, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 18.4157638549805, 'stepTime': 3.18568468093872, 
    'totalEnergy': 0.0399354472756386, 'jobName': 'Job-2', 
    'artificialEnergy': 18.0376033782959, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 219707, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45702743530273, 'kineticEnergy': 0.169412717223167, 
    'wallTime': 8281.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.23212218284607, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 18.6865005493164, 'stepTime': 3.23212218284607, 
    'totalEnergy': 0.0388388708233833, 'jobName': 'Job-2', 
    'artificialEnergy': 18.3115711212158, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 222900, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47641324996948, 'kineticEnergy': 0.154084846377373, 
    'wallTime': 8401.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.27885055541992, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 18.970422744751, 'stepTime': 3.27885055541992, 
    'totalEnergy': 0.0420826226472855, 'jobName': 'Job-2', 
    'artificialEnergy': 18.5825099945068, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 226113, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48522186279297, 'kineticEnergy': 0.165133744478226, 
    'wallTime': 8521.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.32552075386047, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 19.2295532226562, 'stepTime': 3.32552075386047, 
    'totalEnergy': 0.0411437675356865, 'jobName': 'Job-2', 
    'artificialEnergy': 18.8515243530273, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 229322, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47170066833496, 'kineticEnergy': 0.15519991517067, 
    'wallTime': 8641.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.37219095230103, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 19.5492362976074, 'stepTime': 3.37219095230103, 
    'totalEnergy': 0.0455529987812042, 'jobName': 'Job-2', 
    'artificialEnergy': 19.1511745452881, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 232531, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49855804443359, 'kineticEnergy': 0.192915141582489, 
    'wallTime': 8761.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.41906476020813, 
    'stableTimeIncrement': 1.44629329952295e-05, 
    'internalEnergy': 19.8280410766602, 'stepTime': 3.41906476020813, 
    'totalEnergy': 0.0406436659395695, 'jobName': 'Job-2', 
    'artificialEnergy': 19.4270172119141, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 235754, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50521850585938, 'kineticEnergy': 0.164977237582207, 
    'wallTime': 8881.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.46561861038208, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 20.1154308319092, 'stepTime': 3.46561861038208, 
    'totalEnergy': 0.0440740622580051, 'jobName': 'Job-2', 
    'artificialEnergy': 19.7120971679688, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 238955, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49469470977783, 'kineticEnergy': 0.186693876981735, 
    'wallTime': 9001.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.51227426528931, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 20.4052143096924, 'stepTime': 3.51227426528931, 
    'totalEnergy': 0.0454425439238548, 'jobName': 'Job-2', 
    'artificialEnergy': 19.9957733154297, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 242163, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48535871505737, 'kineticEnergy': 0.210989981889725, 
    'wallTime': 9121.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.55890083312988, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 20.6402416229248, 'stepTime': 3.55890083312988, 
    'totalEnergy': 0.0400923117995262, 'jobName': 'Job-2', 
    'artificialEnergy': 20.260181427002, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 245369, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47226095199585, 'kineticEnergy': 0.164108142256737, 
    'wallTime': 9241.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.60000085830688, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 20.9132194519043, 'stepTime': 3.60000085830688, 
    'totalEnergy': 0.0427727997303009, 'jobName': 'Job-2', 
    'artificialEnergy': 20.4987449645996, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 248195, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49252891540527, 'kineticEnergy': 0.175726816058159, 
    'wallTime': 9347.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.64630746841431, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 21.1569442749023, 'stepTime': 3.64630746841431, 
    'totalEnergy': 0.0424087308347225, 'jobName': 'Job-2', 
    'artificialEnergy': 20.7667121887207, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 251379, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48764657974243, 'kineticEnergy': 0.17201155424118, 
    'wallTime': 9468.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.69284677505493, 
    'stableTimeIncrement': 1.44629566420917e-05, 
    'internalEnergy': 21.4652881622314, 'stepTime': 3.69284677505493, 
    'totalEnergy': 0.0439548455178738, 'jobName': 'Job-2', 
    'artificialEnergy': 21.0640468597412, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 254579, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50102138519287, 'kineticEnergy': 0.181330591440201, 
    'wallTime': 9588.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.73954606056213, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 21.7227420806885, 'stepTime': 3.73954606056213, 
    'totalEnergy': 0.0395727977156639, 'jobName': 'Job-2', 
    'artificialEnergy': 21.3461780548096, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 257790, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46137380599976, 'kineticEnergy': 0.158508270978928, 
    'wallTime': 9708.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.78591084480286, 
    'stableTimeIncrement': 1.44629839269328e-05, 
    'internalEnergy': 21.9997806549072, 'stepTime': 3.78591084480286, 
    'totalEnergy': 0.0413003861904144, 'jobName': 'Job-2', 
    'artificialEnergy': 21.6186504364014, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 260978, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50534105300903, 'kineticEnergy': 0.162658929824829, 
    'wallTime': 9828.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.83224654197693, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 22.3299884796143, 'stepTime': 3.83224654197693, 
    'totalEnergy': 0.043231625109911, 'jobName': 'Job-2', 
    'artificialEnergy': 21.9345645904541, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 264164, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48472833633423, 'kineticEnergy': 0.180881485342979, 
    'wallTime': 9948.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.87884402275085, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 22.5826473236084, 'stepTime': 3.87884402275085, 
    'totalEnergy': 0.0401896312832832, 'jobName': 'Job-2', 
    'artificialEnergy': 22.2080230712891, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 267368, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50145053863525, 'kineticEnergy': 0.153051108121872, 
    'wallTime': 10068.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.92503428459167, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 22.8602752685547, 'stepTime': 3.92503428459167, 
    'totalEnergy': 0.0400138683617115, 'jobName': 'Job-2', 
    'artificialEnergy': 22.4828605651855, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 270544, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46934366226196, 'kineticEnergy': 0.160005316138268, 
    'wallTime': 10188.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 3.97148633003235, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 23.1369304656982, 'stepTime': 3.97148633003235, 
    'totalEnergy': 0.041342131793499, 'jobName': 'Job-2', 
    'artificialEnergy': 22.7590045928955, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 273738, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50130033493042, 'kineticEnergy': 0.158573284745216, 
    'wallTime': 10308.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.01755857467651, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 23.4057884216309, 'stepTime': 4.01755857467651, 
    'totalEnergy': 0.0398867428302765, 'jobName': 'Job-2', 
    'artificialEnergy': 23.0328521728516, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 276926, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49969148635864, 'kineticEnergy': 0.149983793497086, 
    'wallTime': 10428.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.06322050094604, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 23.7262687683105, 'stepTime': 4.06322050094604, 
    'totalEnergy': 0.0440869890153408, 'jobName': 'Job-2', 
    'artificialEnergy': 23.3310356140137, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 280118, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47664356231689, 'kineticEnergy': 0.176342502236366, 
    'wallTime': 10548.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.10869646072388, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 24.0167484283447, 'stepTime': 4.10869646072388, 
    'totalEnergy': 0.0441735833883286, 'jobName': 'Job-2', 
    'artificialEnergy': 23.628231048584, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 283297, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.5054931640625, 'kineticEnergy': 0.169355273246765, 
    'wallTime': 10668.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.1543869972229, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 24.3274021148682, 'stepTime': 4.1543869972229, 
    'totalEnergy': 0.0430922769010067, 'jobName': 'Job-2', 
    'artificialEnergy': 23.9171504974365, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 286491, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.51371049880981, 'kineticEnergy': 0.17501699924469, 
    'wallTime': 10788.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.20000600814819, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 24.5614624023438, 'stepTime': 4.20000600814819, 
    'totalEnergy': 0.0402076989412308, 'jobName': 'Job-2', 
    'artificialEnergy': 24.1920318603516, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 289680, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48397779464722, 'kineticEnergy': 0.157636165618896, 
    'wallTime': 10908.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.24539613723755, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 24.8438720703125, 'stepTime': 4.24539613723755, 
    'totalEnergy': 0.0418564043939114, 'jobName': 'Job-2', 
    'artificialEnergy': 24.4624938964844, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 292853, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47483015060425, 'kineticEnergy': 0.170171990990639, 
    'wallTime': 11028.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.29014253616333, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 25.1396236419678, 'stepTime': 4.29014253616333, 
    'totalEnergy': 0.0454604811966419, 'jobName': 'Job-2', 
    'artificialEnergy': 24.7374362945557, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 295981, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46865510940552, 'kineticEnergy': 0.187247738242149, 
    'wallTime': 11148.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.33606195449829, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 25.4286708831787, 'stepTime': 4.33606195449829, 
    'totalEnergy': 0.0426752232015133, 'jobName': 'Job-2', 
    'artificialEnergy': 25.0464820861816, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 299191, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48372411727905, 'kineticEnergy': 0.171559110283852, 
    'wallTime': 11268.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.38182401657104, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 25.7023181915283, 'stepTime': 4.38182401657104, 
    'totalEnergy': 0.0422888472676277, 'jobName': 'Job-2', 
    'artificialEnergy': 25.3200988769531, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 302390, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47857570648193, 'kineticEnergy': 0.172271400690079, 
    'wallTime': 11388.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.4279580116272, 
    'stableTimeIncrement': 1.44629475471447e-05, 
    'internalEnergy': 25.9940910339355, 'stepTime': 4.4279580116272, 
    'totalEnergy': 0.0441666394472122, 'jobName': 'Job-2', 
    'artificialEnergy': 25.6121082305908, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 305615, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48539781570435, 'kineticEnergy': 0.157648369669914, 
    'wallTime': 11508.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.47423505783081, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 26.3181610107422, 'stepTime': 4.47423505783081, 
    'totalEnergy': 0.0437540970742702, 'jobName': 'Job-2', 
    'artificialEnergy': 25.9234352111816, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 308850, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50446701049805, 'kineticEnergy': 0.182752415537834, 
    'wallTime': 11628.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.5200400352478, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 26.6167659759521, 'stepTime': 4.5200400352478, 
    'totalEnergy': 0.0459250696003437, 'jobName': 'Job-2', 
    'artificialEnergy': 26.2033462524414, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 312052, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46495676040649, 'kineticEnergy': 0.201121047139168, 
    'wallTime': 11748.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.56627416610718, 
    'stableTimeIncrement': 1.44629393616924e-05, 
    'internalEnergy': 26.8901462554932, 'stepTime': 4.56627416610718, 
    'totalEnergy': 0.045962005853653, 'jobName': 'Job-2', 
    'artificialEnergy': 26.4932537078857, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 315284, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46926736831665, 'kineticEnergy': 0.185220912098885, 
    'wallTime': 11868.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.61232233047485, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 27.1953296661377, 'stepTime': 4.61232233047485, 
    'totalEnergy': 0.0439110696315765, 'jobName': 'Job-2', 
    'artificialEnergy': 26.7829532623291, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 318503, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49257326126099, 'kineticEnergy': 0.172939077019691, 
    'wallTime': 11988.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.65865659713745, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 27.4784297943115, 'stepTime': 4.65865659713745, 
    'totalEnergy': 0.0435601957142353, 'jobName': 'Job-2', 
    'artificialEnergy': 27.0868148803711, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 321742, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48849582672119, 'kineticEnergy': 0.168820053339005, 
    'wallTime': 12108.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.70496225357056, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 27.7646923065186, 'stepTime': 4.70496225357056, 
    'totalEnergy': 0.0423883982002735, 'jobName': 'Job-2', 
    'artificialEnergy': 27.3824195861816, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 324979, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49425649642944, 'kineticEnergy': 0.16812627017498, 
    'wallTime': 12228.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.7511248588562, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 28.0596904754639, 'stepTime': 4.7511248588562, 
    'totalEnergy': 0.049065712839365, 'jobName': 'Job-2', 
    'artificialEnergy': 27.6605491638184, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 328206, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49202108383179, 'kineticEnergy': 0.177243039011955, 
    'wallTime': 12348.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.79755926132202, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 28.3307647705078, 'stepTime': 4.79755926132202, 
    'totalEnergy': 0.0412145219743252, 'jobName': 'Job-2', 
    'artificialEnergy': 27.9276218414307, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 331452, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48697900772095, 'kineticEnergy': 0.15678970515728, 
    'wallTime': 12468.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.8000054359436, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 28.3340663909912, 'stepTime': 4.8000054359436, 
    'totalEnergy': 0.0434330888092518, 'jobName': 'Job-2', 
    'artificialEnergy': 27.9452323913574, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 331623, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50079154968262, 'kineticEnergy': 0.168427139520645, 
    'wallTime': 12475.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.84612512588501, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 28.6073131561279, 'stepTime': 4.84612512588501, 
    'totalEnergy': 0.0436848066747189, 'jobName': 'Job-2', 
    'artificialEnergy': 28.2192134857178, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 334847, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47227048873901, 'kineticEnergy': 0.173885598778725, 
    'wallTime': 12595.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.89225912094116, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 28.8361282348633, 'stepTime': 4.89225912094116, 
    'totalEnergy': 0.0401516295969486, 'jobName': 'Job-2', 
    'artificialEnergy': 28.4634571075439, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 338072, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47754430770874, 'kineticEnergy': 0.149899140000343, 
    'wallTime': 12715.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.93820714950562, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 29.0846672058105, 'stepTime': 4.93820714950562, 
    'totalEnergy': 0.040157426148653, 'jobName': 'Job-2', 
    'artificialEnergy': 28.7153091430664, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 341284, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49208116531372, 'kineticEnergy': 0.144768446683884, 
    'wallTime': 12835.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 4.98431253433228, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 29.3630180358887, 'stepTime': 4.98431253433228, 
    'totalEnergy': 0.0420387759804726, 'jobName': 'Job-2', 
    'artificialEnergy': 28.980297088623, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 344507, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47314214706421, 'kineticEnergy': 0.163723304867744, 
    'wallTime': 12955.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.03024625778198, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 29.6325740814209, 'stepTime': 5.03024625778198, 
    'totalEnergy': 0.0432998761534691, 'jobName': 'Job-2', 
    'artificialEnergy': 29.2509918212891, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 347718, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.494460105896, 'kineticEnergy': 0.156646773219109, 
    'wallTime': 13075.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.07625150680542, 
    'stableTimeIncrement': 1.44629475471447e-05, 
    'internalEnergy': 29.9215850830078, 'stepTime': 5.07625150680542, 
    'totalEnergy': 0.0447603240609169, 'jobName': 'Job-2', 
    'artificialEnergy': 29.5304527282715, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 350934, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48816347122192, 'kineticEnergy': 0.176485314965248, 
    'wallTime': 13195.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.12249994277954, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 30.2133369445801, 'stepTime': 5.12249994277954, 
    'totalEnergy': 0.0434730611741543, 'jobName': 'Job-2', 
    'artificialEnergy': 29.8039855957031, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 354167, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.5076961517334, 'kineticEnergy': 0.168152555823326, 
    'wallTime': 13315.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.16870546340942, 
    'stableTimeIncrement': 1.44629502756288e-05, 
    'internalEnergy': 30.4644565582275, 'stepTime': 5.16870546340942, 
    'totalEnergy': 0.0434007681906223, 'jobName': 'Job-2', 
    'artificialEnergy': 30.0746364593506, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 357397, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50622606277466, 'kineticEnergy': 0.164153903722763, 
    'wallTime': 13435.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.21472501754761, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 30.7405414581299, 'stepTime': 5.21472501754761, 
    'totalEnergy': 0.0454814769327641, 'jobName': 'Job-2', 
    'artificialEnergy': 30.3408432006836, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 360614, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4835958480835, 'kineticEnergy': 0.179627433419228, 
    'wallTime': 13556.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.26091623306274, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 31.008861541748, 'stepTime': 5.26091623306274, 
    'totalEnergy': 0.0427681691944599, 'jobName': 'Job-2', 
    'artificialEnergy': 30.6240844726562, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 363843, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50300931930542, 'kineticEnergy': 0.162218824028969, 
    'wallTime': 13676.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.30692148208618, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 31.3023700714111, 'stepTime': 5.30692148208618, 
    'totalEnergy': 0.0448710657656193, 'jobName': 'Job-2', 
    'artificialEnergy': 30.9118385314941, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 367059, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49706935882568, 'kineticEnergy': 0.176744237542152, 
    'wallTime': 13796.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.35302686691284, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 31.5724048614502, 'stepTime': 5.35302686691284, 
    'totalEnergy': 0.0435440205037594, 'jobName': 'Job-2', 
    'artificialEnergy': 31.183256149292, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 370282, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.5020580291748, 'kineticEnergy': 0.164800956845284, 
    'wallTime': 13916.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.39907503128052, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 31.8534908294678, 'stepTime': 5.39907503128052, 
    'totalEnergy': 0.0440098643302917, 'jobName': 'Job-2', 
    'artificialEnergy': 31.4646053314209, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 373501, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49210405349731, 'kineticEnergy': 0.166148662567139, 
    'wallTime': 14036.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.40000486373901, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 31.8567600250244, 'stepTime': 5.40000486373901, 
    'totalEnergy': 0.0445103757083416, 'jobName': 'Job-2', 
    'artificialEnergy': 31.471981048584, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 373566, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50007057189941, 'kineticEnergy': 0.170093461871147, 
    'wallTime': 14038.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.44555234909058, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 32.1315383911133, 'stepTime': 5.44555234909058, 
    'totalEnergy': 0.0448381640017033, 'jobName': 'Job-2', 
    'artificialEnergy': 31.7425403594971, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 376750, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49742126464844, 'kineticEnergy': 0.17005766928196, 
    'wallTime': 14159.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.49160051345825, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 32.3984146118164, 'stepTime': 5.49160051345825, 
    'totalEnergy': 0.0445517562329769, 'jobName': 'Job-2', 
    'artificialEnergy': 32.0152816772461, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 379969, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49333095550537, 'kineticEnergy': 0.158537909388542, 
    'wallTime': 14279.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.53779172897339, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 32.6734809875488, 'stepTime': 5.53779172897339, 
    'totalEnergy': 0.0454585589468479, 'jobName': 'Job-2', 
    'artificialEnergy': 32.2863426208496, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 383198, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49015665054321, 'kineticEnergy': 0.164476186037064, 
    'wallTime': 14399.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.58395433425903, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 32.95166015625, 'stepTime': 5.58395433425903, 
    'totalEnergy': 0.046644851565361, 'jobName': 'Job-2', 
    'artificialEnergy': 32.5600662231445, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 386425, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50981044769287, 'kineticEnergy': 0.169256374239922, 
    'wallTime': 14519.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.62941598892212, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 33.2384452819824, 'stepTime': 5.62941598892212, 
    'totalEnergy': 0.0441100224852562, 'jobName': 'Job-2', 
    'artificialEnergy': 32.8474922180176, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 389603, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48117446899414, 'kineticEnergy': 0.163054719567299, 
    'wallTime': 14639.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.67552137374878, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 33.5330963134766, 'stepTime': 5.67552137374878, 
    'totalEnergy': 0.0467161051928997, 'jobName': 'Job-2', 
    'artificialEnergy': 33.1303787231445, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 392826, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48052930831909, 'kineticEnergy': 0.187073349952698, 
    'wallTime': 14759.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.72164106369019, 
    'stableTimeIncrement': 1.44629411806818e-05, 
    'internalEnergy': 33.7922019958496, 'stepTime': 5.72164106369019, 
    'totalEnergy': 0.0445013977587223, 'jobName': 'Job-2', 
    'artificialEnergy': 33.4043617248535, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 396050, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47546815872192, 'kineticEnergy': 0.171079963445663, 
    'wallTime': 14879.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.76766061782837, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 34.0521240234375, 'stepTime': 5.76766061782837, 
    'totalEnergy': 0.0422868989408016, 'jobName': 'Job-2', 
    'artificialEnergy': 33.6765365600586, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 399267, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49709749221802, 'kineticEnergy': 0.154012456536293, 
    'wallTime': 14999.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.81372308731079, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 34.3409805297852, 'stepTime': 5.81372308731079, 
    'totalEnergy': 0.0450997017323971, 'jobName': 'Job-2', 
    'artificialEnergy': 33.9553375244141, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 402487, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50477933883667, 'kineticEnergy': 0.163582071661949, 
    'wallTime': 15119.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.85964250564575, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 34.6107788085938, 'stepTime': 5.85964250564575, 
    'totalEnergy': 0.0468473061919212, 'jobName': 'Job-2', 
    'artificialEnergy': 34.2169075012207, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 405697, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4607138633728, 'kineticEnergy': 0.174563065171242, 
    'wallTime': 15239.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.90583372116089, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 34.9080238342285, 'stepTime': 5.90583372116089, 
    'totalEnergy': 0.0434367842972279, 'jobName': 'Job-2', 
    'artificialEnergy': 34.5183601379395, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 408926, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4632740020752, 'kineticEnergy': 0.174860954284668, 
    'wallTime': 15359.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.95183897018433, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 35.1960334777832, 'stepTime': 5.95183897018433, 
    'totalEnergy': 0.0469247289001942, 'jobName': 'Job-2', 
    'artificialEnergy': 34.8013687133789, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 412142, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47401809692383, 'kineticEnergy': 0.173040181398392, 
    'wallTime': 15479.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 5.99791574478149, 
    'stableTimeIncrement': 1.44629429996712e-05, 
    'internalEnergy': 35.4807281494141, 'stepTime': 5.99791574478149, 
    'totalEnergy': 0.0453867614269257, 'jobName': 'Job-2', 
    'artificialEnergy': 35.0885925292969, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 415363, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48618793487549, 'kineticEnergy': 0.174640834331512, 
    'wallTime': 15599.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.00000429153442, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 35.5030746459961, 'stepTime': 6.00000429153442, 
    'totalEnergy': 0.0464199148118496, 'jobName': 'Job-2', 
    'artificialEnergy': 35.1031150817871, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 415509, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4907283782959, 'kineticEnergy': 0.178889662027359, 
    'wallTime': 15604.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.04609537124634, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 35.7766304016113, 'stepTime': 6.04609537124634, 
    'totalEnergy': 0.0469850152730942, 'jobName': 'Job-2', 
    'artificialEnergy': 35.3807601928711, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 418731, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48780488967896, 'kineticEnergy': 0.177836909890175, 
    'wallTime': 15725.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.09185743331909, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 36.0304641723633, 'stepTime': 6.09185743331909, 
    'totalEnergy': 0.0452061928808689, 'jobName': 'Job-2', 
    'artificialEnergy': 35.6383590698242, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 421930, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48934984207153, 'kineticEnergy': 0.162539407610893, 
    'wallTime': 15845.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.13753366470337, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 36.311824798584, 'stepTime': 6.13753366470337, 
    'totalEnergy': 0.0470731258392334, 'jobName': 'Job-2', 
    'artificialEnergy': 35.9111480712891, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 425123, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.51128101348877, 'kineticEnergy': 0.175553411245346, 
    'wallTime': 15965.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.18349599838257, 
    'stableTimeIncrement': 1.44629475471447e-05, 
    'internalEnergy': 36.5760688781738, 'stepTime': 6.18349599838257, 
    'totalEnergy': 0.0458138585090637, 'jobName': 'Job-2', 
    'artificialEnergy': 36.1849937438965, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 428336, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49497890472412, 'kineticEnergy': 0.162804126739502, 
    'wallTime': 16085.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.22928667068481, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 36.8628234863281, 'stepTime': 6.22928667068481, 
    'totalEnergy': 0.044422835111618, 'jobName': 'Job-2', 
    'artificialEnergy': 36.4730949401855, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 431537, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50479936599731, 'kineticEnergy': 0.170231565833092, 
    'wallTime': 16205.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.27483415603638, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 37.1678047180176, 'stepTime': 6.27483415603638, 
    'totalEnergy': 0.0480741523206234, 'jobName': 'Job-2', 
    'artificialEnergy': 36.7638206481934, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 434721, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49589061737061, 'kineticEnergy': 0.184936285018921, 
    'wallTime': 16325.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.31985235214233, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 37.4553604125977, 'stepTime': 6.31985235214233, 
    'totalEnergy': 0.0471723824739456, 'jobName': 'Job-2', 
    'artificialEnergy': 37.0552520751953, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 437868, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47365236282349, 'kineticEnergy': 0.183276861906052, 
    'wallTime': 16445.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.36568593978882, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 37.761604309082, 'stepTime': 6.36568593978882, 
    'totalEnergy': 0.0477636568248272, 'jobName': 'Job-2', 
    'artificialEnergy': 37.3581428527832, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 441072, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48012113571167, 'kineticEnergy': 0.190456107258797, 
    'wallTime': 16565.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.41184854507446, 
    'stableTimeIncrement': 1.44629502756288e-05, 
    'internalEnergy': 38.0655288696289, 'stepTime': 6.41184854507446, 
    'totalEnergy': 0.0462621338665485, 'jobName': 'Job-2', 
    'artificialEnergy': 37.6678848266602, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 444299, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49936628341675, 'kineticEnergy': 0.172257393598557, 
    'wallTime': 16685.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.45779657363892, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 38.3534355163574, 'stepTime': 6.45779657363892, 
    'totalEnergy': 0.0477381981909275, 'jobName': 'Job-2', 
    'artificialEnergy': 37.9537010192871, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 447511, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48731088638306, 'kineticEnergy': 0.176600903272629, 
    'wallTime': 16805.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.50373029708862, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 38.6241302490234, 'stepTime': 6.50373029708862, 
    'totalEnergy': 0.0444963648915291, 'jobName': 'Job-2', 
    'artificialEnergy': 38.232837677002, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 450722, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48395824432373, 'kineticEnergy': 0.166344732046127, 
    'wallTime': 16925.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.54943513870239, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 38.8943748474121, 'stepTime': 6.54943513870239, 
    'totalEnergy': 0.0436783283948898, 'jobName': 'Job-2', 
    'artificialEnergy': 38.5023918151855, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 453917, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48514461517334, 'kineticEnergy': 0.160091280937195, 
    'wallTime': 17045.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.59534025192261, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 39.1817207336426, 'stepTime': 6.59534025192261, 
    'totalEnergy': 0.0463574603199959, 'jobName': 'Job-2', 
    'artificialEnergy': 38.7910194396973, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 457126, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47879695892334, 'kineticEnergy': 0.173710405826569, 
    'wallTime': 17165.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.60000371932983, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 39.1885528564453, 'stepTime': 6.60000371932983, 
    'totalEnergy': 0.0439572371542454, 'jobName': 'Job-2', 
    'artificialEnergy': 38.8115615844727, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 457452, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49438285827637, 'kineticEnergy': 0.156543731689453, 
    'wallTime': 17178.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.64520788192749, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 39.4787902832031, 'stepTime': 6.64520788192749, 
    'totalEnergy': 0.0462297685444355, 'jobName': 'Job-2', 
    'artificialEnergy': 39.0854835510254, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 460612, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49539804458618, 'kineticEnergy': 0.172282472252846, 
    'wallTime': 17298.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.69108438491821, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 39.7597160339355, 'stepTime': 6.69108438491821, 
    'totalEnergy': 0.0469862073659897, 'jobName': 'Job-2', 
    'artificialEnergy': 39.3615760803223, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 463819, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50537157058716, 'kineticEnergy': 0.175227344036102, 
    'wallTime': 17418.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.73677492141724, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 40.049747467041, 'stepTime': 6.73677492141724, 
    'totalEnergy': 0.0457838177680969, 'jobName': 'Job-2', 
    'artificialEnergy': 39.6523323059082, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 467013, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47742509841919, 'kineticEnergy': 0.172159433364868, 
    'wallTime': 17538.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.78278017044067, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 40.3401412963867, 'stepTime': 6.78278017044067, 
    'totalEnergy': 0.0473062470555305, 'jobName': 'Job-2', 
    'artificialEnergy': 39.9467506408691, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 470229, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50132989883423, 'kineticEnergy': 0.167619302868843, 
    'wallTime': 17658.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.8286566734314, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 40.6405258178711, 'stepTime': 6.8286566734314, 
    'totalEnergy': 0.0496418252587318, 'jobName': 'Job-2', 
    'artificialEnergy': 40.2434844970703, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 473436, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50544214248657, 'kineticEnergy': 0.175088539719582, 
    'wallTime': 17778.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.87466192245483, 
    'stableTimeIncrement': 1.44629539136076e-05, 
    'internalEnergy': 40.9515075683594, 'stepTime': 6.87466192245483, 
    'totalEnergy': 0.0490819364786148, 'jobName': 'Job-2', 
    'artificialEnergy': 40.5460243225098, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 476652, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48575735092163, 'kineticEnergy': 0.18733674287796, 
    'wallTime': 17898.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.92058134078979, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 41.2550773620605, 'stepTime': 6.92058134078979, 
    'totalEnergy': 0.0495589412748814, 'jobName': 'Job-2', 
    'artificialEnergy': 40.8545570373535, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 479862, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49419260025024, 'kineticEnergy': 0.185929179191589, 
    'wallTime': 18018.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 6.9665150642395, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 41.5551261901855, 'stepTime': 6.9665150642395, 
    'totalEnergy': 0.0486404374241829, 'jobName': 'Job-2', 
    'artificialEnergy': 41.1509284973145, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 483073, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48788499832153, 'kineticEnergy': 0.179115980863571, 
    'wallTime': 18138.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.01217699050903, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 41.8152046203613, 'stepTime': 7.01217699050903, 
    'totalEnergy': 0.0462560728192329, 'jobName': 'Job-2', 
    'artificialEnergy': 41.425609588623, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 486265, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47353553771973, 'kineticEnergy': 0.167774960398674, 
    'wallTime': 18258.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.05808210372925, 
    'stableTimeIncrement': 1.44629539136076e-05, 
    'internalEnergy': 42.0857963562012, 'stepTime': 7.05808210372925, 
    'totalEnergy': 0.0447437092661858, 'jobName': 'Job-2', 
    'artificialEnergy': 41.6954078674316, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 489474, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47172355651855, 'kineticEnergy': 0.163917601108551, 
    'wallTime': 18378.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.10397291183472, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 42.4212532043457, 'stepTime': 7.10397291183472, 
    'totalEnergy': 0.0527086742222309, 'jobName': 'Job-2', 
    'artificialEnergy': 42.0034713745117, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 492682, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50045013427734, 'kineticEnergy': 0.197628125548363, 
    'wallTime': 18498.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.14967775344849, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 42.6887702941895, 'stepTime': 7.14967775344849, 
    'totalEnergy': 0.0483042635023594, 'jobName': 'Job-2', 
    'artificialEnergy': 42.2877464294434, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 495877, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47591066360474, 'kineticEnergy': 0.181701719760895, 
    'wallTime': 18618.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.19552564620972, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 42.9722442626953, 'stepTime': 7.19552564620972, 
    'totalEnergy': 0.0460249371826649, 'jobName': 'Job-2', 
    'artificialEnergy': 42.5808296203613, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 499082, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47019815444946, 'kineticEnergy': 0.166686460375786, 
    'wallTime': 18738.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.20000314712524, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 42.9912261962891, 'stepTime': 7.20000314712524, 
    'totalEnergy': 0.0462999269366264, 'jobName': 'Job-2', 
    'artificialEnergy': 42.6059951782227, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 499395, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48353481292725, 'kineticEnergy': 0.160157740116119, 
    'wallTime': 18750.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.24586534500122, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 43.2981948852539, 'stepTime': 7.24586534500122, 
    'totalEnergy': 0.0494427569210529, 'jobName': 'Job-2', 
    'artificialEnergy': 42.893238067627, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 502601, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48602104187012, 'kineticEnergy': 0.194842770695686, 
    'wallTime': 18870.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.29155588150024, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 43.579273223877, 'stepTime': 7.29155588150024, 
    'totalEnergy': 0.0475583598017693, 'jobName': 'Job-2', 
    'artificialEnergy': 43.1771469116211, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 505795, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4699912071228, 'kineticEnergy': 0.182087674736977, 
    'wallTime': 18990.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.33751821517944, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 43.8608322143555, 'stepTime': 7.33751821517944, 
    'totalEnergy': 0.0502488687634468, 'jobName': 'Job-2', 
    'artificialEnergy': 43.4540939331055, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 509008, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46619319915771, 'kineticEnergy': 0.188387006521225, 
    'wallTime': 19110.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.38322305679321, 
    'stableTimeIncrement': 1.44629502756288e-05, 
    'internalEnergy': 44.1320152282715, 'stepTime': 7.38322305679321, 
    'totalEnergy': 0.0494967885315418, 'jobName': 'Job-2', 
    'artificialEnergy': 43.7290458679199, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 512203, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50034093856812, 'kineticEnergy': 0.177465781569481, 
    'wallTime': 19231.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.42907094955444, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 44.409854888916, 'stepTime': 7.42907094955444, 
    'totalEnergy': 0.0479257293045521, 'jobName': 'Job-2', 
    'artificialEnergy': 44.0110778808594, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 515408, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48549270629883, 'kineticEnergy': 0.172700420022011, 
    'wallTime': 19351.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.47497606277466, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 44.6979179382324, 'stepTime': 7.47497606277466, 
    'totalEnergy': 0.0484323799610138, 'jobName': 'Job-2', 
    'artificialEnergy': 44.2924690246582, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 518617, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48255109786987, 'kineticEnergy': 0.180928647518158, 
    'wallTime': 19471.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.52072381973267, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 44.9631195068359, 'stepTime': 7.52072381973267, 
    'totalEnergy': 0.0466551259160042, 'jobName': 'Job-2', 
    'artificialEnergy': 44.5667991638184, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 521815, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47874116897583, 'kineticEnergy': 0.170942530035973, 
    'wallTime': 19591.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.5665717124939, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 45.2342300415039, 'stepTime': 7.5665717124939, 
    'totalEnergy': 0.0466419160366058, 'jobName': 'Job-2', 
    'artificialEnergy': 44.831974029541, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 525020, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47214841842651, 'kineticEnergy': 0.177822977304459, 
    'wallTime': 19711.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.61249113082886, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 45.5014381408691, 'stepTime': 7.61249113082886, 
    'totalEnergy': 0.0472930707037449, 'jobName': 'Job-2', 
    'artificialEnergy': 45.1050987243652, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 528230, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49883365631104, 'kineticEnergy': 0.167670905590057, 
    'wallTime': 19831.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.6583104133606, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 45.7678756713867, 'stepTime': 7.6583104133606, 
    'totalEnergy': 0.0472420789301395, 'jobName': 'Job-2', 
    'artificialEnergy': 45.3747138977051, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 531433, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49082803726196, 'kineticEnergy': 0.170560821890831, 
    'wallTime': 19951.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.70414400100708, 
    'stableTimeIncrement': 1.44629475471447e-05, 
    'internalEnergy': 46.0385284423828, 'stepTime': 7.70414400100708, 
    'totalEnergy': 0.0487969480454922, 'jobName': 'Job-2', 
    'artificialEnergy': 45.637378692627, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 534637, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49395513534546, 'kineticEnergy': 0.171796679496765, 
    'wallTime': 20071.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.75009202957153, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 46.3130645751953, 'stepTime': 7.75009202957153, 
    'totalEnergy': 0.0482438392937183, 'jobName': 'Job-2', 
    'artificialEnergy': 45.9098358154297, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 537849, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47226476669312, 'kineticEnergy': 0.176551654934883, 
    'wallTime': 20191.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.79608297348022, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 46.5779266357422, 'stepTime': 7.79608297348022, 
    'totalEnergy': 0.0462558679282665, 'jobName': 'Job-2', 
    'artificialEnergy': 46.1810722351074, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 541064, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46765232086182, 'kineticEnergy': 0.173866450786591, 
    'wallTime': 20311.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.80000257492065, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 46.6035194396973, 'stepTime': 7.80000257492065, 
    'totalEnergy': 0.0484493896365166, 'jobName': 'Job-2', 
    'artificialEnergy': 46.2063941955566, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 541338, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48131513595581, 'kineticEnergy': 0.173818171024323, 
    'wallTime': 20321.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.84431982040405, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 46.8878631591797, 'stepTime': 7.84431982040405, 
    'totalEnergy': 0.0486687272787094, 'jobName': 'Job-2', 
    'artificialEnergy': 46.4876976013184, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 544436, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50305509567261, 'kineticEnergy': 0.17918598651886, 
    'wallTime': 20441.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.88885164260864, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 47.1690063476562, 'stepTime': 7.88885164260864, 
    'totalEnergy': 0.0509186126291752, 'jobName': 'Job-2', 
    'artificialEnergy': 46.7654609680176, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 547549, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49794244766235, 'kineticEnergy': 0.182171821594238, 
    'wallTime': 20561.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.9329686164856, 
    'stableTimeIncrement': 1.4462928447756e-05, 
    'internalEnergy': 47.444881439209, 'stepTime': 7.9329686164856, 
    'totalEnergy': 0.0483667366206646, 'jobName': 'Job-2', 
    'artificialEnergy': 47.0481147766113, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 550633, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4853253364563, 'kineticEnergy': 0.174270704388618, 
    'wallTime': 20681.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 7.97717142105103, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 47.7102699279785, 'stepTime': 7.97717142105103, 
    'totalEnergy': 0.0457958318293095, 'jobName': 'Job-2', 
    'artificialEnergy': 47.3222923278809, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 553723, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47316789627075, 'kineticEnergy': 0.160747572779655, 
    'wallTime': 20801.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.02156066894531, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 48.008674621582, 'stepTime': 8.02156066894531, 
    'totalEnergy': 0.0471410341560841, 'jobName': 'Job-2', 
    'artificialEnergy': 47.6016044616699, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 556826, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46205234527588, 'kineticEnergy': 0.181722581386566, 
    'wallTime': 20921.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.06579208374023, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 48.2742958068848, 'stepTime': 8.06579208374023, 
    'totalEnergy': 0.050494559109211, 'jobName': 'Job-2', 
    'artificialEnergy': 47.8699951171875, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 559918, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47144985198975, 'kineticEnergy': 0.181530341506004, 
    'wallTime': 21041.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.11010932922363, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 48.5398979187012, 'stepTime': 8.11010932922363, 
    'totalEnergy': 0.049755122512579, 'jobName': 'Job-2', 
    'artificialEnergy': 48.1386756896973, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 563016, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50216245651245, 'kineticEnergy': 0.179842233657837, 
    'wallTime': 21161.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.15456962585449, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 48.9163780212402, 'stepTime': 8.15456962585449, 
    'totalEnergy': 0.0555964298546314, 'jobName': 'Job-2', 
    'artificialEnergy': 48.4356231689453, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 566124, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.51844310760498, 'kineticEnergy': 0.237557902932167, 
    'wallTime': 21282.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.19891548156738, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 49.0797958374023, 'stepTime': 8.19891548156738, 
    'totalEnergy': 0.046342670917511, 'jobName': 'Job-2', 
    'artificialEnergy': 48.6892013549805, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 569224, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4827356338501, 'kineticEnergy': 0.164782345294952, 
    'wallTime': 21402.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.24276065826416, 
    'stableTimeIncrement': 1.44629429996712e-05, 
    'internalEnergy': 49.3675384521484, 'stepTime': 8.24276065826416, 
    'totalEnergy': 0.0496457815170288, 'jobName': 'Job-2', 
    'artificialEnergy': 48.9669494628906, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 572289, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49954032897949, 'kineticEnergy': 0.183296203613281, 
    'wallTime': 21522.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.28692054748535, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 49.6153793334961, 'stepTime': 8.28692054748535, 
    'totalEnergy': 0.0468469075858593, 'jobName': 'Job-2', 
    'artificialEnergy': 49.2240676879883, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 575376, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47440576553345, 'kineticEnergy': 0.164905712008476, 
    'wallTime': 21642.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.331223487854, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 49.8685569763184, 'stepTime': 8.331223487854, 
    'totalEnergy': 0.0459574498236179, 'jobName': 'Job-2', 
    'artificialEnergy': 49.4749221801758, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 578473, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47784233093262, 'kineticEnergy': 0.167185187339783, 
    'wallTime': 21762.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.37556934356689, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 50.1124496459961, 'stepTime': 8.37556934356689, 
    'totalEnergy': 0.0463018864393234, 'jobName': 'Job-2', 
    'artificialEnergy': 49.7230339050293, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 581573, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49650907516479, 'kineticEnergy': 0.160176992416382, 
    'wallTime': 21882.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.40000247955322, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 50.2646369934082, 'stepTime': 8.40000247955322, 
    'totalEnergy': 0.0479696504771709, 'jobName': 'Job-2', 
    'artificialEnergy': 49.8714790344238, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 583281, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50564098358154, 'kineticEnergy': 0.168199434876442, 
    'wallTime': 21948.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.44565010070801, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 50.5087242126465, 'stepTime': 8.44565010070801, 
    'totalEnergy': 0.0459260791540146, 'jobName': 'Job-2', 
    'artificialEnergy': 50.1259841918945, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 586472, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48707723617554, 'kineticEnergy': 0.159375175833702, 
    'wallTime': 22069.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.49128341674805, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 50.7465705871582, 'stepTime': 8.49128341674805, 
    'totalEnergy': 0.0449624210596085, 'jobName': 'Job-2', 
    'artificialEnergy': 50.3668594360352, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 589662, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48492431640625, 'kineticEnergy': 0.147228956222534, 
    'wallTime': 22189.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.53683090209961, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 50.9960098266602, 'stepTime': 8.53683090209961, 
    'totalEnergy': 0.0469860583543777, 'jobName': 'Job-2', 
    'artificialEnergy': 50.6048431396484, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 592846, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48647975921631, 'kineticEnergy': 0.16522878408432, 
    'wallTime': 22309.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.58240699768066, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 51.2502212524414, 'stepTime': 8.58240699768066, 
    'totalEnergy': 0.0454066321253777, 'jobName': 'Job-2', 
    'artificialEnergy': 50.8642120361328, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 596032, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47428560256958, 'kineticEnergy': 0.156063362956047, 
    'wallTime': 22429.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.6284122467041, 
    'stableTimeIncrement': 1.44629348142189e-05, 
    'internalEnergy': 51.48486328125, 'stepTime': 8.6284122467041, 
    'totalEnergy': 0.0464269481599331, 'jobName': 'Job-2', 
    'artificialEnergy': 51.1000709533691, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 599248, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47659111022949, 'kineticEnergy': 0.156961470842361, 
    'wallTime': 22549.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.67428874969482, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 51.7312660217285, 'stepTime': 8.67428874969482, 
    'totalEnergy': 0.0477205403149128, 'jobName': 'Job-2', 
    'artificialEnergy': 51.3436241149902, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 602455, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48927211761475, 'kineticEnergy': 0.163252755999565, 
    'wallTime': 22669.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.71967887878418, 
    'stableTimeIncrement': 1.44629329952295e-05, 
    'internalEnergy': 51.9689140319824, 'stepTime': 8.71967887878418, 
    'totalEnergy': 0.0464455373585224, 'jobName': 'Job-2', 
    'artificialEnergy': 51.5858955383301, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 605628, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47316360473633, 'kineticEnergy': 0.15579728782177, 
    'wallTime': 22789.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.76542663574219, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 52.1986885070801, 'stepTime': 8.76542663574219, 
    'totalEnergy': 0.0444308780133724, 'jobName': 'Job-2', 
    'artificialEnergy': 51.8191604614258, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 608826, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48263216018677, 'kineticEnergy': 0.149764031171799, 
    'wallTime': 22909.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.81097412109375, 
    'stableTimeIncrement': 1.44629775604699e-05, 
    'internalEnergy': 52.4297714233398, 'stepTime': 8.81097412109375, 
    'totalEnergy': 0.0455966331064701, 'jobName': 'Job-2', 
    'artificialEnergy': 52.0524444580078, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 612010, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47564077377319, 'kineticEnergy': 0.157420337200165, 
    'wallTime': 23029.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.85677909851074, 
    'stableTimeIncrement': 1.44629429996712e-05, 
    'internalEnergy': 52.6493911743164, 'stepTime': 8.85677909851074, 
    'totalEnergy': 0.0429322086274624, 'jobName': 'Job-2', 
    'artificialEnergy': 52.275318145752, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 615212, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47307872772217, 'kineticEnergy': 0.143906280398369, 
    'wallTime': 23149.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.90255546569824, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 52.8810348510742, 'stepTime': 8.90255546569824, 
    'totalEnergy': 0.0446126647293568, 'jobName': 'Job-2', 
    'artificialEnergy': 52.5045318603516, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 618412, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48034381866455, 'kineticEnergy': 0.151378154754639, 
    'wallTime': 23269.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.94846057891846, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 53.1212425231934, 'stepTime': 8.94846057891846, 
    'totalEnergy': 0.0466918833553791, 'jobName': 'Job-2', 
    'artificialEnergy': 52.7378425598145, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 621621, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47008419036865, 'kineticEnergy': 0.162924870848656, 
    'wallTime': 23389.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 8.99417972564697, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 53.3660926818848, 'stepTime': 8.99417972564697, 
    'totalEnergy': 0.0477301739156246, 'jobName': 'Job-2', 
    'artificialEnergy': 52.9800071716309, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 624817, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50660181045532, 'kineticEnergy': 0.153939336538315, 
    'wallTime': 23509.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.00000190734863, 
    'stableTimeIncrement': 1.44629393616924e-05, 
    'internalEnergy': 53.4056015014648, 'stepTime': 9.00000190734863, 
    'totalEnergy': 0.0509727820754051, 'jobName': 'Job-2', 
    'artificialEnergy': 53.0158615112305, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 625224, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.5012731552124, 'kineticEnergy': 0.166875258088112, 
    'wallTime': 23524.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.04592132568359, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 53.6757392883301, 'stepTime': 9.04592132568359, 
    'totalEnergy': 0.0478059537708759, 'jobName': 'Job-2', 
    'artificialEnergy': 53.2815437316895, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 628434, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47473239898682, 'kineticEnergy': 0.168379545211792, 
    'wallTime': 23645.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.09186935424805, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 53.9147338867188, 'stepTime': 9.09186935424805, 
    'totalEnergy': 0.0470956824719906, 'jobName': 'Job-2', 
    'artificialEnergy': 53.5290908813477, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 631646, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46379852294922, 'kineticEnergy': 0.15762759745121, 
    'wallTime': 23765.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.13788890838623, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 54.1580963134766, 'stepTime': 9.13788890838623, 
    'totalEnergy': 0.0466378591954708, 'jobName': 'Job-2', 
    'artificialEnergy': 53.7716064453125, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 634863, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49596452713013, 'kineticEnergy': 0.15846274793148, 
    'wallTime': 23885.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.1837797164917, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 54.4166069030762, 'stepTime': 9.1837797164917, 
    'totalEnergy': 0.0488601140677929, 'jobName': 'Job-2', 
    'artificialEnergy': 54.0261116027832, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 638071, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48272943496704, 'kineticEnergy': 0.166237473487854, 
    'wallTime': 24005.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.22959899902344, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 54.6621856689453, 'stepTime': 9.22959899902344, 
    'totalEnergy': 0.0489536672830582, 'jobName': 'Job-2', 
    'artificialEnergy': 54.2737464904785, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 641274, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47541618347168, 'kineticEnergy': 0.161251738667488, 
    'wallTime': 24125.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.27504634857178, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 54.8974533081055, 'stepTime': 9.27504634857178, 
    'totalEnergy': 0.0488565340638161, 'jobName': 'Job-2', 
    'artificialEnergy': 54.5045433044434, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 644451, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4698486328125, 'kineticEnergy': 0.164770007133484, 
    'wallTime': 24245.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.32080841064453, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 55.1252784729004, 'stepTime': 9.32080841064453, 
    'totalEnergy': 0.0482429303228855, 'jobName': 'Job-2', 
    'artificialEnergy': 54.738452911377, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 647650, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48844289779663, 'kineticEnergy': 0.157597944140434, 
    'wallTime': 24365.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.36665630340576, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 55.3797874450684, 'stepTime': 9.36665630340576, 
    'totalEnergy': 0.0487015135586262, 'jobName': 'Job-2', 
    'artificialEnergy': 54.9907150268555, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 650855, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4847559928894, 'kineticEnergy': 0.165733218193054, 
    'wallTime': 24486.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.41031551361084, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 55.6291618347168, 'stepTime': 9.41031551361084, 
    'totalEnergy': 0.0498235002160072, 'jobName': 'Job-2', 
    'artificialEnergy': 55.2311096191406, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 653907, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49922227859497, 'kineticEnergy': 0.169518828392029, 
    'wallTime': 24606.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.45590591430664, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 55.8923721313477, 'stepTime': 9.45590591430664, 
    'totalEnergy': 0.0493971556425095, 'jobName': 'Job-2', 
    'artificialEnergy': 55.4942893981934, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 657094, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49210691452026, 'kineticEnergy': 0.168189004063606, 
    'wallTime': 24727.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.50173950195312, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 56.158016204834, 'stepTime': 9.50173950195312, 
    'totalEnergy': 0.0497175343334675, 'jobName': 'Job-2', 
    'artificialEnergy': 55.7575759887695, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 660298, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4705171585083, 'kineticEnergy': 0.169301807880402, 
    'wallTime': 24847.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.5435962677002, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 56.3969078063965, 'stepTime': 9.5435962677002, 
    'totalEnergy': 0.0487946905195713, 'jobName': 'Job-2', 
    'artificialEnergy': 55.996711730957, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 663224, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48798990249634, 'kineticEnergy': 0.17328616976738, 
    'wallTime': 24968.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.58498096466064, 
    'stableTimeIncrement': 1.44629411806818e-05, 
    'internalEnergy': 56.6100692749023, 'stepTime': 9.58498096466064, 
    'totalEnergy': 0.045500461012125, 'jobName': 'Job-2', 
    'artificialEnergy': 56.227954864502, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 666117, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47700595855713, 'kineticEnergy': 0.153095677495003, 
    'wallTime': 25088.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.60000133514404, 
    'stableTimeIncrement': 1.44629821079434e-05, 
    'internalEnergy': 56.7021102905273, 'stepTime': 9.60000133514404, 
    'totalEnergy': 0.0476542599499226, 'jobName': 'Job-2', 
    'artificialEnergy': 56.3107719421387, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 667167, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4794225692749, 'kineticEnergy': 0.161482274532318, 
    'wallTime': 25129.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.64331722259521, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 56.9284973144531, 'stepTime': 9.64331722259521, 
    'totalEnergy': 0.0477442741394043, 'jobName': 'Job-2', 
    'artificialEnergy': 56.5406761169434, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 670195, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50450372695923, 'kineticEnergy': 0.154386177659035, 
    'wallTime': 25250.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.68930816650391, 
    'stableTimeIncrement': 1.44629539136076e-05, 
    'internalEnergy': 57.1745910644531, 'stepTime': 9.68930816650391, 
    'totalEnergy': 0.0484664551913738, 'jobName': 'Job-2', 
    'artificialEnergy': 56.7865524291992, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 673410, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50237846374512, 'kineticEnergy': 0.157235234975815, 
    'wallTime': 25371.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.73278141021729, 
    'stableTimeIncrement': 1.44629366332083e-05, 
    'internalEnergy': 57.4203987121582, 'stepTime': 9.73278141021729, 
    'totalEnergy': 0.0494881495833397, 'jobName': 'Job-2', 
    'artificialEnergy': 57.0295333862305, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 676449, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48224020004272, 'kineticEnergy': 0.15997302532196, 
    'wallTime': 25491.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.7762975692749, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 57.683292388916, 'stepTime': 9.7762975692749, 
    'totalEnergy': 0.0502091087400913, 'jobName': 'Job-2', 
    'artificialEnergy': 57.2882270812988, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 679491, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4902024269104, 'kineticEnergy': 0.169791057705879, 
    'wallTime': 25611.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.81985664367676, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 57.9174957275391, 'stepTime': 9.81985664367676, 
    'totalEnergy': 0.047128040343523, 'jobName': 'Job-2', 
    'artificialEnergy': 57.529411315918, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 682536, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45061159133911, 'kineticEnergy': 0.16150988638401, 
    'wallTime': 25732.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.86332988739014, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 58.1701965332031, 'stepTime': 9.86332988739014, 
    'totalEnergy': 0.0481380298733711, 'jobName': 'Job-2', 
    'artificialEnergy': 57.7779312133789, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 685575, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48244428634644, 'kineticEnergy': 0.164297565817833, 
    'wallTime': 25852.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.90919208526611, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 58.4131774902344, 'stepTime': 9.90919208526611, 
    'totalEnergy': 0.0474384687840939, 'jobName': 'Job-2', 
    'artificialEnergy': 58.0246391296387, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 688781, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49796533584595, 'kineticEnergy': 0.158445224165916, 
    'wallTime': 25973.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.9533519744873, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 58.7004585266113, 'stepTime': 9.9533519744873, 
    'totalEnergy': 0.0509727597236633, 'jobName': 'Job-2', 
    'artificialEnergy': 58.2948722839355, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 691868, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48372268676758, 'kineticEnergy': 0.1816725730896, 
    'wallTime': 26093.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 9.997483253479, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 58.9546241760254, 'stepTime': 9.997483253479, 
    'totalEnergy': 0.0492506176233292, 'jobName': 'Job-2', 
    'artificialEnergy': 58.562744140625, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 694953, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49531030654907, 'kineticEnergy': 0.171568527817726, 
    'wallTime': 26213.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.0411424636841, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 59.2066993713379, 'stepTime': 10.0411424636841, 
    'totalEnergy': 0.0493263266980648, 'jobName': 'Job-2', 
    'artificialEnergy': 58.8191146850586, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 698005, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50173044204712, 'kineticEnergy': 0.157171025872231, 
    'wallTime': 26334.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.0846729278564, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 59.4523963928223, 'stepTime': 10.0846729278564, 
    'totalEnergy': 0.047318659722805, 'jobName': 'Job-2', 
    'artificialEnergy': 59.0558891296387, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 701048, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46836614608765, 'kineticEnergy': 0.163244932889938, 
    'wallTime': 26454.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.1282033920288, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 59.7009429931641, 'stepTime': 10.1282033920288, 
    'totalEnergy': 0.047717060893774, 'jobName': 'Job-2', 
    'artificialEnergy': 59.3084602355957, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 704091, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47665023803711, 'kineticEnergy': 0.155758246779442, 
    'wallTime': 26575.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.1727209091187, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 59.9618186950684, 'stepTime': 10.1727209091187, 
    'totalEnergy': 0.0500740855932236, 'jobName': 'Job-2', 
    'artificialEnergy': 59.5646705627441, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 707203, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49796533584595, 'kineticEnergy': 0.168654069304466, 
    'wallTime': 26696.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.2000007629395, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 60.1115570068359, 'stepTime': 10.2000007629395, 
    'totalEnergy': 0.0489748641848564, 'jobName': 'Job-2', 
    'artificialEnergy': 59.7140083312988, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 709110, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49586868286133, 'kineticEnergy': 0.164102986454964, 
    'wallTime': 26772.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.243803024292, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 60.3425407409668, 'stepTime': 10.243803024292, 
    'totalEnergy': 0.0498003363609314, 'jobName': 'Job-2', 
    'artificialEnergy': 59.9553337097168, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 712172, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50633096694946, 'kineticEnergy': 0.16030564904213, 
    'wallTime': 26893.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.2853736877441, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 60.583553314209, 'stepTime': 10.2853736877441, 
    'totalEnergy': 0.0490623898804188, 'jobName': 'Job-2', 
    'artificialEnergy': 60.1865158081055, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 715078, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48115015029907, 'kineticEnergy': 0.167812332510948, 
    'wallTime': 27014.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.3270015716553, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 60.8040237426758, 'stepTime': 10.3270015716553, 
    'totalEnergy': 0.0492356196045876, 'jobName': 'Job-2', 
    'artificialEnergy': 60.413745880127, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 717988, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49722528457642, 'kineticEnergy': 0.153660073876381, 
    'wallTime': 27134.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.3696165084839, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 61.0399551391602, 'stepTime': 10.3696165084839, 
    'totalEnergy': 0.0492163076996803, 'jobName': 'Job-2', 
    'artificialEnergy': 60.6458549499512, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 720967, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48228931427002, 'kineticEnergy': 0.165871530771255, 
    'wallTime': 27255.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.4125032424927, 
    'stableTimeIncrement': 1.44629429996712e-05, 
    'internalEnergy': 61.2794723510742, 'stepTime': 10.4125032424927, 
    'totalEnergy': 0.0494099706411362, 'jobName': 'Job-2', 
    'artificialEnergy': 60.8845138549805, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 723965, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47898292541504, 'kineticEnergy': 0.165945827960968, 
    'wallTime': 27375.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.4582366943359, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 61.5440330505371, 'stepTime': 10.4582366943359, 
    'totalEnergy': 0.0490123927593231, 'jobName': 'Job-2', 
    'artificialEnergy': 61.1505546569824, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 727162, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49624586105347, 'kineticEnergy': 0.160624578595161, 
    'wallTime': 27496.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.5040988922119, 
    'stableTimeIncrement': 1.44629493661341e-05, 
    'internalEnergy': 61.7993087768555, 'stepTime': 10.5040988922119, 
    'totalEnergy': 0.04887979850173, 'jobName': 'Job-2', 
    'artificialEnergy': 61.4094772338867, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 730368, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48834466934204, 'kineticEnergy': 0.165736719965935, 
    'wallTime': 27616.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.5499897003174, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 62.0827674865723, 'stepTime': 10.5499897003174, 
    'totalEnergy': 0.0510940067470074, 'jobName': 'Job-2', 
    'artificialEnergy': 61.6791305541992, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 733576, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47450113296509, 'kineticEnergy': 0.181156381964684, 
    'wallTime': 27736.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.5928049087524, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 62.3410568237305, 'stepTime': 10.5928049087524, 
    'totalEnergy': 0.0501997694373131, 'jobName': 'Job-2', 
    'artificialEnergy': 61.9460906982422, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 736569, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48132801055908, 'kineticEnergy': 0.173000037670135, 
    'wallTime': 27857.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.6357917785645, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 62.5934143066406, 'stepTime': 10.6357917785645, 
    'totalEnergy': 0.0475448369979858, 'jobName': 'Job-2', 
    'artificialEnergy': 62.200626373291, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 739574, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49827194213867, 'kineticEnergy': 0.156111016869545, 
    'wallTime': 27977.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.6803379058838, 
    'stableTimeIncrement': 1.44629411806818e-05, 
    'internalEnergy': 62.8407783508301, 'stepTime': 10.6803379058838, 
    'totalEnergy': 0.0478981621563435, 'jobName': 'Job-2', 
    'artificialEnergy': 62.4496688842773, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 742688, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48093605041504, 'kineticEnergy': 0.163512572646141, 
    'wallTime': 28098.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.7248411178589, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 63.1236801147461, 'stepTime': 10.7248411178589, 
    'totalEnergy': 0.0501222871243954, 'jobName': 'Job-2', 
    'artificialEnergy': 62.7242050170898, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 745799, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48829174041748, 'kineticEnergy': 0.172235250473022, 
    'wallTime': 28218.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.7692584991455, 
    'stableTimeIncrement': 1.44629348142189e-05, 
    'internalEnergy': 63.3697319030762, 'stepTime': 10.7692584991455, 
    'totalEnergy': 0.0483975522220135, 'jobName': 'Job-2', 
    'artificialEnergy': 62.973217010498, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 748904, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45946598052979, 'kineticEnergy': 0.159950152039528, 
    'wallTime': 28339.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.8000001907349, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 63.5157241821289, 'stepTime': 10.8000001907349, 
    'totalEnergy': 0.046892698854208, 'jobName': 'Job-2', 
    'artificialEnergy': 63.1325950622559, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 751053, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47995042800903, 'kineticEnergy': 0.157926827669144, 
    'wallTime': 28423.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.8426723480225, 
    'stableTimeIncrement': 1.4462955732597e-05, 
    'internalEnergy': 63.753345489502, 'stepTime': 10.8426723480225, 
    'totalEnergy': 0.0483198016881943, 'jobName': 'Job-2', 
    'artificialEnergy': 63.3633422851562, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 754036, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4868278503418, 'kineticEnergy': 0.156267881393433, 
    'wallTime': 28544.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.8870468139648, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 63.9805564880371, 'stepTime': 10.8870468139648, 
    'totalEnergy': 0.0475841164588928, 'jobName': 'Job-2', 
    'artificialEnergy': 63.5911026000977, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 757138, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.50408601760864, 'kineticEnergy': 0.1585433781147, 
    'wallTime': 28665.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.9327516555786, 
    'stableTimeIncrement': 1.4462980288954e-05, 
    'internalEnergy': 64.2250442504883, 'stepTime': 10.9327516555786, 
    'totalEnergy': 0.0474510230123997, 'jobName': 'Job-2', 
    'artificialEnergy': 63.8392448425293, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 760333, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48594570159912, 'kineticEnergy': 0.152911096811295, 
    'wallTime': 28785.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 10.9782562255859, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 64.530632019043, 'stepTime': 10.9782562255859, 
    'totalEnergy': 0.0570057108998299, 'jobName': 'Job-2', 
    'artificialEnergy': 64.1007385253906, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 763514, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45977544784546, 'kineticEnergy': 0.222896859049797, 
    'wallTime': 28905.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.022988319397, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 64.7718200683594, 'stepTime': 11.022988319397, 
    'totalEnergy': 0.0529354587197304, 'jobName': 'Job-2', 
    'artificialEnergy': 64.3612899780273, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 766641, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.41170167922974, 'kineticEnergy': 0.220653548836708, 
    'wallTime': 29026.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.0661325454712, 
    'stableTimeIncrement': 1.44629539136076e-05, 
    'internalEnergy': 64.9608764648438, 'stepTime': 11.0661325454712, 
    'totalEnergy': 0.048819825053215, 'jobName': 'Job-2', 
    'artificialEnergy': 64.5850067138672, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 769657, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45029354095459, 'kineticEnergy': 0.167407244443893, 
    'wallTime': 29147.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.1091480255127, 
    'stableTimeIncrement': 1.44629475471447e-05, 
    'internalEnergy': 65.2558517456055, 'stepTime': 11.1091480255127, 
    'totalEnergy': 0.0514364205300808, 'jobName': 'Job-2', 
    'artificialEnergy': 64.8509750366211, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 772664, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46350908279419, 'kineticEnergy': 0.18539023399353, 
    'wallTime': 29267.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.1498603820801, 
    'stableTimeIncrement': 1.44629584610811e-05, 
    'internalEnergy': 65.4771575927734, 'stepTime': 11.1498603820801, 
    'totalEnergy': 0.0465168133378029, 'jobName': 'Job-2', 
    'artificialEnergy': 65.0854263305664, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 775510, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48005962371826, 'kineticEnergy': 0.15825642645359, 
    'wallTime': 29387.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.1946783065796, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 65.7275695800781, 'stepTime': 11.1946783065796, 
    'totalEnergy': 0.0480816140770912, 'jobName': 'Job-2', 
    'artificialEnergy': 65.3362197875977, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 778643, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.49358081817627, 'kineticEnergy': 0.157910421490669, 
    'wallTime': 29507.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.2392959594727, 
    'stableTimeIncrement': 1.44629821079434e-05, 
    'internalEnergy': 65.9868011474609, 'stepTime': 11.2392959594727, 
    'totalEnergy': 0.048462837934494, 'jobName': 'Job-2', 
    'artificialEnergy': 65.6003875732422, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 781762, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47610235214233, 'kineticEnergy': 0.160213842988014, 
    'wallTime': 29627.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.2854299545288, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 66.3178176879883, 'stepTime': 11.2854299545288, 
    'totalEnergy': 0.0544654987752438, 'jobName': 'Job-2', 
    'artificialEnergy': 65.8989639282227, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 784987, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.41636371612549, 'kineticEnergy': 0.235864251852036, 
    'wallTime': 29748.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.3315353393555, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 66.5522308349609, 'stepTime': 11.3315353393555, 
    'totalEnergy': 0.0475810095667839, 'jobName': 'Job-2', 
    'artificialEnergy': 66.1572418212891, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 788210, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4772572517395, 'kineticEnergy': 0.16280609369278, 
    'wallTime': 29868.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.3779411315918, 
    'stableTimeIncrement': 1.44629630085547e-05, 
    'internalEnergy': 66.791259765625, 'stepTime': 11.3779411315918, 
    'totalEnergy': 0.0479368679225445, 'jobName': 'Job-2', 
    'artificialEnergy': 66.4000396728516, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 791454, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.491858959198, 'kineticEnergy': 0.159714549779892, 
    'wallTime': 29989.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.3999996185303, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 66.9305267333984, 'stepTime': 11.3999996185303, 
    'totalEnergy': 0.0475148558616638, 'jobName': 'Job-2', 
    'artificialEnergy': 66.5411529541016, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 792996, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45786333084106, 'kineticEnergy': 0.159689202904701, 
    'wallTime': 30050.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.4426574707031, 
    'stableTimeIncrement': 1.44629411806818e-05, 
    'internalEnergy': 67.1369094848633, 'stepTime': 11.4426574707031, 
    'totalEnergy': 0.0462837442755699, 'jobName': 'Job-2', 
    'artificialEnergy': 66.7523880004883, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 795978, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47459697723389, 'kineticEnergy': 0.156711176037788, 
    'wallTime': 30171.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.4886484146118, 
    'stableTimeIncrement': 1.44629429996712e-05, 
    'internalEnergy': 67.4063491821289, 'stepTime': 11.4886484146118, 
    'totalEnergy': 0.0481004230678082, 'jobName': 'Job-2', 
    'artificialEnergy': 67.0125427246094, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 799193, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46692371368408, 'kineticEnergy': 0.164542093873024, 
    'wallTime': 30292.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.5345106124878, 
    'stableTimeIncrement': 1.44629648275441e-05, 
    'internalEnergy': 67.6547088623047, 'stepTime': 11.5345106124878, 
    'totalEnergy': 0.0493098199367523, 'jobName': 'Job-2', 
    'artificialEnergy': 67.2686157226562, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 802399, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4850869178772, 'kineticEnergy': 0.164586395025253, 
    'wallTime': 30413.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.5807590484619, 
    'stableTimeIncrement': 1.44629675560282e-05, 
    'internalEnergy': 67.9114456176758, 'stepTime': 11.5807590484619, 
    'totalEnergy': 0.0491962246596813, 'jobName': 'Job-2', 
    'artificialEnergy': 67.539665222168, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 805632, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45600891113281, 'kineticEnergy': 0.176309257745743, 
    'wallTime': 30533.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.626335144043, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 68.1816253662109, 'stepTime': 11.626335144043, 
    'totalEnergy': 0.0479976907372475, 'jobName': 'Job-2', 
    'artificialEnergy': 67.792106628418, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 808818, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.47303676605225, 'kineticEnergy': 0.157246187329292, 
    'wallTime': 30653.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.6718254089355, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 68.4392929077148, 'stepTime': 11.6718254089355, 
    'totalEnergy': 0.0506967604160309, 'jobName': 'Job-2', 
    'artificialEnergy': 68.0539855957031, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 811998, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45306444168091, 'kineticEnergy': 0.185747414827347, 
    'wallTime': 30773.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.7181310653687, 
    'stableTimeIncrement': 1.44629502756288e-05, 
    'internalEnergy': 68.7223663330078, 'stepTime': 11.7181310653687, 
    'totalEnergy': 0.049242340028286, 'jobName': 'Job-2', 
    'artificialEnergy': 68.3339920043945, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 815235, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.4585599899292, 'kineticEnergy': 0.189598768949509, 
    'wallTime': 30894.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.7647085189819, 
    'stableTimeIncrement': 1.44629602800705e-05, 
    'internalEnergy': 69.0555572509766, 'stepTime': 11.7647085189819, 
    'totalEnergy': 0.0574551485478878, 'jobName': 'Job-2', 
    'artificialEnergy': 68.6223907470703, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 818491, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.41615867614746, 'kineticEnergy': 0.272612005472183, 
    'wallTime': 31015.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.8108568191528, 
    'stableTimeIncrement': 1.44629457281553e-05, 
    'internalEnergy': 69.2691268920898, 'stepTime': 11.8108568191528, 
    'totalEnergy': 0.047201044857502, 'jobName': 'Job-2', 
    'artificialEnergy': 68.8800964355469, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 821717, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48334646224976, 'kineticEnergy': 0.15377551317215, 
    'wallTime': 31136.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.8573198318481, 
    'stableTimeIncrement': 1.44629502756288e-05, 
    'internalEnergy': 69.5321731567383, 'stepTime': 11.8573198318481, 
    'totalEnergy': 0.0475408844649792, 'jobName': 'Job-2', 
    'artificialEnergy': 69.143684387207, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 824965, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.46456050872803, 'kineticEnergy': 0.155211895704269, 
    'wallTime': 31256.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.9037399291992, 
    'stableTimeIncrement': 1.44629693750176e-05, 
    'internalEnergy': 69.7896499633789, 'stepTime': 11.9037399291992, 
    'totalEnergy': 0.0504436790943146, 'jobName': 'Job-2', 
    'artificialEnergy': 69.3967437744141, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 828210, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.44830703735352, 'kineticEnergy': 0.170843288302422, 
    'wallTime': 31377.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.950174331665, 
    'stableTimeIncrement': 1.44629730129964e-05, 
    'internalEnergy': 70.0192413330078, 'stepTime': 11.950174331665, 
    'totalEnergy': 0.049307357519865, 'jobName': 'Job-2', 
    'artificialEnergy': 69.6325225830078, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 831456, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.48725032806396, 'kineticEnergy': 0.151843622326851, 
    'wallTime': 31497.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 11.9965658187866, 
    'stableTimeIncrement': 1.44629566420917e-05, 
    'internalEnergy': 70.2626647949219, 'stepTime': 11.9965658187866, 
    'totalEnergy': 0.047540221363306, 'jobName': 'Job-2', 
    'artificialEnergy': 69.8793487548828, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 834699, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45163011550903, 'kineticEnergy': 0.153062015771866, 
    'wallTime': 31618.0})
mdb.jobs['Job-2']._Message(STATUS, {'totalTime': 12.0, 
    'stableTimeIncrement': 1.44629757414805e-05, 
    'internalEnergy': 70.2882995605469, 'stepTime': 12.0, 
    'totalEnergy': 0.0476716011762619, 'jobName': 'Job-2', 
    'artificialEnergy': 69.8989334106445, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 834940, 'distortionContrEnergy': 0.0, 
    'externalWork': 4.45378065109253, 'kineticEnergy': 0.160599410533905, 
    'wallTime': 31628.0})
mdb.jobs['Job-2']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-2'})
mdb.jobs['Job-2']._Message(JOB_COMPLETED, {'time': 'Tue May 27 00:40:06 2025', 
    'jobName': 'Job-2'})
# Save by tpennock on 2025_05_27-09.07.09; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'SVAVG', 'PE', 'PEVAVG', 'PEEQ', 'PEEQVAVG', 'LE', 'U', 'V', 'A', 
    'RF', 'RT', 'CF', 'SF', 'BF', 'P', 'CSTRESS', 'EVF'))
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST EVF IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEEQVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST PEVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST SVAVG IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'MAXIMUM NUMBER OF OUTPUT RELATED WARNINGS HAS BEEN ISSUED. SUBSEQUENT WARNINGS WILL BE SUPPRESSED. SET ABA_OUTPUT_DIAGNOSTICS TO unlimited TO OVERRIDE.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 26336, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 103 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 8928, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.19284413813148e-05, 'internalEnergy': 0.0, 
    'artificialEnergy': 0.0, 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'externalWork': 0.0, 'kineticEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 3.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0702343210577965, 
    'stableTimeIncrement': 1.48145436469349e-05, 
    'internalEnergy': 0.0779425948858261, 
    'artificialEnergy': 0.0760864764451981, 'step': 1, 'increment': 4707, 
    'phase': EXPLICIT_PHASE, 'externalWork': -0.0442758239805698, 
    'kineticEnergy': 0.218292191624641, 'stepTime': 0.0702343210577965, 
    'totalEnergy': 0.000373417715309188, 'jobName': 'Job-1', 
    'distortionContrEnergy': 0.0, 'wallTime': 122.0})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['DikeRigid'].features['3D Analytic rigid shell-1'].sketch)
mdb.models['Model-1'].parts['DikeRigid'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['DikeRigid'].features['3D Analytic rigid shell-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[8].setValues(textPoint=(
    51.3444671630859, 21.9533843994141))
mdb.models['Model-1'].sketches['__edit__'].dimensions[8].setValues(value=12.1)
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    50.4285430908203, 21.2977619171143), value=12.1, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[6], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[4], ))
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    48.6881446838379, 11.7003841400146), value=17.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    84.8910522460938, 19.2189617156982), value=5.8, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[9], ))
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[9])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[9])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[9], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[7])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].TangentConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[8], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    51.5877532958984, 21.7560272216797), value=12.1, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[11], ))
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[3], ))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[32], ))
mdb.models['Model-1'].sketches['__edit__'].EqualLengthConstraint(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    85.3356475830078, 20.3976745605469), value=5.8, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].constraints[27], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[12], ))
mdb.models['Model-1'].sketches['__edit__'].dimensions[13].setValues(value=53.8)
mdb.models['Model-1'].sketches['__edit__'].dimensions[13].setValues(value=5.83)
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].dimensions[13].setValues(value=5.83)
mdb.models['Model-1'].sketches['__edit__'].dimensions[10].setValues(value=
    17.48)
mdb.models['Model-1'].sketches['__edit__'].dimensions[13].setValues(value=
    5.82636)
mdb.models['Model-1'].sketches['__edit__'].dimensions[10].setValues(value=
    17.47907)
mdb.models['Model-1'].parts['DikeRigid'].features['3D Analytic rigid shell-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['DikeRigid'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2', 'Block-2-lin-1-8', 'Block-2-lin-1-7', 
    'Block-2-lin-1-6', 'Block-2-lin-1-5', 'Block-2-lin-1-4', 'Block-2-lin-1-3', 
    'Block-2-lin-1-2', 'Block-2', 'HalfBlock-1'), vector=(-0.996117, 0.332039, 
    0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1', 'Block-2-lin-1-8-lin-2-1-lin-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-1-3', 'Block-2-lin-1-8-lin-2-1-lin-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-1-5', 'Block-2-lin-1-8-lin-2-1-lin-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-1-7', 'Block-2-lin-1-8-lin-2-1-lin-1-8', 
    'Block-2-lin-1-8-lin-2-1-lin-1-9'), vector=(-0.948683, 0.316228, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-2-1', 'Block-2-lin-1-8-lin-2-1-1', 
    'Block-2-lin-1-7-lin-2-1', 'Block-2-lin-1-6-lin-2-1', 
    'Block-2-lin-1-5-lin-2-1', 'Block-2-lin-1-4-lin-2-1', 
    'Block-2-lin-1-3-lin-2-1', 'Block-2-lin-1-2-lin-2-1', 'Block-2-lin-2-1', 
    'HalfBlock-1-lin-2-1'), vector=(-0.901249, 0.300417, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-2-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-2-1'), vector=(-0.853815, 0.284605, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-3-1', 'Block-2-lin-3-1', 'Block-2-lin-1-2-lin-3-1', 
    'Block-2-lin-1-3-lin-3-1', 'Block-2-lin-1-5-lin-3-1', 
    'Block-2-lin-1-4-lin-3-1', 'Block-2-lin-1-6-lin-3-1', 
    'Block-2-lin-1-7-lin-3-1', 'Block-2-lin-1-8-lin-3-1', 
    'HalfBlock-1-lin-1-2-lin-3-1'), vector=(-0.806381, 0.268794, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-3-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-3-1'), vector=(-0.758947, 0.252982, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-4-1', 'Block-2-lin-1-8-lin-4-1', 
    'Block-2-lin-1-7-lin-4-1', 'Block-2-lin-1-6-lin-4-1', 
    'Block-2-lin-1-5-lin-4-1', 'Block-2-lin-1-4-lin-4-1', 
    'Block-2-lin-1-3-lin-4-1', 'Block-2-lin-1-2-lin-4-1', 'Block-2-lin-4-1', 
    'HalfBlock-1-lin-4-1'), vector=(-0.711512, 0.237171, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-4-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-4-1'), vector=(-0.664078, 0.22136, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-5-1', 'Block-2-lin-1-8-lin-5-1', 
    'Block-2-lin-1-7-lin-5-1', 'Block-2-lin-1-6-lin-5-1', 
    'Block-2-lin-1-5-lin-5-1', 'Block-2-lin-1-4-lin-5-1', 
    'Block-2-lin-1-3-lin-5-1', 'Block-2-lin-1-2-lin-5-1', 'Block-2-lin-5-1', 
    'HalfBlock-1-lin-5-1'), vector=(-0.616644, 0.205548, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-5-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-5-1'), vector=(-0.56921, 0.189737, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-6-1', 'Block-2-lin-1-8-lin-6-1', 
    'Block-2-lin-1-7-lin-6-1', 'Block-2-lin-1-6-lin-6-1', 
    'Block-2-lin-1-5-lin-6-1', 'Block-2-lin-1-4-lin-6-1', 
    'Block-2-lin-1-3-lin-6-1', 'Block-2-lin-1-2-lin-6-1', 'Block-2-lin-6-1', 
    'HalfBlock-1-lin-6-1'), vector=(-0.521776, 0.173925, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-6-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-6-1'), vector=(-0.474342, 0.158114, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-7-1', 'Block-2-lin-1-8-lin-7-1', 
    'Block-2-lin-1-7-lin-7-1', 'Block-2-lin-1-6-lin-7-1', 
    'Block-2-lin-1-5-lin-7-1', 'Block-2-lin-1-4-lin-7-1', 
    'Block-2-lin-1-3-lin-7-1', 'Block-2-lin-1-2-lin-7-1', 'Block-2-lin-7-1', 
    'HalfBlock-1-lin-7-1'), vector=(-0.426907, 0.142303, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-7-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-7-1'), vector=(-0.379473, 0.126491, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-8-1', 'Block-2-lin-1-8-lin-8-1', 
    'Block-2-lin-1-7-lin-8-1', 'Block-2-lin-1-6-lin-8-1', 
    'Block-2-lin-1-5-lin-8-1', 'Block-2-lin-1-4-lin-8-1', 
    'Block-2-lin-1-3-lin-8-1', 'Block-2-lin-1-2-lin-8-1', 'Block-2-lin-8-1', 
    'HalfBlock-1-lin-8-1'), vector=(-0.332039, 0.11068, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-8-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-8-1'), vector=(-0.284605, 0.094868, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-9-1', 'Block-2-lin-1-8-lin-9-1', 
    'Block-2-lin-1-7-lin-9-1', 'Block-2-lin-1-6-lin-9-1', 
    'Block-2-lin-1-5-lin-9-1', 'Block-2-lin-1-4-lin-9-1', 
    'Block-2-lin-1-3-lin-9-1', 'Block-2-lin-1-2-lin-9-1', 'Block-2-lin-9-1', 
    'HalfBlock-1-lin-9-1'), vector=(-0.237171, 0.079057, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-9-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin--lin-9-1'), vector=(-0.189737, 0.063246, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-10-1', 'Block-2-lin-1-8-lin-10-1', 
    'Block-2-lin-1-7-lin-10-1', 'Block-2-lin-1-6-lin-10-1', 
    'Block-2-lin-1-5-lin-10-1', 'Block-2-lin-1-4-lin-10-1', 
    'Block-2-lin-1-3-lin-10-1', 'Block-2-lin-1-2-lin-10-1', 'Block-2-lin-10-1', 
    'HalfBlock-1-lin-10-1'), vector=(-0.189737, 0.063246, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-10-1', 'Block-2-lin-1-8-lin-10-1', 
    'Block-2-lin-1-7-lin-10-1', 'Block-2-lin-1-6-lin-10-1', 
    'Block-2-lin-1-5-lin-10-1', 'Block-2-lin-1-4-lin-10-1', 
    'Block-2-lin-1-3-lin-10-1', 'Block-2-lin-1-2-lin-10-1', 'Block-2-lin-10-1', 
    'HalfBlock-1-lin-10-1'), vector=(0.047434, -0.015811, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'Block-2-lin-1-8-lin-2-1-lin-10-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1', 
    'Block-2-lin-1-8-lin-2-1-lin-lin-10-1'), vector=(-0.094868, 0.031623, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=(
    'HalfBlock-1-lin-1-2-lin-11-1', 'Block-2-lin-1-8-lin-11-1', 
    'Block-2-lin-1-7-lin-11-1', 'Block-2-lin-1-6-lin-11-1', 
    'Block-2-lin-1-5-lin-11-1', 'Block-2-lin-1-4-lin-11-1', 
    'Block-2-lin-1-3-lin-11-1', 'Block-2-lin-1-2-lin-11-1', 'Block-2-lin-11-1', 
    'HalfBlock-1-lin-11-1'), vector=(-0.047434, 0.015811, 0.0))
# Save by tpennock on 2025_05_27-10.20.04; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].interactions['Int-2'].contactPropertyAssignments.appendInStep(
    assignments=((mdb.models['Model-1'].rootAssembly.surfaces['Bottoms'], 
    mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].surfaces['Surf-2'], 
    'BLOCK-FILTER'), ), stepName='Initial')
# Save by tpennock on 2025_05_27-10.28.50; build 2023 2023_03_20-20.15.03 RELr425 183417
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
# Save by tpennock on 2025_05_27-10.30.03; build 2023 2023_03_20-20.15.03 RELr425 183417
