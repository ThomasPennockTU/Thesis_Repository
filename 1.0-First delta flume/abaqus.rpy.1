# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2023 replay file
# Internal Version: 2023_03_20-20.15.03 RELr425 183417
# Run by tpennock on Wed Apr 23 14:01:45 2025
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=503.0, 
    height=256.0)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('First delta flume.cae')
#: The model database "D:\tpennock\First delta flume\First delta flume.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
#--- Recover file: 'First delta flume.rec' ---
# -*- coding: mbcs -*- 
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 1095: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *DLOAD, file "Job-1.inp", line 1106: Unknown assembly element set _PICKEDSET426', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THIS MODEL HAS EITHER INCORRECT OR NO ELEMENT DEFINITIONS.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.1)
mdb.models['Model-1'].parts['Block'].generateMesh()
mdb.models['Model-1'].parts['Block'].deleteMesh()
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['Block'].generateMesh()
mdb.models['Model-1'].parts['HalfBlock'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.05)
mdb.models['Model-1'].parts['HalfBlock'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "Job-1.inp", line 3147: Unknown assembly node set _PICKEDSET427', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY__PICKEDSET427 BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET427 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET427 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY__PICKEDSET427 HAS NOT BEEN DEFINED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['dike'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=Region(
    cells=mdb.models['Model-1'].parts['dike'].cells.getSequenceFromMask(mask=(
    '[#1 ]', ), )), sectionName='BrickSection', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['dike'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.3)
mdb.models['Model-1'].parts['dike'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '4 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 4 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 5 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof5.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 6 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof6.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 14568, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 5 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 27776, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.88312479219167e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 0.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0735781043767929, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 8.21093453851063e-06, 'stepTime': 0.0735781043767929, 
    'totalEnergy': -3.60443373210728e-05, 'jobName': 'Job-1', 
    'artificialEnergy': 1.86182728612039e-06, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 6448, 'distortionContrEnergy': 0.0, 
    'externalWork': 4473.3232421875, 'kineticEnergy': 4473.3232421875, 
    'wallTime': 120.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.147097542881966, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.000117320880235638, 'stepTime': 0.147097542881966, 
    'totalEnergy': -0.000281234679277986, 'jobName': 'Job-1', 
    'artificialEnergy': 2.21762638830114e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 12889, 'distortionContrEnergy': 0.0, 
    'externalWork': 17879.00390625, 'kineticEnergy': 17879.00390625, 
    'wallTime': 241.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.221381738781929, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.000561256485525519, 'stepTime': 0.221381738781929, 
    'totalEnergy': 0.000243309186771512, 'jobName': 'Job-1', 
    'artificialEnergy': 9.57462398218922e-05, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 19397, 'distortionContrEnergy': 0.0, 
    'externalWork': 40496.34765625, 'kineticEnergy': 40496.34765625, 
    'wallTime': 361.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.296738862991333, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.00169626623392105, 'stepTime': 0.296738862991333, 
    'totalEnergy': 3.72861832147464e-05, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000268706644419581, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 25999, 'distortionContrEnergy': 0.0, 
    'externalWork': 72758.0546875, 'kineticEnergy': 72758.046875, 
    'wallTime': 481.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.371924787759781, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.00391980819404125, 'stepTime': 0.371924787759781, 
    'totalEnergy': -0.00149975332897156, 'jobName': 'Job-1', 
    'artificialEnergy': 0.000593308883253485, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 32586, 'distortionContrEnergy': 0.0, 
    'externalWork': 114298.984375, 'kineticEnergy': 114298.984375, 
    'wallTime': 601.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.447293341159821, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.00762084731832147, 'stepTime': 0.447293341159821, 
    'totalEnergy': -0.000429257983341813, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0011343116639182, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39189, 'distortionContrEnergy': 0.0, 
    'externalWork': 165316.78125, 'kineticEnergy': 165316.78125, 
    'wallTime': 721.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.522454738616943, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0129511272534728, 'stepTime': 0.522454738616943, 
    'totalEnergy': 0.000502681010402739, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00194184388965368, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 45779, 'distortionContrEnergy': 0.0, 
    'externalWork': 225593.765625, 'kineticEnergy': 225593.75, 
    'wallTime': 841.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.597569584846497, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0200064051896334, 'stepTime': 0.597569584846497, 
    'totalEnergy': -0.00807997770607471, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00307887676171958, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 52377, 'distortionContrEnergy': 0.0, 
    'externalWork': 295311.34375, 'kineticEnergy': 295311.34375, 
    'wallTime': 961.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600005865097046, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0202636830508709, 'stepTime': 0.600005865097046, 
    'totalEnergy': -0.00819888431578875, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00312295858748257, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 52591, 'distortionContrEnergy': 0.0, 
    'externalWork': 297729.53125, 'kineticEnergy': 297729.5, 
    'wallTime': 965.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.675268709659576, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0288727357983589, 'stepTime': 0.675268709659576, 
    'totalEnergy': -0.0090929139405489, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00460206856951118, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 59202, 'distortionContrEnergy': 0.0, 
    'externalWork': 377289.90625, 'kineticEnergy': 377289.875, 
    'wallTime': 1085.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750713706016541, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.038904033601284, 'stepTime': 0.750713706016541, 
    'totalEnergy': -0.0103501016274095, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00642337836325169, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 65829, 'distortionContrEnergy': 0.0, 
    'externalWork': 466487.15625, 'kineticEnergy': 466487.09375, 
    'wallTime': 1205.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.824769794940948, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0500989630818367, 'stepTime': 0.824769794940948, 
    'totalEnergy': 0.0086530577391386, 'jobName': 'Job-1', 
    'artificialEnergy': 0.00865802075713873, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 72334, 'distortionContrEnergy': 0.0, 
    'externalWork': 563238.5, 'kineticEnergy': 563238.4375, 
    'wallTime': 1325.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.898894190788269, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0627554655075073, 'stepTime': 0.898894190788269, 
    'totalEnergy': -0.00963074993342161, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0112427361309528, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 78845, 'distortionContrEnergy': 0.0, 
    'externalWork': 669202.4375, 'kineticEnergy': 669202.375, 
    'wallTime': 1445.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.973963499069214, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0765539258718491, 'stepTime': 0.973963499069214, 
    'totalEnergy': -0.00609124591574073, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0142734125256538, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 85439, 'distortionContrEnergy': 0.0, 'externalWork': 785820.0, 
    'kineticEnergy': 785819.9375, 'wallTime': 1565.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0495297908783, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.0917170643806458, 'stepTime': 1.0495297908783, 
    'totalEnergy': -0.00821953825652599, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0177654642611742, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 92054, 'distortionContrEnergy': 0.0, 'externalWork': 912215.5, 
    'kineticEnergy': 912215.4375, 'wallTime': 1685.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.12514090538025, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.108067624270916, 'stepTime': 1.12514090538025, 
    'totalEnergy': -0.0179313700646162, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0217471197247505, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 98661, 'distortionContrEnergy': 0.0, 
    'externalWork': 1047862.5625, 'kineticEnergy': 1047862.4375, 
    'wallTime': 1805.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.20000815391541, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.125619426369667, 'stepTime': 1.20000815391541, 
    'totalEnergy': -0.0518763549625874, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0261972192674875, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 105203, 'distortionContrEnergy': 0.0, 
    'externalWork': 1191435.5, 'kineticEnergy': 1191435.375, 
    'wallTime': 1924.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.27580237388611, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.144528120756149, 'stepTime': 1.27580237388611, 
    'totalEnergy': -0.0427723303437233, 'jobName': 'Job-1', 
    'artificialEnergy': 0.031136417761445, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 111826, 'distortionContrEnergy': 0.0, 
    'externalWork': 1346172.75, 'kineticEnergy': 1346172.5, 
    'wallTime': 2045.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.35116171836853, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.165050506591797, 'stepTime': 1.35116171836853, 
    'totalEnergy': -0.0327752307057381, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0365185439586639, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 118411, 'distortionContrEnergy': 0.0, 
    'externalWork': 1509385.25, 'kineticEnergy': 1509385.125, 
    'wallTime': 2165.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.42699027061462, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.187272861599922, 'stepTime': 1.42699027061462, 
    'totalEnergy': -0.0125858206301928, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0425647720694542, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 125037, 'distortionContrEnergy': 0.0, 
    'externalWork': 1683037.625, 'kineticEnergy': 1683037.375, 
    'wallTime': 2285.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.50221228599548, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.211070969700813, 'stepTime': 1.50221228599548, 
    'totalEnergy': -0.0363047234714031, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0490855276584625, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 131610, 'distortionContrEnergy': 0.0, 
    'externalWork': 1864640.625, 'kineticEnergy': 1864640.375, 
    'wallTime': 2405.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.57766318321228, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.237343579530716, 'stepTime': 1.57766318321228, 
    'totalEnergy': -0.0545186251401901, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0563093423843384, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 138203, 'distortionContrEnergy': 0.0, 
    'externalWork': 2056141.0, 'kineticEnergy': 2056140.75, 
    'wallTime': 2525.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.65239310264587, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.264427810907364, 'stepTime': 1.65239310264587, 
    'totalEnergy': -0.052994754165411, 'jobName': 'Job-1', 
    'artificialEnergy': 0.063873715698719, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 144733, 'distortionContrEnergy': 0.0, 
    'externalWork': 2255036.75, 'kineticEnergy': 2255036.25, 
    'wallTime': 2645.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.72688269615173, 
    'stableTimeIncrement': 1.14142030724906e-05, 
    'internalEnergy': 0.292407870292664, 'stepTime': 1.72688269615173, 
    'totalEnergy': -0.0989630594849586, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0718101486563683, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 151242, 'distortionContrEnergy': 0.0, 
    'externalWork': 2462429.25, 'kineticEnergy': 2462429.0, 
    'wallTime': 2765.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ContactExp(createStepName='Loading', name='Int-1')
#: The interaction "Int-1" has been created.
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Loading', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, ''), ), stepName='Loading')
mdb.models['Model-1'].steps['Loading'].setValues(improvedDtMethod=ON, 
    timePeriod=1.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '4 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 4 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof4.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 5 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof5.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'Boundary conditions are specified on inactive dof 6 at 4 nodes. The nodes have been identified in node set WarnNodeBCInactiveDof6.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 40260, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 5 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 30592, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.46834791445872e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 3.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0119732255116105, 
    'stableTimeIncrement': 1.08998347059241e-05, 
    'internalEnergy': 1.96028232574463, 'stepTime': 0.0119732255116105, 
    'totalEnergy': 0.0970240086317062, 'jobName': 'Job-1', 
    'artificialEnergy': 0.42267894744873, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1099, 'distortionContrEnergy': 0.0, 
    'externalWork': 6.88861131668091, 'kineticEnergy': 5.17680597305298, 
    'wallTime': 122.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.025016400963068, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 4.47246646881104, 'stepTime': 0.025016400963068, 
    'totalEnergy': 0.0849440172314644, 'jobName': 'Job-1', 
    'artificialEnergy': 1.2921040058136, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2296, 'distortionContrEnergy': 0.0, 
    'externalWork': 17.1987934112549, 'kineticEnergy': 12.0848064422607, 
    'wallTime': 242.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0376236215233803, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 9.90079307556152, 'stepTime': 0.0376236215233803, 
    'totalEnergy': 0.0836424678564072, 'jobName': 'Job-1', 
    'artificialEnergy': 3.14058494567871, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3453, 'distortionContrEnergy': 0.0, 
    'externalWork': 30.9097290039062, 'kineticEnergy': 19.9957084655762, 
    'wallTime': 362.0})
mdb.models['Model-1'].ContactProperty('IntProp-1')
#: The interaction property "IntProp-1" has been created.
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.changeValuesInStep(
    index=0, stepName='Loading', value='IntProp-1')
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0498821549117565, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 20.1097221374512, 'stepTime': 0.0498821549117565, 
    'totalEnergy': 0.077869676053524, 'jobName': 'Job-1', 
    'artificialEnergy': 6.30255746841431, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4578, 'distortionContrEnergy': 0.0, 
    'externalWork': 46.7029685974121, 'kineticEnergy': 25.339973449707, 
    'wallTime': 482.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500020161271095, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 20.2410221099854, 'stepTime': 0.0500020161271095, 
    'totalEnergy': 0.0789560452103615, 'jobName': 'Job-1', 
    'artificialEnergy': 6.34301233291626, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4589, 'distortionContrEnergy': 0.0, 
    'externalWork': 46.8700256347656, 'kineticEnergy': 25.3742256164551, 
    'wallTime': 483.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.models['Model-1'].parts['dike'].deleteMesh()
mdb.models['Model-1'].parts['dike'].seedPart(minSizeFactor=0.1, size=1.3)
mdb.models['Model-1'].parts['dike'].seedPart(minSizeFactor=0.1, size=1000.0)
mdb.models['Model-1'].parts['dike'].generateMesh()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0621188953518867, 
    'stableTimeIncrement': 1.08963849925203e-05, 
    'internalEnergy': 36.2237434387207, 'stepTime': 0.0621188953518867, 
    'totalEnergy': 0.0782573148608208, 'jobName': 'Job-1', 
    'artificialEnergy': 10.6515331268311, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5701, 'distortionContrEnergy': 0.0, 
    'externalWork': 63.8788452148438, 'kineticEnergy': 26.3052921295166, 
    'wallTime': 603.0})
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0740247964859009, 
    'stableTimeIncrement': 1.08958993223496e-05, 
    'internalEnergy': 56.3328285217285, 'stepTime': 0.0740247964859009, 
    'totalEnergy': 0.0849767178297043, 'jobName': 'Job-1', 
    'artificialEnergy': 16.4194793701172, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 6794, 'distortionContrEnergy': 0.0, 
    'externalWork': 80.5413665771484, 'kineticEnergy': 22.8060455322266, 
    'wallTime': 723.0})
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', 
    objectToCopy=mdb.models['Model-1'].parts['dike'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['dike'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['dike'].features['Solid extrude-1'])
mdb.models['Model-1'].ConstrainedSketch(name='Dike', 
    objectToCopy=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    gridOrigin=(64.322844578453, 15.2066985723559))
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(
    sketch=mdb.models['Model-1'].sketches['Dike'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='DikeRigid', 
    type=ANALYTIC_RIGID_SURFACE)
mdb.models['Model-1'].parts['DikeRigid'].AnalyticRigidSurfExtrude(depth=5.0, 
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(
    entity=mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(
    sketch=mdb.models['Model-1'].sketches['Dike'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-6', 
    type=ANALYTIC_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-6'].AnalyticRigidSurfRevolve(
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.08607217669487, 
    'stableTimeIncrement': 1.0892223144765e-05, 
    'internalEnergy': 77.7279586791992, 'stepTime': 0.08607217669487, 
    'totalEnergy': 0.0775435343384743, 'jobName': 'Job-1', 
    'artificialEnergy': 22.8444633483887, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 7900, 'distortionContrEnergy': 0.0, 
    'externalWork': 95.233283996582, 'kineticEnergy': 16.0884895324707, 
    'wallTime': 843.0})
del mdb.models['Model-1'].parts['Part-6']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0980690643191338, 
    'stableTimeIncrement': 1.08648837340297e-05, 
    'internalEnergy': 96.4346923828125, 'stepTime': 0.0980690643191338, 
    'totalEnergy': 0.0695326030254364, 'jobName': 'Job-1', 
    'artificialEnergy': 28.9764957427979, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9002, 'distortionContrEnergy': 0.0, 
    'externalWork': 106.682197570801, 'kineticEnergy': 8.92737483978271, 
    'wallTime': 963.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100002661347389, 
    'stableTimeIncrement': 1.08597805592581e-05, 
    'internalEnergy': 99.0877685546875, 'stepTime': 0.100002661347389, 
    'totalEnergy': 0.0694875121116638, 'jobName': 'Job-1', 
    'artificialEnergy': 29.9273719787598, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9180, 'distortionContrEnergy': 0.0, 
    'externalWork': 108.230964660645, 'kineticEnergy': 7.81865167617798, 
    'wallTime': 983.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.111984483897686, 
    'stableTimeIncrement': 1.08597805592581e-05, 
    'internalEnergy': 111.450454711914, 'stepTime': 0.111984483897686, 
    'totalEnergy': 0.0719592198729515, 'jobName': 'Job-1', 
    'artificialEnergy': 35.1416358947754, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 10283, 'distortionContrEnergy': 0.0, 
    'externalWork': 115.329360961914, 'kineticEnergy': 2.64275288581848, 
    'wallTime': 1103.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.123983532190323, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 116.27507019043, 'stepTime': 0.123983532190323, 
    'totalEnergy': 0.0746699497103691, 'jobName': 'Job-1', 
    'artificialEnergy': 38.8907012939453, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11388, 'distortionContrEnergy': 0.0, 
    'externalWork': 117.956428527832, 'kineticEnergy': 0.577144980430603, 
    'wallTime': 1223.0})
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.135895386338234, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 113.74422454834, 'stepTime': 0.135895386338234, 
    'totalEnergy': 0.0730893611907959, 'jobName': 'Job-1', 
    'artificialEnergy': 41.0174865722656, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 12486, 'distortionContrEnergy': 0.0, 
    'externalWork': 116.373985290527, 'kineticEnergy': 1.65213119983673, 
    'wallTime': 1343.0})
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='DikeRigid-1', 
    part=mdb.models['Model-1'].parts['DikeRigid'])
mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].translate(vector=(
    0.0, 0.0, 0.0))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.147719755768776, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 105.644241333008, 'stepTime': 0.147719755768776, 
    'totalEnergy': 0.0721212550997734, 'jobName': 'Job-1', 
    'artificialEnergy': 41.8470993041992, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13576, 'distortionContrEnergy': 0.0, 
    'externalWork': 111.168319702148, 'kineticEnergy': 4.70043802261353, 
    'wallTime': 1463.0})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', 
    objectToCopy=mdb.models['Model-1'].parts['DikeRigid'].features['3D Analytic rigid shell-1'].sketch)
mdb.models['Model-1'].parts['DikeRigid'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=mdb.models['Model-1'].parts['DikeRigid'].features['3D Analytic rigid shell-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['DikeRigid'].regenerate()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.15000869333744, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 103.583602905273, 'stepTime': 0.15000869333744, 
    'totalEnergy': 0.0709227472543716, 'jobName': 'Job-1', 
    'artificialEnergy': 41.8682479858398, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13787, 'distortionContrEnergy': 0.0, 
    'externalWork': 109.749870300293, 'kineticEnergy': 5.35977220535278, 
    'wallTime': 1486.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.models['Model-1'].parts['DikeRigid'].ConvertToAnalytical()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.161843910813332, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 91.9270629882812, 'stepTime': 0.161843910813332, 
    'totalEnergy': 0.0732203647494316, 'jobName': 'Job-1', 
    'artificialEnergy': 41.7279281616211, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 14878, 'distortionContrEnergy': 0.0, 
    'externalWork': 101.320541381836, 'kineticEnergy': 8.75410270690918, 
    'wallTime': 1606.0})
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].sketchOptions.setValues(
    gridOrigin=(64.322844578453, 15.2066985723559))
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(
    sketch=mdb.models['Model-1'].sketches['Dike'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-6', 
    type=DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-6'].BaseSolidExtrude(depth=5.0, 
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.173809304833412, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 79.6493530273438, 'stepTime': 0.173809304833412, 
    'totalEnergy': 0.0715563744306564, 'jobName': 'Job-1', 
    'artificialEnergy': 41.1370468139648, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 15981, 'distortionContrEnergy': 0.0, 
    'externalWork': 91.0027084350586, 'kineticEnergy': 10.8638200759888, 
    'wallTime': 1726.0})
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.1856879144907, 
    'stableTimeIncrement': 1.08543290480156e-05, 
    'internalEnergy': 68.9058990478516, 'stepTime': 0.1856879144907, 
    'totalEnergy': 0.0727241411805153, 'jobName': 'Job-1', 
    'artificialEnergy': 40.5795059204102, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 17076, 'distortionContrEnergy': 0.0, 
    'externalWork': 80.193229675293, 'kineticEnergy': 10.9771947860718, 
    'wallTime': 1846.0})
mdb.models['Model-1'].rootAssembly.rotate(angle=180.0, axisDirection=(0.0, 
    -10.0, 0.0), axisPoint=(67.511216, 24.966352, 2.5), instanceList=(
    'DikeRigid-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('DikeRigid-1', ), 
    vector=(-67.511216, -16.666352, -7.5))
del mdb.models['Model-1'].rootAssembly.features['dike-1']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.197512283921242, 
    'stableTimeIncrement': 1.08538570202654e-05, 
    'internalEnergy': 60.6161575317383, 'stepTime': 0.197512283921242, 
    'totalEnergy': 0.0743568763136864, 'jobName': 'Job-1', 
    'artificialEnergy': 40.1283111572266, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 18166, 'distortionContrEnergy': 0.0, 
    'externalWork': 69.9712448120117, 'kineticEnergy': 9.21191692352295, 
    'wallTime': 1966.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['DikeRigid'].Surface(name='Surf-1', 
    side2Faces=mdb.models['Model-1'].parts['DikeRigid'].faces.getSequenceFromMask(
    ('[#ff ]', ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(
    principalAxis=XAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(
    principalAxis=YAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(
    principalAxis=ZAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(
    principalAxis=XAXIS)
mdb.models['Model-1'].rootAssembly.ReferencePoint(
    point=mdb.models['Model-1'].rootAssembly.datums[433])
mdb.models['Model-1'].rootAssembly.ReferencePoint(
    point=mdb.models['Model-1'].rootAssembly.referencePoints[438])
del mdb.models['Model-1'].parts['DikeRigid'].surfaces['Surf-1']
mdb.models['Model-1'].parts['DikeRigid'].Surface(name='Surf-1', 
    side2Faces=mdb.models['Model-1'].parts['DikeRigid'].faces.getSequenceFromMask(
    ('[#ff ]', ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].RigidBody(name='Constraint-1', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )))
del mdb.models['Model-1'].constraints['Constraint-1']
mdb.models['Model-1'].RigidBody(name='Constraint-1', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].faces.getSequenceFromMask(
    mask=('[#8 ]', ), )))
del mdb.models['Model-1'].constraints['Constraint-1']
del mdb.models['Model-1'].parts['Part-6']
del mdb.models['Model-1'].parts['Spacer']
mdb.models['Model-1'].parts['DikeRigid'].Surface(name='Surf-2', 
    side1Faces=mdb.models['Model-1'].parts['DikeRigid'].faces.getSequenceFromMask(
    ('[#ff ]', ), ))
del mdb.models['Model-1'].parts['DikeRigid'].surfaces['Surf-1']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].RigidBody(name='Constraint-1', refPointRegion=Region(
    referencePoints=(mdb.models['Model-1'].rootAssembly.referencePoints[439], 
    )), surfaceRegion=Region(
    side1Faces=mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].faces.getSequenceFromMask(
    mask=('[#ff ]', ), )))
del mdb.models['Model-1'].boundaryConditions['BC-1']
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 29712, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoMass have no mass associated with them and some degrees of freedom of the reference node are not restrained. Either mass must be defined or all of the translational degrees of freedom must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': PACKAGER_PHASE, 
    'message': 'The rigid bodies with the reference nodes contained in node set ErrNodeRefNodeNoRot1Axis have atleast one axis about which the rotary inertia magnitude is zero, and the rigid bodies have atleast one rotational degree of freedom which is unconstrained. Either rotary inertia must be defined at the reference nodes or all of the rotational degrees of freedom at the reference nodes must be constrained. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': PACKAGER_PHASE, 
    'message': 'Analysis failed due to Errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Packager exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Loading', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, 
    localCsys=mdb.models['Model-1'].rootAssembly.datums[1], name='BC-1', 
    region=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[439], )), u1=0.0, 
    u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 20356, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 29464, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.46973489387892e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Thu Apr 17 14:29:38 2025', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 37964, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 38916, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 8.46973489387892e-06, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 2.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0138597898185253, 
    'stableTimeIncrement': 1.08948670458631e-05, 
    'internalEnergy': 2.48097157478333, 'stepTime': 0.0138597898185253, 
    'totalEnergy': 0.225344732403755, 'jobName': 'Job-1', 
    'artificialEnergy': 1.24734508991241, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1269, 'distortionContrEnergy': 0.0, 
    'externalWork': -0.10389119386673, 'kineticEnergy': 1.53541302680969, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0278939418494701, 
    'stableTimeIncrement': 1.08816402644152e-05, 
    'internalEnergy': 3.91401171684265, 'stepTime': 0.0278939418494701, 
    'totalEnergy': 0.254525005817413, 'jobName': 'Job-1', 
    'artificialEnergy': 2.38855600357056, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2558, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.372686117887497, 'kineticEnergy': 1.68728876113892, 
    'wallTime': 242.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0416257604956627, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 5.18781614303589, 'stepTime': 0.0416257604956627, 
    'totalEnergy': 0.277128428220749, 'jobName': 'Job-1', 
    'artificialEnergy': 3.46272110939026, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3821, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.594395339488983, 'kineticEnergy': 1.63760197162628, 
    'wallTime': 362.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500039644539356, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 5.41388082504272, 'stepTime': 0.0500039644539356, 
    'totalEnergy': 0.221098363399506, 'jobName': 'Job-1', 
    'artificialEnergy': 4.10582971572876, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4592, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.285721838474274, 'kineticEnergy': 1.43157804012299, 
    'wallTime': 435.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0634246245026588, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 6.51812934875488, 'stepTime': 0.0634246245026588, 
    'totalEnergy': 0.22770132124424, 'jobName': 'Job-1', 
    'artificialEnergy': 5.2055811882019, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5827, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.257930308580399, 'kineticEnergy': 1.45678460597992, 
    'wallTime': 555.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0768930464982986, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 7.70915460586548, 'stepTime': 0.0768930464982986, 
    'totalEnergy': 0.245813965797424, 'jobName': 'Job-1', 
    'artificialEnergy': 6.26823997497559, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 7066, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.433027714490891, 'kineticEnergy': 1.50820755958557, 
    'wallTime': 676.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0898723006248474, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 8.83802223205566, 'stepTime': 0.0898723006248474, 
    'totalEnergy': 0.256607502698898, 'jobName': 'Job-1', 
    'artificialEnergy': 7.28223514556885, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 8260, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.590638816356659, 'kineticEnergy': 1.52392470836639, 
    'wallTime': 795.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100003510713577, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 9.58404445648193, 'stepTime': 0.100003510713577, 
    'totalEnergy': 0.244127154350281, 'jobName': 'Job-1', 
    'artificialEnergy': 8.09002780914307, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9192, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.517793893814087, 'kineticEnergy': 1.4891083240509, 
    'wallTime': 888.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.112884931266308, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 10.5303039550781, 'stepTime': 0.112884931266308, 
    'totalEnergy': 0.23868528008461, 'jobName': 'Job-1', 
    'artificialEnergy': 9.10206127166748, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 10377, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.438378989696503, 'kineticEnergy': 1.47353410720825, 
    'wallTime': 1008.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.126091718673706, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 11.6004438400269, 'stepTime': 0.126091718673706, 
    'totalEnergy': 0.238199204206467, 'jobName': 'Job-1', 
    'artificialEnergy': 10.1463394165039, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 11592, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.492568463087082, 'kineticEnergy': 1.46494925022125, 
    'wallTime': 1129.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.139301061630249, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 12.7005996704102, 'stepTime': 0.139301061630249, 
    'totalEnergy': 0.244174882769585, 'jobName': 'Job-1', 
    'artificialEnergy': 11.2156133651733, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 12808, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.54023140668869, 'kineticEnergy': 1.48930752277374, 
    'wallTime': 1249.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150001063942909, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 13.4823303222656, 'stepTime': 0.150001063942909, 
    'totalEnergy': 0.238958850502968, 'jobName': 'Job-1', 
    'artificialEnergy': 12.0408878326416, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13793, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.553117036819458, 'kineticEnergy': 1.45997762680054, 
    'wallTime': 1352.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.162678122520447, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 14.4500179290771, 'stepTime': 0.162678122520447, 
    'totalEnergy': 0.234619438648224, 'jobName': 'Job-1', 
    'artificialEnergy': 13.0231714248657, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 14960, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.531289398670197, 'kineticEnergy': 1.42380774021149, 
    'wallTime': 1472.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.175702795386314, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 15.4610786437988, 'stepTime': 0.175702795386314, 
    'totalEnergy': 0.238147422671318, 'jobName': 'Job-1', 
    'artificialEnergy': 14.0281181335449, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 16159, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.532002925872803, 'kineticEnergy': 1.49365174770355, 
    'wallTime': 1592.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.188097417354584, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 16.4771995544434, 'stepTime': 0.188097417354584, 
    'totalEnergy': 0.24005052447319, 'jobName': 'Job-1', 
    'artificialEnergy': 14.9897308349609, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 17300, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.609478414058685, 'kineticEnergy': 1.47354960441589, 
    'wallTime': 1712.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200003206729889, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 17.3877735137939, 'stepTime': 0.200003206729889, 
    'totalEnergy': 0.241939976811409, 'jobName': 'Job-1', 
    'artificialEnergy': 15.9219942092896, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 18396, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.609494149684906, 'kineticEnergy': 1.44268417358398, 
    'wallTime': 1825.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.212658539414406, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 18.3920574188232, 'stepTime': 0.212658539414406, 
    'totalEnergy': 0.239514321088791, 'jobName': 'Job-1', 
    'artificialEnergy': 16.9570064544678, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 19561, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.540864288806915, 'kineticEnergy': 1.46868169307709, 
    'wallTime': 1945.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.225770115852356, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 19.4053764343262, 'stepTime': 0.225770115852356, 
    'totalEnergy': 0.232067570090294, 'jobName': 'Job-1', 
    'artificialEnergy': 18.0034637451172, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 20768, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.521115839481354, 'kineticEnergy': 1.44744145870209, 
    'wallTime': 2065.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.23833854496479, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 20.4422283172607, 'stepTime': 0.23833854496479, 
    'totalEnergy': 0.242366224527359, 'jobName': 'Job-1', 
    'artificialEnergy': 18.984188079834, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 21925, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.589813113212585, 'kineticEnergy': 1.47359991073608, 
    'wallTime': 2185.0})
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=(
    'S', 'SVAVG'))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.25000536441803, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 21.3782691955566, 'stepTime': 0.25000536441803, 
    'totalEnergy': 0.239998355507851, 'jobName': 'Job-1', 
    'artificialEnergy': 19.931360244751, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22999, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.570965826511383, 'kineticEnergy': 1.47779715061188, 
    'wallTime': 2292.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.262917369604111, 
    'stableTimeIncrement': 1.08679914774257e-05, 
    'internalEnergy': 22.4284362792969, 'stepTime': 0.262917369604111, 
    'totalEnergy': 0.244010657072067, 'jobName': 'Job-1', 
    'artificialEnergy': 20.9588470458984, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 24186, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.560523450374603, 'kineticEnergy': 1.50239098072052, 
    'wallTime': 2412.0})
mdb.jobs['Job-1']._Message(ERROR, {'phase': EXPLICIT_PHASE, 
    'message': 'Process terminated by external request (SIGTERM or SIGINT received).', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(INTERRUPTED, {'phase': EXPLICIT_PHASE, 
    'message': 'Analysis terminated by external signal', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(
    variables=PRESELECT)
mdb.models['Model-1'].parts['Block'].deleteMesh()
mdb.models['Model-1'].parts['Block'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.075)
mdb.models['Model-1'].parts['Block'].generateMesh()
mdb.models['Model-1'].parts['HalfBlock'].deleteMesh()
mdb.models['Model-1'].parts['HalfBlock'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.075)
mdb.models['Model-1'].parts['HalfBlock'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 29684, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'TUD1006537', 'handle': 26540, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.19284413813148e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.041450560092926, 
    'stableTimeIncrement': 1.53844321175711e-05, 
    'internalEnergy': 4.87670707702637, 'stepTime': 0.041450560092926, 
    'totalEnergy': 0.285056114196777, 'jobName': 'Job-1', 
    'artificialEnergy': 3.01490354537964, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2691, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.773433923721313, 'kineticEnergy': 1.79623472690582, 
    'wallTime': 121.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500048696994781, 
    'stableTimeIncrement': 1.53844321175711e-05, 
    'internalEnergy': 4.83237409591675, 'stepTime': 0.0500048696994781, 
    'totalEnergy': 0.240101009607315, 'jobName': 'Job-1', 
    'artificialEnergy': 3.54881763458252, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3247, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.103467911481857, 'kineticEnergy': 1.62284159660339, 
    'wallTime': 145.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0913732349872589, 
    'stableTimeIncrement': 1.53714427142404e-05, 
    'internalEnergy': 7.93756484985352, 'stepTime': 0.0913732349872589, 
    'totalEnergy': 0.255499124526978, 'jobName': 'Job-1', 
    'artificialEnergy': 6.36637353897095, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 5937, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.674852073192596, 'kineticEnergy': 1.57985186576843, 
    'wallTime': 265.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100000351667404, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 8.44201183319092, 'stepTime': 0.100000351667404, 
    'totalEnergy': 0.254896193742752, 'jobName': 'Job-1', 
    'artificialEnergy': 6.99810075759888, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 6499, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.417062193155289, 'kineticEnergy': 1.63794839382172, 
    'wallTime': 289.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.143558531999588, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 11.6212930679321, 'stepTime': 0.143558531999588, 
    'totalEnergy': 0.271099209785461, 'jobName': 'Job-1', 
    'artificialEnergy': 10.0040798187256, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9337, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.708009839057922, 'kineticEnergy': 1.66270589828491, 
    'wallTime': 409.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150004774332047, 
    'stableTimeIncrement': 1.53471519297455e-05, 
    'internalEnergy': 11.856595993042, 'stepTime': 0.150004774332047, 
    'totalEnergy': 0.253265827894211, 'jobName': 'Job-1', 
    'artificialEnergy': 10.4411516189575, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 9757, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.495283782482147, 'kineticEnergy': 1.67596876621246, 
    'wallTime': 427.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.193937927484512, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 14.7628583908081, 'stepTime': 0.193937927484512, 
    'totalEnergy': 0.255413591861725, 'jobName': 'Job-1', 
    'artificialEnergy': 13.2407245635986, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 12621, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.774075567722321, 'kineticEnergy': 1.66525077819824, 
    'wallTime': 547.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200009912252426, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 15.0820646286011, 'stepTime': 0.200009912252426, 
    'totalEnergy': 0.249856412410736, 'jobName': 'Job-1', 
    'artificialEnergy': 13.6482801437378, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13017, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.671635508537292, 'kineticEnergy': 1.54348480701447, 
    'wallTime': 564.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.24064314365387, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 17.850435256958, 'stepTime': 0.24064314365387, 
    'totalEnergy': 0.249529033899307, 'jobName': 'Job-1', 
    'artificialEnergy': 16.3494434356689, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 15667, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.823240041732788, 'kineticEnergy': 1.60491526126862, 
    'wallTime': 684.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250011801719666, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 18.425874710083, 'stepTime': 0.250011801719666, 
    'totalEnergy': 0.251831114292145, 'jobName': 'Job-1', 
    'artificialEnergy': 16.9990291595459, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 16278, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.727918207645416, 'kineticEnergy': 1.63511753082275, 
    'wallTime': 710.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.294045776128769, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 21.3510971069336, 'stepTime': 0.294045776128769, 
    'totalEnergy': 0.248190477490425, 'jobName': 'Job-1', 
    'artificialEnergy': 19.8702411651611, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 19147, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.867295861244202, 'kineticEnergy': 1.57707870006561, 
    'wallTime': 830.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300000876188278, 
    'stableTimeIncrement': 1.53338278323645e-05, 
    'internalEnergy': 21.6989040374756, 'stepTime': 0.300000876188278, 
    'totalEnergy': 0.244582787156105, 'jobName': 'Job-1', 
    'artificialEnergy': 20.2691459655762, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 19535, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.848993897438049, 'kineticEnergy': 1.52850592136383, 
    'wallTime': 846.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.343915104866028, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 24.6817054748535, 'stepTime': 0.343915104866028, 
    'totalEnergy': 0.261896818876266, 'jobName': 'Job-1', 
    'artificialEnergy': 23.1584854125977, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22401, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.938437819480896, 'kineticEnergy': 1.69482553005219, 
    'wallTime': 967.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350011825561523, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 25.0087242126465, 'stepTime': 0.350011825561523, 
    'totalEnergy': 0.244667127728462, 'jobName': 'Job-1', 
    'artificialEnergy': 23.5683574676514, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 22799, 'distortionContrEnergy': 0.0, 
    'externalWork': 0.882524132728577, 'kineticEnergy': 1.51152980327606, 
    'wallTime': 983.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.393408834934235, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 27.9154300689697, 'stepTime': 0.393408834934235, 
    'totalEnergy': 0.249360591173172, 'jobName': 'Job-1', 
    'artificialEnergy': 26.4214477539062, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 25632, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.00089859962463, 'kineticEnergy': 1.593705534935, 
    'wallTime': 1103.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.40001106262207, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 28.3040733337402, 'stepTime': 0.40001106262207, 
    'totalEnergy': 0.246045410633087, 'jobName': 'Job-1', 
    'artificialEnergy': 26.8474063873291, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 26063, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.00737977027893, 'kineticEnergy': 1.59598994255066, 
    'wallTime': 1122.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.443454027175903, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 31.0611114501953, 'stepTime': 0.443454027175903, 
    'totalEnergy': 0.245864406228065, 'jobName': 'Job-1', 
    'artificialEnergy': 29.6351108551025, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 28899, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.03899073600769, 'kineticEnergy': 1.55930542945862, 
    'wallTime': 1242.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.450010299682617, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 31.5594863891602, 'stepTime': 0.450010299682617, 
    'totalEnergy': 0.253090709447861, 'jobName': 'Job-1', 
    'artificialEnergy': 30.0565795898438, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 29327, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.05941987037659, 'kineticEnergy': 1.51870322227478, 
    'wallTime': 1260.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.493606448173523, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 34.3509750366211, 'stepTime': 0.493606448173523, 
    'totalEnergy': 0.246307209134102, 'jobName': 'Job-1', 
    'artificialEnergy': 32.8885307312012, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 32173, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.05669450759888, 'kineticEnergy': 1.59792697429657, 
    'wallTime': 1380.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500009536743164, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 34.8847274780273, 'stepTime': 0.500009536743164, 
    'totalEnergy': 0.259746432304382, 'jobName': 'Job-1', 
    'artificialEnergy': 33.326530456543, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 32591, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.07783102989197, 'kineticEnergy': 1.58625614643097, 
    'wallTime': 1398.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.54360568523407, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 37.7206153869629, 'stepTime': 0.54360568523407, 
    'totalEnergy': 0.252800643444061, 'jobName': 'Job-1', 
    'artificialEnergy': 36.1981811523438, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 35437, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.11322665214539, 'kineticEnergy': 1.61972594261169, 
    'wallTime': 1518.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.550008773803711, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 38.0978355407715, 'stepTime': 0.550008773803711, 
    'totalEnergy': 0.248231828212738, 'jobName': 'Job-1', 
    'artificialEnergy': 36.6216850280762, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 35855, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.04279720783234, 'kineticEnergy': 1.61277079582214, 
    'wallTime': 1536.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.59369683265686, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 40.8848991394043, 'stepTime': 0.59369683265686, 
    'totalEnergy': 0.242259696125984, 'jobName': 'Job-1', 
    'artificialEnergy': 39.4509201049805, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 38707, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.07918918132782, 'kineticEnergy': 1.59161818027496, 
    'wallTime': 1656.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600008010864258, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 41.4477806091309, 'stepTime': 0.600008010864258, 
    'totalEnergy': 0.255018025636673, 'jobName': 'Job-1', 
    'artificialEnergy': 39.8912353515625, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 39119, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.114049077034, 'kineticEnergy': 1.6653881072998, 
    'wallTime': 1673.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.64024943113327, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 44.1723175048828, 'stepTime': 0.64024943113327, 
    'totalEnergy': 0.258321583271027, 'jobName': 'Job-1', 
    'artificialEnergy': 42.5942420959473, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 41746, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.13782358169556, 'kineticEnergy': 1.71859216690063, 
    'wallTime': 1793.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.650007247924805, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 44.6084289550781, 'stepTime': 0.650007247924805, 
    'totalEnergy': 0.232222408056259, 'jobName': 'Job-1', 
    'artificialEnergy': 43.2077484130859, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 42383, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.08595204353333, 'kineticEnergy': 1.49577331542969, 
    'wallTime': 1820.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.693572759628296, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 47.6535263061523, 'stepTime': 0.693572759628296, 
    'totalEnergy': 0.259356290102005, 'jobName': 'Job-1', 
    'artificialEnergy': 46.136116027832, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 45227, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.03700399398804, 'kineticEnergy': 1.60648310184479, 
    'wallTime': 1941.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700006484985352, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 47.9367294311523, 'stepTime': 0.700006484985352, 
    'totalEnergy': 0.23335374891758, 'jobName': 'Job-1', 
    'artificialEnergy': 46.5246543884277, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 45647, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.05171608924866, 'kineticEnergy': 1.61639058589935, 
    'wallTime': 1958.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.743219673633575, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 50.832878112793, 'stepTime': 0.743219673633575, 
    'totalEnergy': 0.241891831159592, 'jobName': 'Job-1', 
    'artificialEnergy': 49.3725280761719, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 48468, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.04714071750641, 'kineticEnergy': 1.58947622776031, 
    'wallTime': 2079.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750005722045898, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 51.3427276611328, 'stepTime': 0.750005722045898, 
    'totalEnergy': 0.253267765045166, 'jobName': 'Job-1', 
    'artificialEnergy': 49.8100967407227, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 48911, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.14803123474121, 'kineticEnergy': 1.61963784694672, 
    'wallTime': 2099.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.793831646442413, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 54.1720695495605, 'stepTime': 0.793831646442413, 
    'totalEnergy': 0.2407186627388, 'jobName': 'Job-1', 
    'artificialEnergy': 52.7297210693359, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 51772, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.08040118217468, 'kineticEnergy': 1.53871285915375, 
    'wallTime': 2219.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800004959106445, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 54.6085586547852, 'stepTime': 0.800004959106445, 
    'totalEnergy': 0.251138359308243, 'jobName': 'Job-1', 
    'artificialEnergy': 53.1162147521973, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 52175, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.11579740047455, 'kineticEnergy': 1.59572768211365, 
    'wallTime': 2236.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.843509197235107, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 57.4305038452148, 'stepTime': 0.843509197235107, 
    'totalEnergy': 0.241373434662819, 'jobName': 'Job-1', 
    'artificialEnergy': 55.9787139892578, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 55015, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.13682508468628, 'kineticEnergy': 1.58568501472473, 
    'wallTime': 2356.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.850004196166992, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 57.9948921203613, 'stepTime': 0.850004196166992, 
    'totalEnergy': 0.26220291852951, 'jobName': 'Job-1', 
    'artificialEnergy': 56.4259719848633, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 55439, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.15179669857025, 'kineticEnergy': 1.59291315078735, 
    'wallTime': 2374.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.893692255020142, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 60.6859130859375, 'stepTime': 0.893692255020142, 
    'totalEnergy': 0.238601759076118, 'jobName': 'Job-1', 
    'artificialEnergy': 59.2710838317871, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 58291, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.03224861621857, 'kineticEnergy': 1.5680410861969, 
    'wallTime': 2495.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900003433227539, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 61.1519203186035, 'stepTime': 0.900003433227539, 
    'totalEnergy': 0.238781154155731, 'jobName': 'Job-1', 
    'artificialEnergy': 59.6716461181641, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 58703, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.13062071800232, 'kineticEnergy': 1.56735634803772, 
    'wallTime': 2512.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.943660855293274, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 64.0991668701172, 'stepTime': 0.943660855293274, 
    'totalEnergy': 0.257270157337189, 'jobName': 'Job-1', 
    'artificialEnergy': 62.5990295410156, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 61553, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.10753059387207, 'kineticEnergy': 1.61066424846649, 
    'wallTime': 2632.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.950002670288086, 
    'stableTimeIncrement': 1.53239870996913e-05, 
    'internalEnergy': 64.4570388793945, 'stepTime': 0.950002670288086, 
    'totalEnergy': 0.240683540701866, 'jobName': 'Job-1', 
    'artificialEnergy': 62.996166229248, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 61967, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.13350319862366, 'kineticEnergy': 1.5751793384552, 
    'wallTime': 2650.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.993629455566406, 
    'stableTimeIncrement': 1.53062264871551e-05, 
    'internalEnergy': 67.391845703125, 'stepTime': 0.993629455566406, 
    'totalEnergy': 0.247112661600113, 'jobName': 'Job-1', 
    'artificialEnergy': 65.9372253417969, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 64815, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.05861437320709, 'kineticEnergy': 1.61381781101227, 
    'wallTime': 2770.0})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 
    'stableTimeIncrement': 1.53062264871551e-05, 
    'internalEnergy': 67.6820297241211, 'stepTime': 1.0, 
    'totalEnergy': 0.227976694703102, 'jobName': 'Job-1', 
    'artificialEnergy': 66.2931518554688, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 65231, 'distortionContrEnergy': 0.0, 
    'externalWork': 1.09132158756256, 'kineticEnergy': 1.53944826126099, 
    'wallTime': 2787.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Thu Apr 17 16:00:37 2025', 
    'jobName': 'Job-1'})
#--- End of Recover file ------
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
#: The job input file "Job-1.inp" has been submitted for analysis.
#: Job Job-1: Analysis Input File Processor completed successfully.
session.viewports['Viewport: 1'].view.setValues(nearPlane=53.5217, 
    farPlane=97.1183, width=77.5666, height=35.5296, viewOffsetX=6.5606, 
    viewOffsetY=-2.60363)
session.viewports['Viewport: 1'].view.setProjection(projection=PARALLEL)
#: Job Job-1: Abaqus/Explicit Packager completed successfully.
session.viewports['Viewport: 1'].view.setValues(nearPlane=58.5565, 
    farPlane=92.0833, width=29.7177, height=13.6123, cameraPosition=(62.342, 
    45.3506, 37.8654), cameraTarget=(18.8559, 1.8646, -5.62058))
mdb.save()
#: The model database has been saved to "D:\tpennock\First delta flume\First delta flume.cae".
session.viewports['Viewport: 1'].setValues(displayedObject=None)
s = mdb.models['Model-1'].ConstrainedSketch(name='__edit__', 
    objectToCopy=mdb.models['Model-1'].sketches['Dike'])
g, v, d, c = s.geometry, s.vertices, s.dimensions, s.constraints
s.setPrimaryObject(option=STANDALONE)
session.viewports['Viewport: 1'].view.setValues(nearPlane=360.262, 
    farPlane=365.706, width=42.3881, height=22.0086, cameraPosition=(58.794, 
    18.1737, 362.984), cameraTarget=(58.794, 18.1737, 0))
s.undo()
#* Nothing to undo.
session.viewports['Viewport: 1'].view.setValues(nearPlane=361.531, 
    farPlane=364.436, width=21.9225, height=11.3826, cameraPosition=(51.3932, 
    17.4668, 362.984), cameraTarget=(51.3932, 17.4668, 0))
s.HorizontalDimension(vertex1=v[14], vertex2=v[13], textPoint=(
    42.8810844421387, 15.2833604812622), value=6.04743416489242)
session.viewports['Viewport: 1'].view.setValues(nearPlane=358.276, 
    farPlane=367.692, width=71.0506, height=36.8907, cameraPosition=(55.9358, 
    19.788, 362.984), cameraTarget=(55.9358, 19.788, 0))
s.HorizontalDimension(vertex1=v[13], vertex2=v[15], textPoint=(
    48.9213409423828, 14.1857643127441), value=16.5474341649025)
session.viewports['Viewport: 1'].view.setValues(nearPlane=360.914, 
    farPlane=365.053, width=32.894, height=17.0792, cameraPosition=(49.8256, 
    18.8741, 362.984), cameraTarget=(49.8256, 18.8741, 0))
s.VerticalDimension(vertex1=v[14], vertex2=v[13], textPoint=(38.989372253418, 
    18.1400718688965), value=1.85769750528906)
#: Job Job-1: Abaqus/Explicit completed successfully.
#: Job Job-1 completed successfully. 
session.viewports['Viewport: 1'].view.setValues(nearPlane=1187.18, 
    farPlane=1204.8, width=166.359, height=86.3764, cameraPosition=(43.2371, 
    21.8926, 1195.99), cameraTarget=(43.2371, 21.8926, 0))
s.unsetPrimaryObject()
del mdb.models['Model-1'].sketches['__edit__']
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
o3 = session.openOdb(name='D:/tpennock/First delta flume/Job-1.odb')
#: Model: D:/tpennock/First delta flume/Job-1.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     210
#: Number of Meshes:             211
#: Number of Element Sets:       0
#: Number of Node Sets:          3
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['D:/tpennock/First delta flume/Job-1.odb'])
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=SCALE_FACTOR)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].view.setValues(nearPlane=43.9485, 
    farPlane=70.4193, width=19.855, height=7.52088, cameraPosition=(51.5365, 
    34.3251, 28.2838), cameraTarget=(18.5214, 1.30995, -4.73131))
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(nearPlane=55.0196, 
    farPlane=95.6203, width=64.7552, height=26.0414, cameraPosition=(66.3525, 
    48.4405, 30.765), cameraTarget=(22.8664, 4.95448, -12.721))
p1 = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
s1 = mdb.models['Model-1'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
g, v, d, c = s1.geometry, s1.vertices, s1.dimensions, s1.constraints
s1.setPrimaryObject(option=STANDALONE)
s1.rectangle(point1=(0.0, 0.0), point2=(63.75, 5.0))
s1.ObliqueDimension(vertex1=v[3], vertex2=v[0], textPoint=(31.4826965332031, 
    -8.4232349395752), value=26.5)
s1.ObliqueDimension(vertex1=v[0], vertex2=v[1], textPoint=(30.6101989746094, 
    2.75933456420898), value=0.5)
p = mdb.models['Model-1'].Part(name='Wall', dimensionality=THREE_D, 
    type=ANALYTIC_RIGID_SURFACE)
p = mdb.models['Model-1'].parts['Wall']
p.AnalyticRigidSurfExtrude(sketch=s1, depth=7.0)
s1.unsetPrimaryObject()
p = mdb.models['Model-1'].parts['Wall']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
del mdb.models['Model-1'].sketches['__profile__']
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(nearPlane=56.7691, 
    farPlane=93.8708, width=47.9526, height=18.164, cameraPosition=(61.3551, 
    48.9388, 35.264), cameraTarget=(17.8691, 5.45282, -8.22195))
a = mdb.models['Model-1'].rootAssembly
p = mdb.models['Model-1'].parts['Wall']
a.Instance(name='Wall-1', part=p, dependent=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=102.024, 
    farPlane=167.264, width=46.9231, height=17.774, cameraPosition=(122.094, 
    74.8605, 71.5312), cameraTarget=(43.8254, -3.40805, -6.73736))
a = mdb.models['Model-1'].rootAssembly
a.rotate(instanceList=('Wall-1', ), axisPoint=(63.75, 4.5, -3.5), 
    axisDirection=(-10.0, 0.0, 0.0), angle=90.0)
#: The instance Wall-1 was rotated by 90. degrees about the axis defined by the point 63.75, 4.5, -3.5 and the vector -10., 0., 0.
session.viewports['Viewport: 1'].view.setValues(nearPlane=131.806, 
    farPlane=160.778, width=5.63346, height=2.1339, cameraPosition=(108.411, 
    82.7995, 77.2754), cameraTarget=(30.1422, 4.53096, -0.993142))
a = mdb.models['Model-1'].rootAssembly
a.translate(instanceList=('Wall-1', ), vector=(-37.25, -4.5, -1.5))
#: The instance Wall-1 was translated by -37.25, -4.5, -1.5 with respect to the assembly coordinate system
session.viewports['Viewport: 1'].view.setValues(nearPlane=128.684, 
    farPlane=164.189, width=37.1173, height=14.0597, cameraPosition=(98.4203, 
    86.2198, 83.8457), cameraTarget=(20.1517, 7.95118, 5.57714))
a = mdb.models['Model-1'].rootAssembly
a.LinearInstancePattern(instanceList=('Wall-1', ), direction1=(1.0, 0.0, 0.0), 
    direction2=(0.0, 1.0, 0.0), number1=1, number2=2, spacing1=26.5, 
    spacing2=7.0)
session.viewports['Viewport: 1'].view.setValues(nearPlane=124.255, 
    farPlane=165.328, width=46.2728, height=17.5277, cameraPosition=(94.4953, 
    92.988, 81.0025), cameraTarget=(16.2267, 14.7194, 2.73393))
a = mdb.models['Model-1'].rootAssembly
a.translate(instanceList=('Wall-1-lin-1-2', ), vector=(0.0, -7.0, 5.5))
#: The instance Wall-1-lin-1-2 was translated by 0., -7., 5.5 with respect to the assembly coordinate system
session.viewports['Viewport: 1'].view.setValues(nearPlane=125.705, 
    farPlane=166.879, width=71.1105, height=26.936, cameraPosition=(101.057, 
    89.0437, 78.3855), cameraTarget=(22.788, 10.7751, 0.116941))
i1 = mdb.models['Model-1'].rootAssembly.allInstances['Wall-1-lin-1-2']
leaf = dgm.LeafFromInstance(instances=(i1, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
dg = session.viewports['Viewport: 1'].assemblyDisplay.displayGroup
dg = session.DisplayGroup(name='DisplayGroup-2', objectToCopy=dg)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    visibleDisplayGroups=(dg, ))
leaf = dgm.Leaf(leafType=DEFAULT_MODEL)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
dg1= session.displayGroups['DisplayGroup-2']
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    visibleDisplayGroups=(dg1, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=121.719, 
    farPlane=171.154, width=105.643, height=40.0164, cameraPosition=(101.141, 
    86.8928, 80.4517), cameraTarget=(22.8726, 8.62424, 2.18318))
session.viewports['Viewport: 1'].view.setProjection(projection=PARALLEL)
session.viewports['Viewport: 1'].view.setValues(nearPlane=126.684, 
    farPlane=166.189, width=59.2065, height=22.4268, cameraPosition=(107.658, 
    85.2483, 75.5795), cameraTarget=(29.3893, 6.97974, -2.689))
mdb.save()
#: The model database has been saved to "D:\tpennock\First delta flume\First delta flume.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=128.771, 
    farPlane=164.103, width=35.1162, height=13.3017, cameraPosition=(104.034, 
    86.143, 78.3091), cameraTarget=(25.765, 7.87445, 0.0405922))
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.6972, 
    farPlane=87.9842, width=50.1878, height=19.0106, cameraPosition=(55.0849, 
    41.8063, 37.1943), cameraTarget=(15.3398, 2.06109, -2.55085))
i1 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1']
i2 = mdb.models['Model-1'].rootAssembly.allInstances['Wall-1']
i3 = mdb.models['Model-1'].rootAssembly.allInstances['Wall-1-lin-1-2']
leaf = dgm.LeafFromInstance(instances=(i1, i2, i3, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=58.2629, 
    farPlane=83.4086, width=28.6344, height=10.8464, cameraPosition=(54.8295, 
    42.8389, 36.4171), cameraTarget=(15.0843, 3.09372, -3.32804))
dg = session.viewports['Viewport: 1'].assemblyDisplay.displayGroup
dg = session.DisplayGroup(name='alleen blokken', objectToCopy=dg)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    visibleDisplayGroups=(dg, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=59.2002, 
    farPlane=82.9652, cameraPosition=(54.8295, -7.68792, 52.55), 
    cameraUpVector=(-0.57735, 0.8051, 0.135945), cameraTarget=(15.0843, 
    1.67064, -2.87367))
session.viewports['Viewport: 1'].view.setValues(session.views['Top'])
session.viewports['Viewport: 1'].view.setValues(cameraPosition=(11.0897, 
    49.9028, -2.57691), cameraTarget=(11.0897, 2.92029, -2.57691))
session.viewports['Viewport: 1'].view.setValues(nearPlane=33.7045, 
    farPlane=60.4724, cameraPosition=(51.924, -20.0672, -5.96679), 
    cameraUpVector=(-0.132673, -0.0901189, -0.987055), cameraTarget=(11.0897, 
    2.9203, -2.57691))
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=34.1213, 
    farPlane=59.8438, width=31.2389, height=11.833, cameraPosition=(41.4885, 
    28.9455, 22.3367), cameraTarget=(14.3631, 1.82006, -4.78872))
session.viewports['Viewport: 1'].view.setValues(nearPlane=34.2456, 
    cameraPosition=(41.4885, 28.9455, 22.3367), cameraUpVector=(-0.613576, 
    0.576176, -0.53995), cameraTarget=(14.3631, 1.82006, -4.78872))
session.viewports['Viewport: 1'].view.setValues(nearPlane=36.54, 
    farPlane=53.2413, cameraPosition=(19.6849, 29.7724, 32.5973), 
    cameraUpVector=(0.248292, 0.501181, -0.828956), cameraTarget=(14.3631, 
    1.82006, -4.78873))
session.viewports['Viewport: 1'].view.setValues(nearPlane=37.3977, 
    farPlane=50.9368, cameraPosition=(13.57, -6.15088, 40.7984), 
    cameraUpVector=(0.346003, 0.928052, -0.137847), cameraTarget=(14.6481, 
    3.49417, -5.17092))
session.viewports['Viewport: 1'].view.setValues(nearPlane=32.1688, 
    farPlane=53.079, cameraPosition=(-4.29808, -36.955, -4.54313), 
    cameraUpVector=(0.214265, 0.216978, 0.952371), cameraTarget=(15.7871, 
    5.45773, -2.28068))
session.viewports['Viewport: 1'].view.setValues(nearPlane=33.1569, 
    farPlane=52.0911, width=20.2652, height=7.67627, cameraPosition=(-3.88843, 
    -37.106, -5.3491), cameraTarget=(16.1967, 5.30673, -3.08665))
p1 = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.00713, 
    farPlane=2.01036, width=1.68991, height=0.640121, viewOffsetX=0.117594, 
    viewOffsetY=0.0264209)
p = mdb.models['Model-1'].parts['Block']
s = p.faces
side1Faces = s.getSequenceFromMask(mask=('[#10 ]', ), )
p.Surface(side1Faces=side1Faces, name='top')
#: The surface 'top' has been created (1 face).
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.25745, 
    farPlane=2.11948, width=2.10993, height=0.799223, cameraPosition=(1.09869, 
    1.0051, -1.19138), cameraUpVector=(-0.804058, 0.515131, 0.296867), 
    cameraTarget=(0.502688, 0.347847, 0.0289129), viewOffsetX=0.146822, 
    viewOffsetY=0.0329879)
a1 = mdb.models['Model-1'].rootAssembly
a1.regenerate()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=34.2676, 
    farPlane=59.6975, width=29.4582, height=11.1585, cameraPosition=(38.7329, 
    28.3557, 25.682), cameraTarget=(11.6075, 1.23034, -1.44336))
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-2-1'].surfaces['top']
srf2 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-3-1'].surfaces['top']
srf3 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-4-1'].surfaces['top']
srf4 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-5-1'].surfaces['top']
srf5 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-6-1'].surfaces['top']
srf6 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-7-1'].surfaces['top']
srf7 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-8-1'].surfaces['top']
srf8 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-9-1'].surfaces['top']
srf9 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-10-1'].surfaces['top']
srf10 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-11-1'].surfaces['top']
srf11 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2'].surfaces['top']
srf12 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-2-1'].surfaces['top']
srf13 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-3-1'].surfaces['top']
srf14 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-4-1'].surfaces['top']
srf15 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-5-1'].surfaces['top']
srf16 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-6-1'].surfaces['top']
srf17 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-7-1'].surfaces['top']
srf18 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-8-1'].surfaces['top']
srf19 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-9-1'].surfaces['top']
srf20 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-10-1'].surfaces['top']
srf21 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-11-1'].surfaces['top']
srf22 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3'].surfaces['top']
srf23 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-2-1'].surfaces['top']
srf24 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-3-1'].surfaces['top']
srf25 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-4-1'].surfaces['top']
srf26 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-5-1'].surfaces['top']
srf27 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-6-1'].surfaces['top']
srf28 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-7-1'].surfaces['top']
srf29 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-8-1'].surfaces['top']
srf30 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-9-1'].surfaces['top']
srf31 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-10-1'].surfaces['top']
srf32 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-11-1'].surfaces['top']
srf33 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4'].surfaces['top']
srf34 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-2-1'].surfaces['top']
srf35 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-3-1'].surfaces['top']
srf36 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-4-1'].surfaces['top']
srf37 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-5-1'].surfaces['top']
srf38 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-6-1'].surfaces['top']
srf39 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-7-1'].surfaces['top']
srf40 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-8-1'].surfaces['top']
srf41 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-9-1'].surfaces['top']
srf42 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-10-1'].surfaces['top']
srf43 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-11-1'].surfaces['top']
srf44 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5'].surfaces['top']
srf45 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-2-1'].surfaces['top']
srf46 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-3-1'].surfaces['top']
srf47 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-4-1'].surfaces['top']
srf48 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-5-1'].surfaces['top']
srf49 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-6-1'].surfaces['top']
srf50 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-7-1'].surfaces['top']
srf51 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-8-1'].surfaces['top']
srf52 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-9-1'].surfaces['top']
srf53 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-10-1'].surfaces['top']
srf54 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-11-1'].surfaces['top']
srf55 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6'].surfaces['top']
srf56 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-2-1'].surfaces['top']
srf57 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-3-1'].surfaces['top']
srf58 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-4-1'].surfaces['top']
srf59 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-5-1'].surfaces['top']
srf60 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-6-1'].surfaces['top']
srf61 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-7-1'].surfaces['top']
srf62 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-8-1'].surfaces['top']
srf63 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-9-1'].surfaces['top']
srf64 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-10-1'].surfaces['top']
srf65 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-11-1'].surfaces['top']
srf66 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7'].surfaces['top']
srf67 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-1'].surfaces['top']
srf68 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].surfaces['top']
srf69 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].surfaces['top']
srf70 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].surfaces['top']
srf71 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].surfaces['top']
srf72 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].surfaces['top']
srf73 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].surfaces['top']
srf74 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].surfaces['top']
srf75 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].surfaces['top']
srf76 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].surfaces['top']
srf77 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].surfaces['top']
srf78 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].surfaces['top']
srf79 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].surfaces['top']
srf80 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].surfaces['top']
srf81 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].surfaces['top']
srf82 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].surfaces['top']
srf83 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].surfaces['top']
srf84 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].surfaces['top']
srf85 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].surfaces['top']
srf86 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].surfaces['top']
srf87 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].surfaces['top']
srf88 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].surfaces['top']
srf89 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].surfaces['top']
srf90 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].surfaces['top']
srf91 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].surfaces['top']
srf92 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].surfaces['top']
srf93 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].surfaces['top']
srf94 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].surfaces['top']
srf95 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].surfaces['top']
srf96 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].surfaces['top']
srf97 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].surfaces['top']
srf98 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].surfaces['top']
srf99 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].surfaces['top']
srf100 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].surfaces['top']
srf101 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].surfaces['top']
srf102 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].surfaces['top']
srf103 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].surfaces['top']
srf104 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].surfaces['top']
srf105 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].surfaces['top']
srf106 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].surfaces['top']
srf107 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].surfaces['top']
srf108 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].surfaces['top']
srf109 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].surfaces['top']
srf110 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].surfaces['top']
srf111 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].surfaces['top']
srf112 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].surfaces['top']
srf113 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].surfaces['top']
srf114 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].surfaces['top']
srf115 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].surfaces['top']
srf116 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].surfaces['top']
srf117 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].surfaces['top']
srf118 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].surfaces['top']
srf119 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].surfaces['top']
srf120 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].surfaces['top']
srf121 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].surfaces['top']
srf122 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].surfaces['top']
srf123 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].surfaces['top']
srf124 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].surfaces['top']
srf125 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].surfaces['top']
srf126 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].surfaces['top']
srf127 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].surfaces['top']
srf128 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].surfaces['top']
srf129 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].surfaces['top']
srf130 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].surfaces['top']
srf131 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].surfaces['top']
srf132 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-2'].surfaces['top']
srf133 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-3'].surfaces['top']
srf134 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-4'].surfaces['top']
srf135 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-5'].surfaces['top']
srf136 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-6'].surfaces['top']
srf137 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-7'].surfaces['top']
srf138 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-8'].surfaces['top']
srf139 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-9'].surfaces['top']
srf140 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-2-1'].surfaces['top']
srf141 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-3-1'].surfaces['top']
srf142 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-4-1'].surfaces['top']
srf143 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-5-1'].surfaces['top']
srf144 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-6-1'].surfaces['top']
srf145 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-7-1'].surfaces['top']
srf146 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-8-1'].surfaces['top']
srf147 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-9-1'].surfaces['top']
srf148 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-10-1'].surfaces['top']
srf149 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-11-1'].surfaces['top']
srf150 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].surfaces['top']
srf151 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].surfaces['top']
srf152 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].surfaces['top']
srf153 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].surfaces['top']
srf154 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].surfaces['top']
srf155 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].surfaces['top']
srf156 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].surfaces['top']
srf157 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].surfaces['top']
srf158 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].surfaces['top']
srf159 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].surfaces['top']
srf160 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].surfaces['top']
srf161 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].surfaces['top']
srf162 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].surfaces['top']
srf163 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].surfaces['top']
srf164 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].surfaces['top']
srf165 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].surfaces['top']
srf166 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1'].surfaces['top']
srf167 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-3-1'].surfaces['top']
srf168 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-4-1'].surfaces['top']
srf169 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-5-1'].surfaces['top']
srf170 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-6-1'].surfaces['top']
srf171 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-7-1'].surfaces['top']
srf172 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-8-1'].surfaces['top']
srf173 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-9-1'].surfaces['top']
srf174 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-10-1'].surfaces['top']
srf175 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-11-1'].surfaces['top']
srf176 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8'].surfaces['top']
srf177 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-2-1'].surfaces['top']
srf178 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-3-1'].surfaces['top']
srf179 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-4-1'].surfaces['top']
srf180 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-5-1'].surfaces['top']
srf181 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-6-1'].surfaces['top']
srf182 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-7-1'].surfaces['top']
srf183 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-8-1'].surfaces['top']
srf184 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-9-1'].surfaces['top']
srf185 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-10-1'].surfaces['top']
srf186 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-11-1'].surfaces['top']
srf187 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2'].surfaces['top']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, srf2, srf3, srf4, srf5, 
    srf6, srf7, srf8, srf9, srf10, srf11, srf12, srf13, srf14, srf15, srf16, 
    srf17, srf18, srf19, srf20, srf21, srf22, srf23, srf24, srf25, srf26, 
    srf27, srf28, srf29, srf30, srf31, srf32, srf33, srf34, srf35, srf36, 
    srf37, srf38, srf39, srf40, srf41, srf42, srf43, srf44, srf45, srf46, 
    srf47, srf48, srf49, srf50, srf51, srf52, srf53, srf54, srf55, srf56, 
    srf57, srf58, srf59, srf60, srf61, srf62, srf63, srf64, srf65, srf66, 
    srf67, srf68, srf69, srf70, srf71, srf72, srf73, srf74, srf75, srf76, 
    srf77, srf78, srf79, srf80, srf81, srf82, srf83, srf84, srf85, srf86, 
    srf87, srf88, srf89, srf90, srf91, srf92, srf93, srf94, srf95, srf96, 
    srf97, srf98, srf99, srf100, srf101, srf102, srf103, srf104, srf105, 
    srf106, srf107, srf108, srf109, srf110, srf111, srf112, srf113, srf114, 
    srf115, srf116, srf117, srf118, srf119, srf120, srf121, srf122, srf123, 
    srf124, srf125, srf126, srf127, srf128, srf129, srf130, srf131, srf132, 
    srf133, srf134, srf135, srf136, srf137, srf138, srf139, srf140, srf141, 
    srf142, srf143, srf144, srf145, srf146, srf147, srf148, srf149, srf150, 
    srf151, srf152, srf153, srf154, srf155, srf156, srf157, srf158, srf159, 
    srf160, srf161, srf162, srf163, srf164, srf165, srf166, srf167, srf168, 
    srf169, srf170, srf171, srf172, srf173, srf174, srf175, srf176, srf177, 
    srf178, srf179, srf180, srf181, srf182, srf183, srf184, srf185, srf186, 
    srf187, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=37.0871, 
    farPlane=50.4959, width=13.0677, height=4.94993, cameraPosition=(44.2057, 
    26.5235, 22.0414), cameraTarget=(17.0803, -0.601848, -5.08398))
i1 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1']
leaf = dgm.LeafFromInstance(instances=(i1, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.add(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=31.2252, 
    farPlane=58.4611, width=20.0289, height=7.58676, cameraPosition=(42.6412, 
    27.2136, 22.9158), cameraTarget=(15.5158, 0.0882366, -4.2096))
p1 = mdb.models['Model-1'].parts['HalfBlock']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p = mdb.models['Model-1'].parts['HalfBlock']
s = p.faces
side1Faces = s.getSequenceFromMask(mask=('[#10 ]', ), )
p.Surface(side1Faces=side1Faces, name='Top')
#: The surface 'Top' has been created (1 face).
a1 = mdb.models['Model-1'].rootAssembly
a1.regenerate()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-2-1'].surfaces['top']
srf2 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-3-1'].surfaces['top']
srf3 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-4-1'].surfaces['top']
srf4 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-5-1'].surfaces['top']
srf5 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-6-1'].surfaces['top']
srf6 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-7-1'].surfaces['top']
srf7 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-8-1'].surfaces['top']
srf8 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-9-1'].surfaces['top']
srf9 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-10-1'].surfaces['top']
srf10 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-11-1'].surfaces['top']
srf11 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2'].surfaces['top']
srf12 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-2-1'].surfaces['top']
srf13 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-3-1'].surfaces['top']
srf14 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-4-1'].surfaces['top']
srf15 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-5-1'].surfaces['top']
srf16 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-6-1'].surfaces['top']
srf17 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-7-1'].surfaces['top']
srf18 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-8-1'].surfaces['top']
srf19 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-9-1'].surfaces['top']
srf20 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-10-1'].surfaces['top']
srf21 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-11-1'].surfaces['top']
srf22 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3'].surfaces['top']
srf23 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-2-1'].surfaces['top']
srf24 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-3-1'].surfaces['top']
srf25 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-4-1'].surfaces['top']
srf26 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-5-1'].surfaces['top']
srf27 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-6-1'].surfaces['top']
srf28 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-7-1'].surfaces['top']
srf29 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-8-1'].surfaces['top']
srf30 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-9-1'].surfaces['top']
srf31 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-10-1'].surfaces['top']
srf32 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-11-1'].surfaces['top']
srf33 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4'].surfaces['top']
srf34 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-2-1'].surfaces['top']
srf35 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-3-1'].surfaces['top']
srf36 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-4-1'].surfaces['top']
srf37 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-5-1'].surfaces['top']
srf38 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-6-1'].surfaces['top']
srf39 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-7-1'].surfaces['top']
srf40 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-8-1'].surfaces['top']
srf41 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-9-1'].surfaces['top']
srf42 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-10-1'].surfaces['top']
srf43 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-11-1'].surfaces['top']
srf44 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5'].surfaces['top']
srf45 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-2-1'].surfaces['top']
srf46 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-3-1'].surfaces['top']
srf47 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-4-1'].surfaces['top']
srf48 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-5-1'].surfaces['top']
srf49 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-6-1'].surfaces['top']
srf50 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-7-1'].surfaces['top']
srf51 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-8-1'].surfaces['top']
srf52 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-9-1'].surfaces['top']
srf53 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-10-1'].surfaces['top']
srf54 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-11-1'].surfaces['top']
srf55 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6'].surfaces['top']
srf56 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-2-1'].surfaces['top']
srf57 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-3-1'].surfaces['top']
srf58 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-4-1'].surfaces['top']
srf59 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-5-1'].surfaces['top']
srf60 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-6-1'].surfaces['top']
srf61 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-7-1'].surfaces['top']
srf62 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-8-1'].surfaces['top']
srf63 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-9-1'].surfaces['top']
srf64 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-10-1'].surfaces['top']
srf65 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-11-1'].surfaces['top']
srf66 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7'].surfaces['top']
srf67 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-1'].surfaces['top']
srf68 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].surfaces['top']
srf69 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].surfaces['top']
srf70 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].surfaces['top']
srf71 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].surfaces['top']
srf72 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].surfaces['top']
srf73 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].surfaces['top']
srf74 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].surfaces['top']
srf75 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].surfaces['top']
srf76 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].surfaces['top']
srf77 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].surfaces['top']
srf78 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].surfaces['top']
srf79 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].surfaces['top']
srf80 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].surfaces['top']
srf81 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].surfaces['top']
srf82 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].surfaces['top']
srf83 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].surfaces['top']
srf84 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].surfaces['top']
srf85 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].surfaces['top']
srf86 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].surfaces['top']
srf87 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].surfaces['top']
srf88 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].surfaces['top']
srf89 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].surfaces['top']
srf90 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].surfaces['top']
srf91 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].surfaces['top']
srf92 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].surfaces['top']
srf93 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].surfaces['top']
srf94 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].surfaces['top']
srf95 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].surfaces['top']
srf96 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].surfaces['top']
srf97 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].surfaces['top']
srf98 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].surfaces['top']
srf99 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].surfaces['top']
srf100 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].surfaces['top']
srf101 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].surfaces['top']
srf102 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].surfaces['top']
srf103 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].surfaces['top']
srf104 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].surfaces['top']
srf105 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].surfaces['top']
srf106 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].surfaces['top']
srf107 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].surfaces['top']
srf108 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].surfaces['top']
srf109 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].surfaces['top']
srf110 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].surfaces['top']
srf111 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].surfaces['top']
srf112 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].surfaces['top']
srf113 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].surfaces['top']
srf114 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].surfaces['top']
srf115 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].surfaces['top']
srf116 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].surfaces['top']
srf117 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].surfaces['top']
srf118 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].surfaces['top']
srf119 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].surfaces['top']
srf120 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].surfaces['top']
srf121 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].surfaces['top']
srf122 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].surfaces['top']
srf123 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].surfaces['top']
srf124 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].surfaces['top']
srf125 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].surfaces['top']
srf126 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].surfaces['top']
srf127 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].surfaces['top']
srf128 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].surfaces['top']
srf129 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].surfaces['top']
srf130 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].surfaces['top']
srf131 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].surfaces['top']
srf132 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-2'].surfaces['top']
srf133 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-3'].surfaces['top']
srf134 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-4'].surfaces['top']
srf135 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-5'].surfaces['top']
srf136 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-6'].surfaces['top']
srf137 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-7'].surfaces['top']
srf138 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-8'].surfaces['top']
srf139 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-9'].surfaces['top']
srf140 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-2-1'].surfaces['top']
srf141 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-3-1'].surfaces['top']
srf142 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-4-1'].surfaces['top']
srf143 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-5-1'].surfaces['top']
srf144 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-6-1'].surfaces['top']
srf145 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-7-1'].surfaces['top']
srf146 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-8-1'].surfaces['top']
srf147 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-9-1'].surfaces['top']
srf148 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-10-1'].surfaces['top']
srf149 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-11-1'].surfaces['top']
srf150 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].surfaces['top']
srf151 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].surfaces['top']
srf152 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].surfaces['top']
srf153 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].surfaces['top']
srf154 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].surfaces['top']
srf155 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].surfaces['top']
srf156 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].surfaces['top']
srf157 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].surfaces['top']
srf158 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].surfaces['top']
srf159 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].surfaces['top']
srf160 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].surfaces['top']
srf161 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].surfaces['top']
srf162 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].surfaces['top']
srf163 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].surfaces['top']
srf164 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].surfaces['top']
srf165 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].surfaces['top']
srf166 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1'].surfaces['top']
srf167 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-3-1'].surfaces['top']
srf168 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-4-1'].surfaces['top']
srf169 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-5-1'].surfaces['top']
srf170 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-6-1'].surfaces['top']
srf171 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-7-1'].surfaces['top']
srf172 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-8-1'].surfaces['top']
srf173 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-9-1'].surfaces['top']
srf174 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-10-1'].surfaces['top']
srf175 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-11-1'].surfaces['top']
srf176 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8'].surfaces['top']
srf177 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-2-1'].surfaces['top']
srf178 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-3-1'].surfaces['top']
srf179 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-4-1'].surfaces['top']
srf180 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-5-1'].surfaces['top']
srf181 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-6-1'].surfaces['top']
srf182 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-7-1'].surfaces['top']
srf183 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-8-1'].surfaces['top']
srf184 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-9-1'].surfaces['top']
srf185 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-10-1'].surfaces['top']
srf186 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-11-1'].surfaces['top']
srf187 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2'].surfaces['top']
srf188 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1'].surfaces['Surf-2']
srf189 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-2-1'].surfaces['Top']
srf190 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-3-1'].surfaces['Top']
srf191 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-4-1'].surfaces['Top']
srf192 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-5-1'].surfaces['Top']
srf193 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-6-1'].surfaces['Top']
srf194 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-7-1'].surfaces['Top']
srf195 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-8-1'].surfaces['Top']
srf196 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-9-1'].surfaces['Top']
srf197 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-10-1'].surfaces['Top']
srf198 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-11-1'].surfaces['Top']
srf199 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2'].surfaces['Top']
srf200 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-2-1'].surfaces['Top']
srf201 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-3-1'].surfaces['Top']
srf202 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-4-1'].surfaces['Top']
srf203 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-5-1'].surfaces['Top']
srf204 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-6-1'].surfaces['Top']
srf205 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-7-1'].surfaces['Top']
srf206 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-8-1'].surfaces['Top']
srf207 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-9-1'].surfaces['Top']
srf208 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-10-1'].surfaces['Top']
srf209 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-11-1'].surfaces['Top']
srf210 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1'].surfaces['Top']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, srf2, srf3, srf4, srf5, 
    srf6, srf7, srf8, srf9, srf10, srf11, srf12, srf13, srf14, srf15, srf16, 
    srf17, srf18, srf19, srf20, srf21, srf22, srf23, srf24, srf25, srf26, 
    srf27, srf28, srf29, srf30, srf31, srf32, srf33, srf34, srf35, srf36, 
    srf37, srf38, srf39, srf40, srf41, srf42, srf43, srf44, srf45, srf46, 
    srf47, srf48, srf49, srf50, srf51, srf52, srf53, srf54, srf55, srf56, 
    srf57, srf58, srf59, srf60, srf61, srf62, srf63, srf64, srf65, srf66, 
    srf67, srf68, srf69, srf70, srf71, srf72, srf73, srf74, srf75, srf76, 
    srf77, srf78, srf79, srf80, srf81, srf82, srf83, srf84, srf85, srf86, 
    srf87, srf88, srf89, srf90, srf91, srf92, srf93, srf94, srf95, srf96, 
    srf97, srf98, srf99, srf100, srf101, srf102, srf103, srf104, srf105, 
    srf106, srf107, srf108, srf109, srf110, srf111, srf112, srf113, srf114, 
    srf115, srf116, srf117, srf118, srf119, srf120, srf121, srf122, srf123, 
    srf124, srf125, srf126, srf127, srf128, srf129, srf130, srf131, srf132, 
    srf133, srf134, srf135, srf136, srf137, srf138, srf139, srf140, srf141, 
    srf142, srf143, srf144, srf145, srf146, srf147, srf148, srf149, srf150, 
    srf151, srf152, srf153, srf154, srf155, srf156, srf157, srf158, srf159, 
    srf160, srf161, srf162, srf163, srf164, srf165, srf166, srf167, srf168, 
    srf169, srf170, srf171, srf172, srf173, srf174, srf175, srf176, srf177, 
    srf178, srf179, srf180, srf181, srf182, srf183, srf184, srf185, srf186, 
    srf187, srf188, srf189, srf190, srf191, srf192, srf193, srf194, srf195, 
    srf196, srf197, srf198, srf199, srf200, srf201, srf202, srf203, srf204, 
    srf205, srf206, srf207, srf208, srf209, srf210, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.add(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=30.8819, 
    farPlane=58.8044, width=23.4449, height=8.88071, cameraPosition=(42.6652, 
    26.3348, 23.7706), cameraTarget=(15.5398, -0.790584, -3.3548))
p1 = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.03493, 
    farPlane=2.00122, width=1.28104, height=0.485247, cameraPosition=(1.27736, 
    1.11472, -0.633199), cameraUpVector=(-0.671633, 0.57735, 0.464302), 
    cameraTarget=(0.264038, 0.243649, 0.0673129))
p = mdb.models['Model-1'].parts['Block']
s = p.faces
side1Faces = s.getSequenceFromMask(mask=('[#20 ]', ), )
p.Surface(side1Faces=side1Faces, name='bot')
#: The surface 'bot' has been created (1 face).
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.12151, 
    farPlane=1.90513, width=1.38821, height=0.525842, cameraPosition=(-1.0848, 
    0.165767, -0.633199), cameraUpVector=(0.179979, -0.867198, 0.464302), 
    cameraTarget=(0.249519, 0.237816, 0.0673129))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.12306, 
    farPlane=1.90268, width=1.39013, height=0.526569, cameraPosition=(-1.0848, 
    0.224905, -0.636784), cameraUpVector=(0.179979, -0.903058, 0.389994), 
    cameraTarget=(0.249519, 0.237995, 0.0673021))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.12199, 
    farPlane=1.90372, width=1.3888, height=0.526066, cameraPosition=(-1.0848, 
    0.22666, -0.636784), cameraTarget=(0.249519, 0.23975, 0.0673021))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.12392, 
    farPlane=1.90568, width=1.3912, height=0.526973, cameraPosition=(-1.08709, 
    0.235267, -0.636784), cameraTarget=(0.247229, 0.248357, 0.0673021))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.12367, 
    farPlane=1.90584, width=1.39089, height=0.526856, cameraPosition=(-1.08709, 
    0.241014, -0.636784), cameraTarget=(0.247229, 0.254104, 0.0673021))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.04179, 
    farPlane=1.98503, width=1.28953, height=0.488463, cameraPosition=(
    -0.746991, -0.560792, -0.724422), cameraUpVector=(0.656052, -0.613551, 
    0.43949), cameraTarget=(0.248578, 0.250924, 0.0669545))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.05135, 
    farPlane=1.96757, width=1.30137, height=0.492946, cameraPosition=(1.20348, 
    -0.560792, 0.91879), cameraUpVector=(-0.629966, -0.613551, -0.476129), 
    cameraTarget=(0.254585, 0.250924, 0.0720155))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.05597, 
    farPlane=1.95431, width=1.30709, height=0.495113, cameraPosition=(
    -0.826467, 0.878244, 0.91879), cameraUpVector=(0.508563, 0.717402, 
    -0.476129), cameraTarget=(0.253628, 0.251603, 0.0720155))
p = mdb.models['Model-1'].parts['Block']
s = p.faces
side1Faces = s.getSequenceFromMask(mask=('[#f ]', ), )
p.Surface(side1Faces=side1Faces, name='side')
#: The surface 'side' has been created (4 faces).
p1 = mdb.models['Model-1'].parts['HalfBlock']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.812593, 
    farPlane=1.58168, width=1.09248, height=0.41382, cameraPosition=(21.8213, 
    25.4459, 0.743793), cameraTarget=(21.1287, 24.7534, 0.0512288))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.843706, 
    farPlane=1.59976, width=1.13431, height=0.429665, cameraPosition=(21.9608, 
    25.4459, -0.462603), cameraUpVector=(-0.693882, 0.57735, 0.430343), 
    cameraTarget=(21.1284, 24.7534, 0.0536537))
p = mdb.models['Model-1'].parts['HalfBlock']
s = p.faces
side1Faces = s.getSequenceFromMask(mask=('[#20 ]', ), )
p.Surface(side1Faces=side1Faces, name='bot')
#: The surface 'bot' has been created (1 face).
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
a1 = mdb.models['Model-1'].rootAssembly
a1.regenerate()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(nearPlane=28.9696, 
    farPlane=60.7167, width=42.9163, height=16.2563, cameraPosition=(42.7303, 
    28.102, 21.9383), cameraTarget=(15.6049, 0.976615, -5.18704))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Loading')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
session.viewports['Viewport: 1'].view.setValues(nearPlane=32.4481, 
    farPlane=57.2382, width=8.1111, height=3.07241, cameraPosition=(44.4905, 
    26.5237, 21.7563), cameraTarget=(17.3652, -0.601658, -5.36907))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON, 
    adaptiveMeshConstraints=OFF)
session.viewports['Viewport: 1'].view.setValues(nearPlane=32.6171, 
    farPlane=57.0691, cameraPosition=(44.4905, 26.5237, 21.7563), 
    cameraTarget=(17.3652, -0.601658, -5.36907))
mdb.models['Model-1'].ContactProperty('BLOCK-FILTER')
mdb.models['Model-1'].interactionProperties['BLOCK-FILTER'].TangentialBehavior(
    formulation=PENALTY, directionality=ISOTROPIC, slipRateDependency=OFF, 
    pressureDependency=OFF, temperatureDependency=OFF, dependencies=0, table=((
    0.6, ), ), shearStressLimit=None, maximumElasticSlip=FRACTION, 
    fraction=0.005, elasticSlipStiffness=None)
mdb.models['Model-1'].interactionProperties['BLOCK-FILTER'].NormalBehavior(
    pressureOverclosure=HARD, allowSeparation=ON, 
    constraintEnforcementMethod=DEFAULT)
#: The interaction property "BLOCK-FILTER" has been created.
mdb.models['Model-1'].interactionProperties['IntProp-1'].normalBehavior.setValues(
    pressureOverclosure=HARD, allowSeparation=ON, 
    constraintEnforcementMethod=DEFAULT)
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    formulation=PENALTY, directionality=ISOTROPIC, slipRateDependency=OFF, 
    pressureDependency=OFF, temperatureDependency=OFF, dependencies=0, table=((
    0.85, ), ), shearStressLimit=None, maximumElasticSlip=FRACTION, 
    fraction=0.005, elasticSlipStiffness=None)
session.viewports['Viewport: 1'].view.setValues(nearPlane=125.874, 
    farPlane=162.703, width=89.8814, height=31.6554, cameraPosition=(115.911, 
    89.6853, 59.4188), cameraTarget=(31.3708, 5.14506, -25.1214))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, interactions=OFF, constraints=OFF, 
    engineeringFeatures=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Loading')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, interactions=ON, constraints=ON, 
    engineeringFeatures=ON)
p1 = mdb.models['Model-1'].parts['Wall']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-1'].parts['DikeRigid']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-1'].parts['Wall']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p = mdb.models['Model-1'].parts['Wall']
s = p.faces
side2Faces = s.getSequenceFromMask(mask=('[#f ]', ), )
p.Surface(side2Faces=side2Faces, name='Surf-Wall')
#: The surface 'Surf-Wall' has been created (4 faces).
a = mdb.models['Model-1'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(nearPlane=130.476, 
    farPlane=158.101, width=30.3811, height=10.6999, cameraPosition=(102.684, 
    86.3643, 75.9669), cameraTarget=(18.1435, 1.82411, -8.57324))
leaf = dgm.Leaf(leafType=ALL_SURFACES)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.add(leaf=leaf)
leaf = dgm.Leaf(leafType=ALL_SURFACES)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.add(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=131.61, 
    farPlane=156.967, width=15.0743, height=5.30902, cameraPosition=(100.299, 
    85.6532, 79.0628), cameraTarget=(15.7589, 1.11297, -5.47743))
leaf = dgm.Leaf(leafType=DEFAULT_MODEL)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.add(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=127.337, 
    farPlane=161.24, width=36.8724, height=12.9861, cameraPosition=(101.733, 
    86.4265, 76.8557), cameraTarget=(17.1927, 1.88629, -7.68455))
i1 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1']
i2 = mdb.models['Model-1'].rootAssembly.allInstances['Wall-1']
i3 = mdb.models['Model-1'].rootAssembly.allInstances['Wall-1-lin-1-2']
leaf = dgm.LeafFromInstance(instances=(i1, i2, i3, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
i1 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1']
leaf = dgm.LeafFromInstance(instances=(i1, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.add(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=129.809, 
    farPlane=158.768, width=7.46112, height=2.62774, cameraPosition=(95.2234, 
    88.1998, 81.5919), cameraTarget=(10.6831, 3.65959, -2.94834))
session.viewports['Viewport: 1'].view.setValues(nearPlane=127.994, 
    farPlane=160.583, width=31.6032, height=11.1304, cameraPosition=(101.389, 
    86.1759, 77.4497), cameraTarget=(16.8493, 1.63563, -7.09051))
p1 = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['Model-1'].parts['Block'].surfaces['top']
del mdb.models['Model-1'].parts['Block'].surfaces['side']
p = mdb.models['Model-1'].parts['HalfBlock']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.787777, 
    farPlane=1.61133, width=2.01538, height=0.7098, viewOffsetX=0.319904, 
    viewOffsetY=-0.100328)
del mdb.models['Model-1'].parts['HalfBlock'].surfaces['Top']
a1 = mdb.models['Model-1'].rootAssembly
a1.regenerate()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=OFF, 
    constraints=OFF, connectors=OFF, engineeringFeatures=OFF)
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-2-1'].surfaces['bot']
srf2 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-3-1'].surfaces['bot']
srf3 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-4-1'].surfaces['bot']
srf4 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-5-1'].surfaces['bot']
srf5 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-6-1'].surfaces['bot']
srf6 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-7-1'].surfaces['bot']
srf7 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-8-1'].surfaces['bot']
srf8 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-9-1'].surfaces['bot']
srf9 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-10-1'].surfaces['bot']
srf10 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-11-1'].surfaces['bot']
srf11 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2'].surfaces['bot']
srf12 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-2-1'].surfaces['bot']
srf13 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-3-1'].surfaces['bot']
srf14 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-4-1'].surfaces['bot']
srf15 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-5-1'].surfaces['bot']
srf16 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-6-1'].surfaces['bot']
srf17 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-7-1'].surfaces['bot']
srf18 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-8-1'].surfaces['bot']
srf19 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-9-1'].surfaces['bot']
srf20 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-10-1'].surfaces['bot']
srf21 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-11-1'].surfaces['bot']
srf22 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3'].surfaces['bot']
srf23 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-2-1'].surfaces['bot']
srf24 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-3-1'].surfaces['bot']
srf25 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-4-1'].surfaces['bot']
srf26 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-5-1'].surfaces['bot']
srf27 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-6-1'].surfaces['bot']
srf28 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-7-1'].surfaces['bot']
srf29 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-8-1'].surfaces['bot']
srf30 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-9-1'].surfaces['bot']
srf31 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-10-1'].surfaces['bot']
srf32 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-11-1'].surfaces['bot']
srf33 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4'].surfaces['bot']
srf34 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-2-1'].surfaces['bot']
srf35 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-3-1'].surfaces['bot']
srf36 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-4-1'].surfaces['bot']
srf37 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-5-1'].surfaces['bot']
srf38 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-6-1'].surfaces['bot']
srf39 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-7-1'].surfaces['bot']
srf40 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-8-1'].surfaces['bot']
srf41 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-9-1'].surfaces['bot']
srf42 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-10-1'].surfaces['bot']
srf43 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-11-1'].surfaces['bot']
srf44 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5'].surfaces['bot']
srf45 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-2-1'].surfaces['bot']
srf46 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-3-1'].surfaces['bot']
srf47 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-4-1'].surfaces['bot']
srf48 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-5-1'].surfaces['bot']
srf49 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-6-1'].surfaces['bot']
srf50 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-7-1'].surfaces['bot']
srf51 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-8-1'].surfaces['bot']
srf52 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-9-1'].surfaces['bot']
srf53 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-10-1'].surfaces['bot']
srf54 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-11-1'].surfaces['bot']
srf55 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6'].surfaces['bot']
srf56 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-2-1'].surfaces['bot']
srf57 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-3-1'].surfaces['bot']
srf58 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-4-1'].surfaces['bot']
srf59 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-5-1'].surfaces['bot']
srf60 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-6-1'].surfaces['bot']
srf61 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-7-1'].surfaces['bot']
srf62 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-8-1'].surfaces['bot']
srf63 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-9-1'].surfaces['bot']
srf64 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-10-1'].surfaces['bot']
srf65 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-11-1'].surfaces['bot']
srf66 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7'].surfaces['bot']
srf67 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-1'].surfaces['bot']
srf68 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].surfaces['bot']
srf69 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].surfaces['bot']
srf70 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].surfaces['bot']
srf71 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].surfaces['bot']
srf72 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].surfaces['bot']
srf73 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].surfaces['bot']
srf74 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].surfaces['bot']
srf75 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].surfaces['bot']
srf76 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].surfaces['bot']
srf77 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].surfaces['bot']
srf78 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].surfaces['bot']
srf79 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].surfaces['bot']
srf80 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].surfaces['bot']
srf81 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].surfaces['bot']
srf82 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].surfaces['bot']
srf83 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].surfaces['bot']
srf84 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].surfaces['bot']
srf85 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].surfaces['bot']
srf86 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].surfaces['bot']
srf87 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].surfaces['bot']
srf88 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].surfaces['bot']
srf89 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].surfaces['bot']
srf90 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].surfaces['bot']
srf91 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].surfaces['bot']
srf92 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].surfaces['bot']
srf93 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].surfaces['bot']
srf94 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].surfaces['bot']
srf95 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].surfaces['bot']
srf96 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].surfaces['bot']
srf97 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].surfaces['bot']
srf98 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].surfaces['bot']
srf99 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].surfaces['bot']
srf100 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].surfaces['bot']
srf101 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].surfaces['bot']
srf102 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].surfaces['bot']
srf103 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].surfaces['bot']
srf104 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].surfaces['bot']
srf105 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].surfaces['bot']
srf106 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].surfaces['bot']
srf107 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].surfaces['bot']
srf108 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].surfaces['bot']
srf109 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].surfaces['bot']
srf110 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].surfaces['bot']
srf111 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].surfaces['bot']
srf112 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].surfaces['bot']
srf113 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].surfaces['bot']
srf114 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].surfaces['bot']
srf115 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].surfaces['bot']
srf116 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].surfaces['bot']
srf117 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].surfaces['bot']
srf118 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].surfaces['bot']
srf119 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].surfaces['bot']
srf120 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].surfaces['bot']
srf121 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].surfaces['bot']
srf122 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].surfaces['bot']
srf123 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].surfaces['bot']
srf124 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].surfaces['bot']
srf125 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].surfaces['bot']
srf126 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].surfaces['bot']
srf127 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].surfaces['bot']
srf128 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].surfaces['bot']
srf129 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].surfaces['bot']
srf130 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].surfaces['bot']
srf131 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].surfaces['bot']
srf132 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-2'].surfaces['bot']
srf133 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-3'].surfaces['bot']
srf134 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-4'].surfaces['bot']
srf135 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-5'].surfaces['bot']
srf136 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-6'].surfaces['bot']
srf137 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-7'].surfaces['bot']
srf138 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-8'].surfaces['bot']
srf139 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-9'].surfaces['bot']
srf140 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-2-1'].surfaces['bot']
srf141 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-3-1'].surfaces['bot']
srf142 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-4-1'].surfaces['bot']
srf143 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-5-1'].surfaces['bot']
srf144 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-6-1'].surfaces['bot']
srf145 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-7-1'].surfaces['bot']
srf146 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-8-1'].surfaces['bot']
srf147 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-9-1'].surfaces['bot']
srf148 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-10-1'].surfaces['bot']
srf149 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-11-1'].surfaces['bot']
srf150 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].surfaces['bot']
srf151 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].surfaces['bot']
srf152 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].surfaces['bot']
srf153 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].surfaces['bot']
srf154 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].surfaces['bot']
srf155 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].surfaces['bot']
srf156 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].surfaces['bot']
srf157 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].surfaces['bot']
srf158 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].surfaces['bot']
srf159 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].surfaces['bot']
srf160 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].surfaces['bot']
srf161 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].surfaces['bot']
srf162 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].surfaces['bot']
srf163 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].surfaces['bot']
srf164 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].surfaces['bot']
srf165 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].surfaces['bot']
srf166 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1'].surfaces['bot']
srf167 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-3-1'].surfaces['bot']
srf168 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-4-1'].surfaces['bot']
srf169 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-5-1'].surfaces['bot']
srf170 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-6-1'].surfaces['bot']
srf171 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-7-1'].surfaces['bot']
srf172 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-8-1'].surfaces['bot']
srf173 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-9-1'].surfaces['bot']
srf174 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-10-1'].surfaces['bot']
srf175 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-11-1'].surfaces['bot']
srf176 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8'].surfaces['bot']
srf177 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-2-1'].surfaces['bot']
srf178 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-3-1'].surfaces['bot']
srf179 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-4-1'].surfaces['bot']
srf180 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-5-1'].surfaces['bot']
srf181 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-6-1'].surfaces['bot']
srf182 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-7-1'].surfaces['bot']
srf183 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-8-1'].surfaces['bot']
srf184 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-9-1'].surfaces['bot']
srf185 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-10-1'].surfaces['bot']
srf186 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-11-1'].surfaces['bot']
srf187 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2'].surfaces['bot']
srf188 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1'].surfaces['Surf-2']
srf189 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-2-1'].surfaces['bot']
srf190 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-3-1'].surfaces['bot']
srf191 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-4-1'].surfaces['bot']
srf192 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-5-1'].surfaces['bot']
srf193 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-6-1'].surfaces['bot']
srf194 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-7-1'].surfaces['bot']
srf195 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-8-1'].surfaces['bot']
srf196 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-9-1'].surfaces['bot']
srf197 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-10-1'].surfaces['bot']
srf198 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-11-1'].surfaces['bot']
srf199 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2'].surfaces['bot']
srf200 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-2-1'].surfaces['bot']
srf201 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-3-1'].surfaces['bot']
srf202 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-4-1'].surfaces['bot']
srf203 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-5-1'].surfaces['bot']
srf204 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-6-1'].surfaces['bot']
srf205 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-7-1'].surfaces['bot']
srf206 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-8-1'].surfaces['bot']
srf207 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-9-1'].surfaces['bot']
srf208 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-10-1'].surfaces['bot']
srf209 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-11-1'].surfaces['bot']
srf210 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1'].surfaces['bot']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, srf2, srf3, srf4, srf5, 
    srf6, srf7, srf8, srf9, srf10, srf11, srf12, srf13, srf14, srf15, srf16, 
    srf17, srf18, srf19, srf20, srf21, srf22, srf23, srf24, srf25, srf26, 
    srf27, srf28, srf29, srf30, srf31, srf32, srf33, srf34, srf35, srf36, 
    srf37, srf38, srf39, srf40, srf41, srf42, srf43, srf44, srf45, srf46, 
    srf47, srf48, srf49, srf50, srf51, srf52, srf53, srf54, srf55, srf56, 
    srf57, srf58, srf59, srf60, srf61, srf62, srf63, srf64, srf65, srf66, 
    srf67, srf68, srf69, srf70, srf71, srf72, srf73, srf74, srf75, srf76, 
    srf77, srf78, srf79, srf80, srf81, srf82, srf83, srf84, srf85, srf86, 
    srf87, srf88, srf89, srf90, srf91, srf92, srf93, srf94, srf95, srf96, 
    srf97, srf98, srf99, srf100, srf101, srf102, srf103, srf104, srf105, 
    srf106, srf107, srf108, srf109, srf110, srf111, srf112, srf113, srf114, 
    srf115, srf116, srf117, srf118, srf119, srf120, srf121, srf122, srf123, 
    srf124, srf125, srf126, srf127, srf128, srf129, srf130, srf131, srf132, 
    srf133, srf134, srf135, srf136, srf137, srf138, srf139, srf140, srf141, 
    srf142, srf143, srf144, srf145, srf146, srf147, srf148, srf149, srf150, 
    srf151, srf152, srf153, srf154, srf155, srf156, srf157, srf158, srf159, 
    srf160, srf161, srf162, srf163, srf164, srf165, srf166, srf167, srf168, 
    srf169, srf170, srf171, srf172, srf173, srf174, srf175, srf176, srf177, 
    srf178, srf179, srf180, srf181, srf182, srf183, srf184, srf185, srf186, 
    srf187, srf188, srf189, srf190, srf191, srf192, srf193, srf194, srf195, 
    srf196, srf197, srf198, srf199, srf200, srf201, srf202, srf203, srf204, 
    srf205, srf206, srf207, srf208, srf209, srf210, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-2-1'].surfaces['bot']
srf2 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-3-1'].surfaces['bot']
srf3 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-4-1'].surfaces['bot']
srf4 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-5-1'].surfaces['bot']
srf5 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-6-1'].surfaces['bot']
srf6 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-7-1'].surfaces['bot']
srf7 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-8-1'].surfaces['bot']
srf8 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-9-1'].surfaces['bot']
srf9 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-10-1'].surfaces['bot']
srf10 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-11-1'].surfaces['bot']
srf11 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2'].surfaces['bot']
srf12 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-2-1'].surfaces['bot']
srf13 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-3-1'].surfaces['bot']
srf14 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-4-1'].surfaces['bot']
srf15 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-5-1'].surfaces['bot']
srf16 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-6-1'].surfaces['bot']
srf17 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-7-1'].surfaces['bot']
srf18 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-8-1'].surfaces['bot']
srf19 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-9-1'].surfaces['bot']
srf20 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-10-1'].surfaces['bot']
srf21 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-11-1'].surfaces['bot']
srf22 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3'].surfaces['bot']
srf23 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-2-1'].surfaces['bot']
srf24 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-3-1'].surfaces['bot']
srf25 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-4-1'].surfaces['bot']
srf26 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-5-1'].surfaces['bot']
srf27 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-6-1'].surfaces['bot']
srf28 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-7-1'].surfaces['bot']
srf29 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-8-1'].surfaces['bot']
srf30 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-9-1'].surfaces['bot']
srf31 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-10-1'].surfaces['bot']
srf32 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-11-1'].surfaces['bot']
srf33 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4'].surfaces['bot']
srf34 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-2-1'].surfaces['bot']
srf35 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-3-1'].surfaces['bot']
srf36 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-4-1'].surfaces['bot']
srf37 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-5-1'].surfaces['bot']
srf38 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-6-1'].surfaces['bot']
srf39 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-7-1'].surfaces['bot']
srf40 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-8-1'].surfaces['bot']
srf41 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-9-1'].surfaces['bot']
srf42 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-10-1'].surfaces['bot']
srf43 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-11-1'].surfaces['bot']
srf44 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5'].surfaces['bot']
srf45 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-2-1'].surfaces['bot']
srf46 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-3-1'].surfaces['bot']
srf47 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-4-1'].surfaces['bot']
srf48 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-5-1'].surfaces['bot']
srf49 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-6-1'].surfaces['bot']
srf50 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-7-1'].surfaces['bot']
srf51 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-8-1'].surfaces['bot']
srf52 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-9-1'].surfaces['bot']
srf53 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-10-1'].surfaces['bot']
srf54 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-11-1'].surfaces['bot']
srf55 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6'].surfaces['bot']
srf56 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-2-1'].surfaces['bot']
srf57 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-3-1'].surfaces['bot']
srf58 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-4-1'].surfaces['bot']
srf59 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-5-1'].surfaces['bot']
srf60 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-6-1'].surfaces['bot']
srf61 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-7-1'].surfaces['bot']
srf62 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-8-1'].surfaces['bot']
srf63 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-9-1'].surfaces['bot']
srf64 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-10-1'].surfaces['bot']
srf65 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-11-1'].surfaces['bot']
srf66 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7'].surfaces['bot']
srf67 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-1'].surfaces['bot']
srf68 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].surfaces['bot']
srf69 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].surfaces['bot']
srf70 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].surfaces['bot']
srf71 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].surfaces['bot']
srf72 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].surfaces['bot']
srf73 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].surfaces['bot']
srf74 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].surfaces['bot']
srf75 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].surfaces['bot']
srf76 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].surfaces['bot']
srf77 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].surfaces['bot']
srf78 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].surfaces['bot']
srf79 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].surfaces['bot']
srf80 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].surfaces['bot']
srf81 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].surfaces['bot']
srf82 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].surfaces['bot']
srf83 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].surfaces['bot']
srf84 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].surfaces['bot']
srf85 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].surfaces['bot']
srf86 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].surfaces['bot']
srf87 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].surfaces['bot']
srf88 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].surfaces['bot']
srf89 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].surfaces['bot']
srf90 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].surfaces['bot']
srf91 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].surfaces['bot']
srf92 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].surfaces['bot']
srf93 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].surfaces['bot']
srf94 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].surfaces['bot']
srf95 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].surfaces['bot']
srf96 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].surfaces['bot']
srf97 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].surfaces['bot']
srf98 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].surfaces['bot']
srf99 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].surfaces['bot']
srf100 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].surfaces['bot']
srf101 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].surfaces['bot']
srf102 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].surfaces['bot']
srf103 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].surfaces['bot']
srf104 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].surfaces['bot']
srf105 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].surfaces['bot']
srf106 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].surfaces['bot']
srf107 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].surfaces['bot']
srf108 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].surfaces['bot']
srf109 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].surfaces['bot']
srf110 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].surfaces['bot']
srf111 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].surfaces['bot']
srf112 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].surfaces['bot']
srf113 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].surfaces['bot']
srf114 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].surfaces['bot']
srf115 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].surfaces['bot']
srf116 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].surfaces['bot']
srf117 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].surfaces['bot']
srf118 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].surfaces['bot']
srf119 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].surfaces['bot']
srf120 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].surfaces['bot']
srf121 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].surfaces['bot']
srf122 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].surfaces['bot']
srf123 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].surfaces['bot']
srf124 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].surfaces['bot']
srf125 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].surfaces['bot']
srf126 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].surfaces['bot']
srf127 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].surfaces['bot']
srf128 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].surfaces['bot']
srf129 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].surfaces['bot']
srf130 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].surfaces['bot']
srf131 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].surfaces['bot']
srf132 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-2'].surfaces['bot']
srf133 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-3'].surfaces['bot']
srf134 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-4'].surfaces['bot']
srf135 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-5'].surfaces['bot']
srf136 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-6'].surfaces['bot']
srf137 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-7'].surfaces['bot']
srf138 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-8'].surfaces['bot']
srf139 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-9'].surfaces['bot']
srf140 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-2-1'].surfaces['bot']
srf141 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-3-1'].surfaces['bot']
srf142 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-4-1'].surfaces['bot']
srf143 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-5-1'].surfaces['bot']
srf144 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-6-1'].surfaces['bot']
srf145 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-7-1'].surfaces['bot']
srf146 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-8-1'].surfaces['bot']
srf147 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-9-1'].surfaces['bot']
srf148 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-10-1'].surfaces['bot']
srf149 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-11-1'].surfaces['bot']
srf150 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].surfaces['bot']
srf151 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].surfaces['bot']
srf152 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].surfaces['bot']
srf153 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].surfaces['bot']
srf154 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].surfaces['bot']
srf155 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].surfaces['bot']
srf156 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].surfaces['bot']
srf157 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].surfaces['bot']
srf158 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].surfaces['bot']
srf159 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].surfaces['bot']
srf160 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].surfaces['bot']
srf161 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].surfaces['bot']
srf162 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].surfaces['bot']
srf163 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].surfaces['bot']
srf164 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].surfaces['bot']
srf165 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].surfaces['bot']
srf166 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1'].surfaces['bot']
srf167 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-3-1'].surfaces['bot']
srf168 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-4-1'].surfaces['bot']
srf169 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-5-1'].surfaces['bot']
srf170 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-6-1'].surfaces['bot']
srf171 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-7-1'].surfaces['bot']
srf172 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-8-1'].surfaces['bot']
srf173 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-9-1'].surfaces['bot']
srf174 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-10-1'].surfaces['bot']
srf175 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-11-1'].surfaces['bot']
srf176 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8'].surfaces['bot']
srf177 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-2-1'].surfaces['bot']
srf178 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-3-1'].surfaces['bot']
srf179 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-4-1'].surfaces['bot']
srf180 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-5-1'].surfaces['bot']
srf181 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-6-1'].surfaces['bot']
srf182 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-7-1'].surfaces['bot']
srf183 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-8-1'].surfaces['bot']
srf184 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-9-1'].surfaces['bot']
srf185 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-10-1'].surfaces['bot']
srf186 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-11-1'].surfaces['bot']
srf187 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2'].surfaces['bot']
srf188 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1'].surfaces['Surf-2']
srf189 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-2-1'].surfaces['bot']
srf190 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-3-1'].surfaces['bot']
srf191 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-4-1'].surfaces['bot']
srf192 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-5-1'].surfaces['bot']
srf193 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-6-1'].surfaces['bot']
srf194 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-7-1'].surfaces['bot']
srf195 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-8-1'].surfaces['bot']
srf196 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-9-1'].surfaces['bot']
srf197 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-10-1'].surfaces['bot']
srf198 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-11-1'].surfaces['bot']
srf199 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2'].surfaces['bot']
srf200 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-2-1'].surfaces['bot']
srf201 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-3-1'].surfaces['bot']
srf202 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-4-1'].surfaces['bot']
srf203 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-5-1'].surfaces['bot']
srf204 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-6-1'].surfaces['bot']
srf205 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-7-1'].surfaces['bot']
srf206 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-8-1'].surfaces['bot']
srf207 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-9-1'].surfaces['bot']
srf208 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-10-1'].surfaces['bot']
srf209 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-11-1'].surfaces['bot']
srf210 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1'].surfaces['bot']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, srf2, srf3, srf4, srf5, 
    srf6, srf7, srf8, srf9, srf10, srf11, srf12, srf13, srf14, srf15, srf16, 
    srf17, srf18, srf19, srf20, srf21, srf22, srf23, srf24, srf25, srf26, 
    srf27, srf28, srf29, srf30, srf31, srf32, srf33, srf34, srf35, srf36, 
    srf37, srf38, srf39, srf40, srf41, srf42, srf43, srf44, srf45, srf46, 
    srf47, srf48, srf49, srf50, srf51, srf52, srf53, srf54, srf55, srf56, 
    srf57, srf58, srf59, srf60, srf61, srf62, srf63, srf64, srf65, srf66, 
    srf67, srf68, srf69, srf70, srf71, srf72, srf73, srf74, srf75, srf76, 
    srf77, srf78, srf79, srf80, srf81, srf82, srf83, srf84, srf85, srf86, 
    srf87, srf88, srf89, srf90, srf91, srf92, srf93, srf94, srf95, srf96, 
    srf97, srf98, srf99, srf100, srf101, srf102, srf103, srf104, srf105, 
    srf106, srf107, srf108, srf109, srf110, srf111, srf112, srf113, srf114, 
    srf115, srf116, srf117, srf118, srf119, srf120, srf121, srf122, srf123, 
    srf124, srf125, srf126, srf127, srf128, srf129, srf130, srf131, srf132, 
    srf133, srf134, srf135, srf136, srf137, srf138, srf139, srf140, srf141, 
    srf142, srf143, srf144, srf145, srf146, srf147, srf148, srf149, srf150, 
    srf151, srf152, srf153, srf154, srf155, srf156, srf157, srf158, srf159, 
    srf160, srf161, srf162, srf163, srf164, srf165, srf166, srf167, srf168, 
    srf169, srf170, srf171, srf172, srf173, srf174, srf175, srf176, srf177, 
    srf178, srf179, srf180, srf181, srf182, srf183, srf184, srf185, srf186, 
    srf187, srf188, srf189, srf190, srf191, srf192, srf193, srf194, srf195, 
    srf196, srf197, srf198, srf199, srf200, srf201, srf202, srf203, srf204, 
    srf205, srf206, srf207, srf208, srf209, srf210, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.intersect(
    leaf=leaf)
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-2-1'].surfaces['bot']
srf2 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-3-1'].surfaces['bot']
srf3 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-4-1'].surfaces['bot']
srf4 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-5-1'].surfaces['bot']
srf5 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-6-1'].surfaces['bot']
srf6 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-7-1'].surfaces['bot']
srf7 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-8-1'].surfaces['bot']
srf8 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-9-1'].surfaces['bot']
srf9 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-10-1'].surfaces['bot']
srf10 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-11-1'].surfaces['bot']
srf11 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2'].surfaces['bot']
srf12 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-2-1'].surfaces['bot']
srf13 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-3-1'].surfaces['bot']
srf14 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-4-1'].surfaces['bot']
srf15 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-5-1'].surfaces['bot']
srf16 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-6-1'].surfaces['bot']
srf17 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-7-1'].surfaces['bot']
srf18 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-8-1'].surfaces['bot']
srf19 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-9-1'].surfaces['bot']
srf20 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-10-1'].surfaces['bot']
srf21 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-11-1'].surfaces['bot']
srf22 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3'].surfaces['bot']
srf23 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-2-1'].surfaces['bot']
srf24 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-3-1'].surfaces['bot']
srf25 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-4-1'].surfaces['bot']
srf26 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-5-1'].surfaces['bot']
srf27 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-6-1'].surfaces['bot']
srf28 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-7-1'].surfaces['bot']
srf29 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-8-1'].surfaces['bot']
srf30 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-9-1'].surfaces['bot']
srf31 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-10-1'].surfaces['bot']
srf32 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-11-1'].surfaces['bot']
srf33 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4'].surfaces['bot']
srf34 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-2-1'].surfaces['bot']
srf35 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-3-1'].surfaces['bot']
srf36 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-4-1'].surfaces['bot']
srf37 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-5-1'].surfaces['bot']
srf38 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-6-1'].surfaces['bot']
srf39 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-7-1'].surfaces['bot']
srf40 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-8-1'].surfaces['bot']
srf41 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-9-1'].surfaces['bot']
srf42 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-10-1'].surfaces['bot']
srf43 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-11-1'].surfaces['bot']
srf44 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5'].surfaces['bot']
srf45 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-2-1'].surfaces['bot']
srf46 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-3-1'].surfaces['bot']
srf47 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-4-1'].surfaces['bot']
srf48 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-5-1'].surfaces['bot']
srf49 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-6-1'].surfaces['bot']
srf50 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-7-1'].surfaces['bot']
srf51 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-8-1'].surfaces['bot']
srf52 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-9-1'].surfaces['bot']
srf53 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-10-1'].surfaces['bot']
srf54 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-11-1'].surfaces['bot']
srf55 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6'].surfaces['bot']
srf56 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-2-1'].surfaces['bot']
srf57 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-3-1'].surfaces['bot']
srf58 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-4-1'].surfaces['bot']
srf59 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-5-1'].surfaces['bot']
srf60 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-6-1'].surfaces['bot']
srf61 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-7-1'].surfaces['bot']
srf62 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-8-1'].surfaces['bot']
srf63 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-9-1'].surfaces['bot']
srf64 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-10-1'].surfaces['bot']
srf65 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-11-1'].surfaces['bot']
srf66 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7'].surfaces['bot']
srf67 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-1'].surfaces['bot']
srf68 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].surfaces['bot']
srf69 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].surfaces['bot']
srf70 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].surfaces['bot']
srf71 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].surfaces['bot']
srf72 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].surfaces['bot']
srf73 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].surfaces['bot']
srf74 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].surfaces['bot']
srf75 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].surfaces['bot']
srf76 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].surfaces['bot']
srf77 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].surfaces['bot']
srf78 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].surfaces['bot']
srf79 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].surfaces['bot']
srf80 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].surfaces['bot']
srf81 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].surfaces['bot']
srf82 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].surfaces['bot']
srf83 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].surfaces['bot']
srf84 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].surfaces['bot']
srf85 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].surfaces['bot']
srf86 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].surfaces['bot']
srf87 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].surfaces['bot']
srf88 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].surfaces['bot']
srf89 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].surfaces['bot']
srf90 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].surfaces['bot']
srf91 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].surfaces['bot']
srf92 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].surfaces['bot']
srf93 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].surfaces['bot']
srf94 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].surfaces['bot']
srf95 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].surfaces['bot']
srf96 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].surfaces['bot']
srf97 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].surfaces['bot']
srf98 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].surfaces['bot']
srf99 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].surfaces['bot']
srf100 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].surfaces['bot']
srf101 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].surfaces['bot']
srf102 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].surfaces['bot']
srf103 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].surfaces['bot']
srf104 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].surfaces['bot']
srf105 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].surfaces['bot']
srf106 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].surfaces['bot']
srf107 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].surfaces['bot']
srf108 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].surfaces['bot']
srf109 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].surfaces['bot']
srf110 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].surfaces['bot']
srf111 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].surfaces['bot']
srf112 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].surfaces['bot']
srf113 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].surfaces['bot']
srf114 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].surfaces['bot']
srf115 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].surfaces['bot']
srf116 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].surfaces['bot']
srf117 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].surfaces['bot']
srf118 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].surfaces['bot']
srf119 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].surfaces['bot']
srf120 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].surfaces['bot']
srf121 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].surfaces['bot']
srf122 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].surfaces['bot']
srf123 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].surfaces['bot']
srf124 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].surfaces['bot']
srf125 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].surfaces['bot']
srf126 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].surfaces['bot']
srf127 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].surfaces['bot']
srf128 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].surfaces['bot']
srf129 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].surfaces['bot']
srf130 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].surfaces['bot']
srf131 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].surfaces['bot']
srf132 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-2'].surfaces['bot']
srf133 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-3'].surfaces['bot']
srf134 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-4'].surfaces['bot']
srf135 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-5'].surfaces['bot']
srf136 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-6'].surfaces['bot']
srf137 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-7'].surfaces['bot']
srf138 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-8'].surfaces['bot']
srf139 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-9'].surfaces['bot']
srf140 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-2-1'].surfaces['bot']
srf141 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-3-1'].surfaces['bot']
srf142 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-4-1'].surfaces['bot']
srf143 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-5-1'].surfaces['bot']
srf144 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-6-1'].surfaces['bot']
srf145 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-7-1'].surfaces['bot']
srf146 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-8-1'].surfaces['bot']
srf147 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-9-1'].surfaces['bot']
srf148 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-10-1'].surfaces['bot']
srf149 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-11-1'].surfaces['bot']
srf150 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].surfaces['bot']
srf151 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].surfaces['bot']
srf152 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].surfaces['bot']
srf153 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].surfaces['bot']
srf154 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].surfaces['bot']
srf155 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].surfaces['bot']
srf156 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].surfaces['bot']
srf157 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].surfaces['bot']
srf158 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].surfaces['bot']
srf159 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].surfaces['bot']
srf160 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].surfaces['bot']
srf161 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].surfaces['bot']
srf162 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].surfaces['bot']
srf163 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].surfaces['bot']
srf164 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].surfaces['bot']
srf165 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].surfaces['bot']
srf166 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1'].surfaces['bot']
srf167 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-3-1'].surfaces['bot']
srf168 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-4-1'].surfaces['bot']
srf169 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-5-1'].surfaces['bot']
srf170 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-6-1'].surfaces['bot']
srf171 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-7-1'].surfaces['bot']
srf172 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-8-1'].surfaces['bot']
srf173 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-9-1'].surfaces['bot']
srf174 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-10-1'].surfaces['bot']
srf175 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-11-1'].surfaces['bot']
srf176 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8'].surfaces['bot']
srf177 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-2-1'].surfaces['bot']
srf178 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-3-1'].surfaces['bot']
srf179 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-4-1'].surfaces['bot']
srf180 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-5-1'].surfaces['bot']
srf181 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-6-1'].surfaces['bot']
srf182 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-7-1'].surfaces['bot']
srf183 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-8-1'].surfaces['bot']
srf184 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-9-1'].surfaces['bot']
srf185 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-10-1'].surfaces['bot']
srf186 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-11-1'].surfaces['bot']
srf187 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2'].surfaces['bot']
srf188 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1'].surfaces['Surf-2']
srf189 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-2-1'].surfaces['bot']
srf190 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-3-1'].surfaces['bot']
srf191 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-4-1'].surfaces['bot']
srf192 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-5-1'].surfaces['bot']
srf193 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-6-1'].surfaces['bot']
srf194 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-7-1'].surfaces['bot']
srf195 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-8-1'].surfaces['bot']
srf196 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-9-1'].surfaces['bot']
srf197 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-10-1'].surfaces['bot']
srf198 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-11-1'].surfaces['bot']
srf199 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2'].surfaces['bot']
srf200 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-2-1'].surfaces['bot']
srf201 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-3-1'].surfaces['bot']
srf202 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-4-1'].surfaces['bot']
srf203 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-5-1'].surfaces['bot']
srf204 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-6-1'].surfaces['bot']
srf205 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-7-1'].surfaces['bot']
srf206 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-8-1'].surfaces['bot']
srf207 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-9-1'].surfaces['bot']
srf208 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-10-1'].surfaces['bot']
srf209 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-11-1'].surfaces['bot']
srf210 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1'].surfaces['bot']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, srf2, srf3, srf4, srf5, 
    srf6, srf7, srf8, srf9, srf10, srf11, srf12, srf13, srf14, srf15, srf16, 
    srf17, srf18, srf19, srf20, srf21, srf22, srf23, srf24, srf25, srf26, 
    srf27, srf28, srf29, srf30, srf31, srf32, srf33, srf34, srf35, srf36, 
    srf37, srf38, srf39, srf40, srf41, srf42, srf43, srf44, srf45, srf46, 
    srf47, srf48, srf49, srf50, srf51, srf52, srf53, srf54, srf55, srf56, 
    srf57, srf58, srf59, srf60, srf61, srf62, srf63, srf64, srf65, srf66, 
    srf67, srf68, srf69, srf70, srf71, srf72, srf73, srf74, srf75, srf76, 
    srf77, srf78, srf79, srf80, srf81, srf82, srf83, srf84, srf85, srf86, 
    srf87, srf88, srf89, srf90, srf91, srf92, srf93, srf94, srf95, srf96, 
    srf97, srf98, srf99, srf100, srf101, srf102, srf103, srf104, srf105, 
    srf106, srf107, srf108, srf109, srf110, srf111, srf112, srf113, srf114, 
    srf115, srf116, srf117, srf118, srf119, srf120, srf121, srf122, srf123, 
    srf124, srf125, srf126, srf127, srf128, srf129, srf130, srf131, srf132, 
    srf133, srf134, srf135, srf136, srf137, srf138, srf139, srf140, srf141, 
    srf142, srf143, srf144, srf145, srf146, srf147, srf148, srf149, srf150, 
    srf151, srf152, srf153, srf154, srf155, srf156, srf157, srf158, srf159, 
    srf160, srf161, srf162, srf163, srf164, srf165, srf166, srf167, srf168, 
    srf169, srf170, srf171, srf172, srf173, srf174, srf175, srf176, srf177, 
    srf178, srf179, srf180, srf181, srf182, srf183, srf184, srf185, srf186, 
    srf187, srf188, srf189, srf190, srf191, srf192, srf193, srf194, srf195, 
    srf196, srf197, srf198, srf199, srf200, srf201, srf202, srf203, srf204, 
    srf205, srf206, srf207, srf208, srf209, srf210, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.either(leaf=leaf)
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-2-1'].surfaces['bot']
srf2 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-3-1'].surfaces['bot']
srf3 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-4-1'].surfaces['bot']
srf4 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-5-1'].surfaces['bot']
srf5 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-6-1'].surfaces['bot']
srf6 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-7-1'].surfaces['bot']
srf7 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-8-1'].surfaces['bot']
srf8 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-9-1'].surfaces['bot']
srf9 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-10-1'].surfaces['bot']
srf10 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-11-1'].surfaces['bot']
srf11 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2'].surfaces['bot']
srf12 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-2-1'].surfaces['bot']
srf13 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-3-1'].surfaces['bot']
srf14 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-4-1'].surfaces['bot']
srf15 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-5-1'].surfaces['bot']
srf16 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-6-1'].surfaces['bot']
srf17 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-7-1'].surfaces['bot']
srf18 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-8-1'].surfaces['bot']
srf19 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-9-1'].surfaces['bot']
srf20 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-10-1'].surfaces['bot']
srf21 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-11-1'].surfaces['bot']
srf22 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3'].surfaces['bot']
srf23 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-2-1'].surfaces['bot']
srf24 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-3-1'].surfaces['bot']
srf25 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-4-1'].surfaces['bot']
srf26 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-5-1'].surfaces['bot']
srf27 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-6-1'].surfaces['bot']
srf28 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-7-1'].surfaces['bot']
srf29 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-8-1'].surfaces['bot']
srf30 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-9-1'].surfaces['bot']
srf31 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-10-1'].surfaces['bot']
srf32 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-11-1'].surfaces['bot']
srf33 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4'].surfaces['bot']
srf34 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-2-1'].surfaces['bot']
srf35 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-3-1'].surfaces['bot']
srf36 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-4-1'].surfaces['bot']
srf37 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-5-1'].surfaces['bot']
srf38 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-6-1'].surfaces['bot']
srf39 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-7-1'].surfaces['bot']
srf40 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-8-1'].surfaces['bot']
srf41 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-9-1'].surfaces['bot']
srf42 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-10-1'].surfaces['bot']
srf43 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-11-1'].surfaces['bot']
srf44 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5'].surfaces['bot']
srf45 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-2-1'].surfaces['bot']
srf46 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-3-1'].surfaces['bot']
srf47 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-4-1'].surfaces['bot']
srf48 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-5-1'].surfaces['bot']
srf49 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-6-1'].surfaces['bot']
srf50 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-7-1'].surfaces['bot']
srf51 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-8-1'].surfaces['bot']
srf52 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-9-1'].surfaces['bot']
srf53 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-10-1'].surfaces['bot']
srf54 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-11-1'].surfaces['bot']
srf55 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6'].surfaces['bot']
srf56 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-2-1'].surfaces['bot']
srf57 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-3-1'].surfaces['bot']
srf58 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-4-1'].surfaces['bot']
srf59 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-5-1'].surfaces['bot']
srf60 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-6-1'].surfaces['bot']
srf61 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-7-1'].surfaces['bot']
srf62 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-8-1'].surfaces['bot']
srf63 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-9-1'].surfaces['bot']
srf64 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-10-1'].surfaces['bot']
srf65 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-11-1'].surfaces['bot']
srf66 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7'].surfaces['bot']
srf67 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-1'].surfaces['bot']
srf68 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].surfaces['bot']
srf69 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].surfaces['bot']
srf70 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].surfaces['bot']
srf71 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].surfaces['bot']
srf72 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].surfaces['bot']
srf73 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].surfaces['bot']
srf74 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].surfaces['bot']
srf75 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].surfaces['bot']
srf76 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].surfaces['bot']
srf77 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].surfaces['bot']
srf78 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].surfaces['bot']
srf79 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].surfaces['bot']
srf80 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].surfaces['bot']
srf81 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].surfaces['bot']
srf82 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].surfaces['bot']
srf83 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].surfaces['bot']
srf84 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].surfaces['bot']
srf85 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].surfaces['bot']
srf86 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].surfaces['bot']
srf87 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].surfaces['bot']
srf88 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].surfaces['bot']
srf89 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].surfaces['bot']
srf90 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].surfaces['bot']
srf91 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].surfaces['bot']
srf92 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].surfaces['bot']
srf93 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].surfaces['bot']
srf94 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].surfaces['bot']
srf95 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].surfaces['bot']
srf96 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].surfaces['bot']
srf97 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].surfaces['bot']
srf98 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].surfaces['bot']
srf99 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].surfaces['bot']
srf100 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].surfaces['bot']
srf101 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].surfaces['bot']
srf102 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].surfaces['bot']
srf103 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].surfaces['bot']
srf104 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].surfaces['bot']
srf105 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].surfaces['bot']
srf106 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].surfaces['bot']
srf107 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].surfaces['bot']
srf108 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].surfaces['bot']
srf109 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].surfaces['bot']
srf110 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].surfaces['bot']
srf111 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].surfaces['bot']
srf112 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].surfaces['bot']
srf113 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].surfaces['bot']
srf114 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].surfaces['bot']
srf115 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].surfaces['bot']
srf116 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].surfaces['bot']
srf117 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].surfaces['bot']
srf118 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].surfaces['bot']
srf119 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].surfaces['bot']
srf120 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].surfaces['bot']
srf121 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].surfaces['bot']
srf122 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].surfaces['bot']
srf123 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].surfaces['bot']
srf124 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].surfaces['bot']
srf125 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].surfaces['bot']
srf126 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].surfaces['bot']
srf127 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].surfaces['bot']
srf128 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].surfaces['bot']
srf129 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].surfaces['bot']
srf130 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].surfaces['bot']
srf131 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].surfaces['bot']
srf132 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-2'].surfaces['bot']
srf133 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-3'].surfaces['bot']
srf134 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-4'].surfaces['bot']
srf135 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-5'].surfaces['bot']
srf136 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-6'].surfaces['bot']
srf137 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-7'].surfaces['bot']
srf138 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-8'].surfaces['bot']
srf139 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-9'].surfaces['bot']
srf140 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-2-1'].surfaces['bot']
srf141 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-3-1'].surfaces['bot']
srf142 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-4-1'].surfaces['bot']
srf143 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-5-1'].surfaces['bot']
srf144 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-6-1'].surfaces['bot']
srf145 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-7-1'].surfaces['bot']
srf146 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-8-1'].surfaces['bot']
srf147 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-9-1'].surfaces['bot']
srf148 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-10-1'].surfaces['bot']
srf149 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-11-1'].surfaces['bot']
srf150 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].surfaces['bot']
srf151 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].surfaces['bot']
srf152 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].surfaces['bot']
srf153 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].surfaces['bot']
srf154 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].surfaces['bot']
srf155 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].surfaces['bot']
srf156 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].surfaces['bot']
srf157 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].surfaces['bot']
srf158 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].surfaces['bot']
srf159 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].surfaces['bot']
srf160 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].surfaces['bot']
srf161 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].surfaces['bot']
srf162 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].surfaces['bot']
srf163 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].surfaces['bot']
srf164 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].surfaces['bot']
srf165 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].surfaces['bot']
srf166 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1'].surfaces['bot']
srf167 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-3-1'].surfaces['bot']
srf168 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-4-1'].surfaces['bot']
srf169 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-5-1'].surfaces['bot']
srf170 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-6-1'].surfaces['bot']
srf171 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-7-1'].surfaces['bot']
srf172 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-8-1'].surfaces['bot']
srf173 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-9-1'].surfaces['bot']
srf174 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-10-1'].surfaces['bot']
srf175 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-11-1'].surfaces['bot']
srf176 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8'].surfaces['bot']
srf177 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-2-1'].surfaces['bot']
srf178 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-3-1'].surfaces['bot']
srf179 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-4-1'].surfaces['bot']
srf180 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-5-1'].surfaces['bot']
srf181 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-6-1'].surfaces['bot']
srf182 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-7-1'].surfaces['bot']
srf183 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-8-1'].surfaces['bot']
srf184 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-9-1'].surfaces['bot']
srf185 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-10-1'].surfaces['bot']
srf186 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-11-1'].surfaces['bot']
srf187 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2'].surfaces['bot']
srf188 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1'].surfaces['Surf-2']
srf189 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-2-1'].surfaces['bot']
srf190 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-3-1'].surfaces['bot']
srf191 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-4-1'].surfaces['bot']
srf192 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-5-1'].surfaces['bot']
srf193 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-6-1'].surfaces['bot']
srf194 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-7-1'].surfaces['bot']
srf195 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-8-1'].surfaces['bot']
srf196 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-9-1'].surfaces['bot']
srf197 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-10-1'].surfaces['bot']
srf198 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-11-1'].surfaces['bot']
srf199 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2'].surfaces['bot']
srf200 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-2-1'].surfaces['bot']
srf201 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-3-1'].surfaces['bot']
srf202 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-4-1'].surfaces['bot']
srf203 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-5-1'].surfaces['bot']
srf204 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-6-1'].surfaces['bot']
srf205 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-7-1'].surfaces['bot']
srf206 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-8-1'].surfaces['bot']
srf207 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-9-1'].surfaces['bot']
srf208 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-10-1'].surfaces['bot']
srf209 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-11-1'].surfaces['bot']
srf210 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1'].surfaces['bot']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, srf2, srf3, srf4, srf5, 
    srf6, srf7, srf8, srf9, srf10, srf11, srf12, srf13, srf14, srf15, srf16, 
    srf17, srf18, srf19, srf20, srf21, srf22, srf23, srf24, srf25, srf26, 
    srf27, srf28, srf29, srf30, srf31, srf32, srf33, srf34, srf35, srf36, 
    srf37, srf38, srf39, srf40, srf41, srf42, srf43, srf44, srf45, srf46, 
    srf47, srf48, srf49, srf50, srf51, srf52, srf53, srf54, srf55, srf56, 
    srf57, srf58, srf59, srf60, srf61, srf62, srf63, srf64, srf65, srf66, 
    srf67, srf68, srf69, srf70, srf71, srf72, srf73, srf74, srf75, srf76, 
    srf77, srf78, srf79, srf80, srf81, srf82, srf83, srf84, srf85, srf86, 
    srf87, srf88, srf89, srf90, srf91, srf92, srf93, srf94, srf95, srf96, 
    srf97, srf98, srf99, srf100, srf101, srf102, srf103, srf104, srf105, 
    srf106, srf107, srf108, srf109, srf110, srf111, srf112, srf113, srf114, 
    srf115, srf116, srf117, srf118, srf119, srf120, srf121, srf122, srf123, 
    srf124, srf125, srf126, srf127, srf128, srf129, srf130, srf131, srf132, 
    srf133, srf134, srf135, srf136, srf137, srf138, srf139, srf140, srf141, 
    srf142, srf143, srf144, srf145, srf146, srf147, srf148, srf149, srf150, 
    srf151, srf152, srf153, srf154, srf155, srf156, srf157, srf158, srf159, 
    srf160, srf161, srf162, srf163, srf164, srf165, srf166, srf167, srf168, 
    srf169, srf170, srf171, srf172, srf173, srf174, srf175, srf176, srf177, 
    srf178, srf179, srf180, srf181, srf182, srf183, srf184, srf185, srf186, 
    srf187, srf188, srf189, srf190, srf191, srf192, srf193, srf194, srf195, 
    srf196, srf197, srf198, srf199, srf200, srf201, srf202, srf203, srf204, 
    srf205, srf206, srf207, srf208, srf209, srf210, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['DikeRigid-1'].surfaces['Surf-2']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
a = mdb.models['Model-1'].rootAssembly
s1 = a.instances['HalfBlock-1'].faces
side1Faces1 = s1.getSequenceFromMask(mask=('[#20 ]', ), )
s2 = a.instances['Block-2'].faces
side1Faces2 = s2.getSequenceFromMask(mask=('[#20 ]', ), )
s3 = a.instances['Block-2-lin-1-2'].faces
side1Faces3 = s3.getSequenceFromMask(mask=('[#20 ]', ), )
s4 = a.instances['Block-2-lin-1-3'].faces
side1Faces4 = s4.getSequenceFromMask(mask=('[#20 ]', ), )
s5 = a.instances['Block-2-lin-1-4'].faces
side1Faces5 = s5.getSequenceFromMask(mask=('[#20 ]', ), )
s6 = a.instances['Block-2-lin-1-5'].faces
side1Faces6 = s6.getSequenceFromMask(mask=('[#20 ]', ), )
s7 = a.instances['Block-2-lin-1-6'].faces
side1Faces7 = s7.getSequenceFromMask(mask=('[#20 ]', ), )
s8 = a.instances['Block-2-lin-1-7'].faces
side1Faces8 = s8.getSequenceFromMask(mask=('[#20 ]', ), )
s9 = a.instances['Block-2-lin-1-8'].faces
side1Faces9 = s9.getSequenceFromMask(mask=('[#20 ]', ), )
s10 = a.instances['HalfBlock-1-lin-1-2'].faces
side1Faces10 = s10.getSequenceFromMask(mask=('[#20 ]', ), )
s11 = a.instances['Block-2-lin-1-8-lin-2-1'].faces
side1Faces11 = s11.getSequenceFromMask(mask=('[#20 ]', ), )
s12 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-2'].faces
side1Faces12 = s12.getSequenceFromMask(mask=('[#20 ]', ), )
s13 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-3'].faces
side1Faces13 = s13.getSequenceFromMask(mask=('[#20 ]', ), )
s14 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-4'].faces
side1Faces14 = s14.getSequenceFromMask(mask=('[#20 ]', ), )
s15 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-5'].faces
side1Faces15 = s15.getSequenceFromMask(mask=('[#20 ]', ), )
s16 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-6'].faces
side1Faces16 = s16.getSequenceFromMask(mask=('[#20 ]', ), )
s17 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-7'].faces
side1Faces17 = s17.getSequenceFromMask(mask=('[#20 ]', ), )
s18 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-8'].faces
side1Faces18 = s18.getSequenceFromMask(mask=('[#20 ]', ), )
s19 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-9'].faces
side1Faces19 = s19.getSequenceFromMask(mask=('[#20 ]', ), )
s20 = a.instances['HalfBlock-1-lin-2-1'].faces
side1Faces20 = s20.getSequenceFromMask(mask=('[#20 ]', ), )
s21 = a.instances['HalfBlock-1-lin-3-1'].faces
side1Faces21 = s21.getSequenceFromMask(mask=('[#20 ]', ), )
s22 = a.instances['HalfBlock-1-lin-4-1'].faces
side1Faces22 = s22.getSequenceFromMask(mask=('[#20 ]', ), )
s23 = a.instances['HalfBlock-1-lin-5-1'].faces
side1Faces23 = s23.getSequenceFromMask(mask=('[#20 ]', ), )
s24 = a.instances['HalfBlock-1-lin-6-1'].faces
side1Faces24 = s24.getSequenceFromMask(mask=('[#20 ]', ), )
s25 = a.instances['HalfBlock-1-lin-7-1'].faces
side1Faces25 = s25.getSequenceFromMask(mask=('[#20 ]', ), )
s26 = a.instances['HalfBlock-1-lin-8-1'].faces
side1Faces26 = s26.getSequenceFromMask(mask=('[#20 ]', ), )
s27 = a.instances['HalfBlock-1-lin-9-1'].faces
side1Faces27 = s27.getSequenceFromMask(mask=('[#20 ]', ), )
s28 = a.instances['HalfBlock-1-lin-10-1'].faces
side1Faces28 = s28.getSequenceFromMask(mask=('[#20 ]', ), )
s29 = a.instances['HalfBlock-1-lin-11-1'].faces
side1Faces29 = s29.getSequenceFromMask(mask=('[#20 ]', ), )
s30 = a.instances['Block-2-lin-2-1'].faces
side1Faces30 = s30.getSequenceFromMask(mask=('[#20 ]', ), )
s31 = a.instances['Block-2-lin-3-1'].faces
side1Faces31 = s31.getSequenceFromMask(mask=('[#20 ]', ), )
s32 = a.instances['Block-2-lin-4-1'].faces
side1Faces32 = s32.getSequenceFromMask(mask=('[#20 ]', ), )
s33 = a.instances['Block-2-lin-5-1'].faces
side1Faces33 = s33.getSequenceFromMask(mask=('[#20 ]', ), )
s34 = a.instances['Block-2-lin-6-1'].faces
side1Faces34 = s34.getSequenceFromMask(mask=('[#20 ]', ), )
s35 = a.instances['Block-2-lin-7-1'].faces
side1Faces35 = s35.getSequenceFromMask(mask=('[#20 ]', ), )
s36 = a.instances['Block-2-lin-8-1'].faces
side1Faces36 = s36.getSequenceFromMask(mask=('[#20 ]', ), )
s37 = a.instances['Block-2-lin-9-1'].faces
side1Faces37 = s37.getSequenceFromMask(mask=('[#20 ]', ), )
s38 = a.instances['Block-2-lin-10-1'].faces
side1Faces38 = s38.getSequenceFromMask(mask=('[#20 ]', ), )
s39 = a.instances['Block-2-lin-11-1'].faces
side1Faces39 = s39.getSequenceFromMask(mask=('[#20 ]', ), )
s40 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].faces
side1Faces40 = s40.getSequenceFromMask(mask=('[#20 ]', ), )
s41 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].faces
side1Faces41 = s41.getSequenceFromMask(mask=('[#20 ]', ), )
s42 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].faces
side1Faces42 = s42.getSequenceFromMask(mask=('[#20 ]', ), )
s43 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].faces
side1Faces43 = s43.getSequenceFromMask(mask=('[#20 ]', ), )
s44 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].faces
side1Faces44 = s44.getSequenceFromMask(mask=('[#20 ]', ), )
s45 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].faces
side1Faces45 = s45.getSequenceFromMask(mask=('[#20 ]', ), )
s46 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].faces
side1Faces46 = s46.getSequenceFromMask(mask=('[#20 ]', ), )
s47 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].faces
side1Faces47 = s47.getSequenceFromMask(mask=('[#20 ]', ), )
s48 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].faces
side1Faces48 = s48.getSequenceFromMask(mask=('[#20 ]', ), )
s49 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].faces
side1Faces49 = s49.getSequenceFromMask(mask=('[#20 ]', ), )
s50 = a.instances['Block-2-lin-1-2-lin-2-1'].faces
side1Faces50 = s50.getSequenceFromMask(mask=('[#20 ]', ), )
s51 = a.instances['Block-2-lin-1-2-lin-3-1'].faces
side1Faces51 = s51.getSequenceFromMask(mask=('[#20 ]', ), )
s52 = a.instances['Block-2-lin-1-2-lin-4-1'].faces
side1Faces52 = s52.getSequenceFromMask(mask=('[#20 ]', ), )
s53 = a.instances['Block-2-lin-1-2-lin-5-1'].faces
side1Faces53 = s53.getSequenceFromMask(mask=('[#20 ]', ), )
s54 = a.instances['Block-2-lin-1-2-lin-6-1'].faces
side1Faces54 = s54.getSequenceFromMask(mask=('[#20 ]', ), )
s55 = a.instances['Block-2-lin-1-2-lin-7-1'].faces
side1Faces55 = s55.getSequenceFromMask(mask=('[#20 ]', ), )
s56 = a.instances['Block-2-lin-1-2-lin-8-1'].faces
side1Faces56 = s56.getSequenceFromMask(mask=('[#20 ]', ), )
s57 = a.instances['Block-2-lin-1-2-lin-9-1'].faces
side1Faces57 = s57.getSequenceFromMask(mask=('[#20 ]', ), )
s58 = a.instances['Block-2-lin-1-2-lin-10-1'].faces
side1Faces58 = s58.getSequenceFromMask(mask=('[#20 ]', ), )
s59 = a.instances['Block-2-lin-1-2-lin-11-1'].faces
side1Faces59 = s59.getSequenceFromMask(mask=('[#20 ]', ), )
s60 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].faces
side1Faces60 = s60.getSequenceFromMask(mask=('[#20 ]', ), )
s61 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].faces
side1Faces61 = s61.getSequenceFromMask(mask=('[#20 ]', ), )
s62 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].faces
side1Faces62 = s62.getSequenceFromMask(mask=('[#20 ]', ), )
s63 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].faces
side1Faces63 = s63.getSequenceFromMask(mask=('[#20 ]', ), )
s64 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].faces
side1Faces64 = s64.getSequenceFromMask(mask=('[#20 ]', ), )
s65 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].faces
side1Faces65 = s65.getSequenceFromMask(mask=('[#20 ]', ), )
s66 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].faces
side1Faces66 = s66.getSequenceFromMask(mask=('[#20 ]', ), )
s67 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].faces
side1Faces67 = s67.getSequenceFromMask(mask=('[#20 ]', ), )
s68 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].faces
side1Faces68 = s68.getSequenceFromMask(mask=('[#20 ]', ), )
s69 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].faces
side1Faces69 = s69.getSequenceFromMask(mask=('[#20 ]', ), )
s70 = a.instances['Block-2-lin-1-4-lin-2-1'].faces
side1Faces70 = s70.getSequenceFromMask(mask=('[#20 ]', ), )
s71 = a.instances['Block-2-lin-1-4-lin-3-1'].faces
side1Faces71 = s71.getSequenceFromMask(mask=('[#20 ]', ), )
s72 = a.instances['Block-2-lin-1-4-lin-4-1'].faces
side1Faces72 = s72.getSequenceFromMask(mask=('[#20 ]', ), )
s73 = a.instances['Block-2-lin-1-4-lin-5-1'].faces
side1Faces73 = s73.getSequenceFromMask(mask=('[#20 ]', ), )
s74 = a.instances['Block-2-lin-1-4-lin-6-1'].faces
side1Faces74 = s74.getSequenceFromMask(mask=('[#20 ]', ), )
s75 = a.instances['Block-2-lin-1-4-lin-7-1'].faces
side1Faces75 = s75.getSequenceFromMask(mask=('[#20 ]', ), )
s76 = a.instances['Block-2-lin-1-4-lin-8-1'].faces
side1Faces76 = s76.getSequenceFromMask(mask=('[#20 ]', ), )
s77 = a.instances['Block-2-lin-1-4-lin-9-1'].faces
side1Faces77 = s77.getSequenceFromMask(mask=('[#20 ]', ), )
s78 = a.instances['Block-2-lin-1-4-lin-10-1'].faces
side1Faces78 = s78.getSequenceFromMask(mask=('[#20 ]', ), )
s79 = a.instances['Block-2-lin-1-4-lin-11-1'].faces
side1Faces79 = s79.getSequenceFromMask(mask=('[#20 ]', ), )
s80 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].faces
side1Faces80 = s80.getSequenceFromMask(mask=('[#20 ]', ), )
s81 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].faces
side1Faces81 = s81.getSequenceFromMask(mask=('[#20 ]', ), )
s82 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].faces
side1Faces82 = s82.getSequenceFromMask(mask=('[#20 ]', ), )
s83 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].faces
side1Faces83 = s83.getSequenceFromMask(mask=('[#20 ]', ), )
s84 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].faces
side1Faces84 = s84.getSequenceFromMask(mask=('[#20 ]', ), )
s85 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].faces
side1Faces85 = s85.getSequenceFromMask(mask=('[#20 ]', ), )
s86 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].faces
side1Faces86 = s86.getSequenceFromMask(mask=('[#20 ]', ), )
s87 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].faces
side1Faces87 = s87.getSequenceFromMask(mask=('[#20 ]', ), )
s88 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].faces
side1Faces88 = s88.getSequenceFromMask(mask=('[#20 ]', ), )
s89 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].faces
side1Faces89 = s89.getSequenceFromMask(mask=('[#20 ]', ), )
s90 = a.instances['Block-2-lin-1-6-lin-2-1'].faces
side1Faces90 = s90.getSequenceFromMask(mask=('[#20 ]', ), )
s91 = a.instances['Block-2-lin-1-6-lin-3-1'].faces
side1Faces91 = s91.getSequenceFromMask(mask=('[#20 ]', ), )
s92 = a.instances['Block-2-lin-1-6-lin-4-1'].faces
side1Faces92 = s92.getSequenceFromMask(mask=('[#20 ]', ), )
s93 = a.instances['Block-2-lin-1-6-lin-5-1'].faces
side1Faces93 = s93.getSequenceFromMask(mask=('[#20 ]', ), )
s94 = a.instances['Block-2-lin-1-6-lin-6-1'].faces
side1Faces94 = s94.getSequenceFromMask(mask=('[#20 ]', ), )
s95 = a.instances['Block-2-lin-1-6-lin-7-1'].faces
side1Faces95 = s95.getSequenceFromMask(mask=('[#20 ]', ), )
s96 = a.instances['Block-2-lin-1-6-lin-8-1'].faces
side1Faces96 = s96.getSequenceFromMask(mask=('[#20 ]', ), )
s97 = a.instances['Block-2-lin-1-6-lin-9-1'].faces
side1Faces97 = s97.getSequenceFromMask(mask=('[#20 ]', ), )
s98 = a.instances['Block-2-lin-1-6-lin-10-1'].faces
side1Faces98 = s98.getSequenceFromMask(mask=('[#20 ]', ), )
s99 = a.instances['Block-2-lin-1-6-lin-11-1'].faces
side1Faces99 = s99.getSequenceFromMask(mask=('[#20 ]', ), )
s100 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].faces
side1Faces100 = s100.getSequenceFromMask(mask=('[#20 ]', ), )
s101 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].faces
side1Faces101 = s101.getSequenceFromMask(mask=('[#20 ]', ), )
s102 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].faces
side1Faces102 = s102.getSequenceFromMask(mask=('[#20 ]', ), )
s103 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].faces
side1Faces103 = s103.getSequenceFromMask(mask=('[#20 ]', ), )
s104 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].faces
side1Faces104 = s104.getSequenceFromMask(mask=('[#20 ]', ), )
s105 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].faces
side1Faces105 = s105.getSequenceFromMask(mask=('[#20 ]', ), )
s106 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].faces
side1Faces106 = s106.getSequenceFromMask(mask=('[#20 ]', ), )
s107 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].faces
side1Faces107 = s107.getSequenceFromMask(mask=('[#20 ]', ), )
s108 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].faces
side1Faces108 = s108.getSequenceFromMask(mask=('[#20 ]', ), )
s109 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].faces
side1Faces109 = s109.getSequenceFromMask(mask=('[#20 ]', ), )
s110 = a.instances['Block-2-lin-1-8-lin-2-1-1'].faces
side1Faces110 = s110.getSequenceFromMask(mask=('[#20 ]', ), )
s111 = a.instances['Block-2-lin-1-8-lin-3-1'].faces
side1Faces111 = s111.getSequenceFromMask(mask=('[#20 ]', ), )
s112 = a.instances['Block-2-lin-1-8-lin-4-1'].faces
side1Faces112 = s112.getSequenceFromMask(mask=('[#20 ]', ), )
s113 = a.instances['Block-2-lin-1-8-lin-5-1'].faces
side1Faces113 = s113.getSequenceFromMask(mask=('[#20 ]', ), )
s114 = a.instances['Block-2-lin-1-8-lin-6-1'].faces
side1Faces114 = s114.getSequenceFromMask(mask=('[#20 ]', ), )
s115 = a.instances['Block-2-lin-1-8-lin-7-1'].faces
side1Faces115 = s115.getSequenceFromMask(mask=('[#20 ]', ), )
s116 = a.instances['Block-2-lin-1-8-lin-8-1'].faces
side1Faces116 = s116.getSequenceFromMask(mask=('[#20 ]', ), )
s117 = a.instances['Block-2-lin-1-8-lin-9-1'].faces
side1Faces117 = s117.getSequenceFromMask(mask=('[#20 ]', ), )
s118 = a.instances['Block-2-lin-1-8-lin-10-1'].faces
side1Faces118 = s118.getSequenceFromMask(mask=('[#20 ]', ), )
s119 = a.instances['Block-2-lin-1-8-lin-11-1'].faces
side1Faces119 = s119.getSequenceFromMask(mask=('[#20 ]', ), )
s120 = a.instances['HalfBlock-1-lin-1-2-lin-2-1'].faces
side1Faces120 = s120.getSequenceFromMask(mask=('[#20 ]', ), )
s121 = a.instances['HalfBlock-1-lin-1-2-lin-3-1'].faces
side1Faces121 = s121.getSequenceFromMask(mask=('[#20 ]', ), )
s122 = a.instances['HalfBlock-1-lin-1-2-lin-4-1'].faces
side1Faces122 = s122.getSequenceFromMask(mask=('[#20 ]', ), )
s123 = a.instances['HalfBlock-1-lin-1-2-lin-5-1'].faces
side1Faces123 = s123.getSequenceFromMask(mask=('[#20 ]', ), )
s124 = a.instances['HalfBlock-1-lin-1-2-lin-6-1'].faces
side1Faces124 = s124.getSequenceFromMask(mask=('[#20 ]', ), )
s125 = a.instances['HalfBlock-1-lin-1-2-lin-7-1'].faces
side1Faces125 = s125.getSequenceFromMask(mask=('[#20 ]', ), )
s126 = a.instances['HalfBlock-1-lin-1-2-lin-8-1'].faces
side1Faces126 = s126.getSequenceFromMask(mask=('[#20 ]', ), )
s127 = a.instances['HalfBlock-1-lin-1-2-lin-9-1'].faces
side1Faces127 = s127.getSequenceFromMask(mask=('[#20 ]', ), )
s128 = a.instances['HalfBlock-1-lin-1-2-lin-10-1'].faces
side1Faces128 = s128.getSequenceFromMask(mask=('[#20 ]', ), )
s129 = a.instances['HalfBlock-1-lin-1-2-lin-11-1'].faces
side1Faces129 = s129.getSequenceFromMask(mask=('[#20 ]', ), )
s130 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].faces
side1Faces130 = s130.getSequenceFromMask(mask=('[#20 ]', ), )
s131 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].faces
side1Faces131 = s131.getSequenceFromMask(mask=('[#20 ]', ), )
s132 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].faces
side1Faces132 = s132.getSequenceFromMask(mask=('[#20 ]', ), )
s133 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].faces
side1Faces133 = s133.getSequenceFromMask(mask=('[#20 ]', ), )
s134 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].faces
side1Faces134 = s134.getSequenceFromMask(mask=('[#20 ]', ), )
s135 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].faces
side1Faces135 = s135.getSequenceFromMask(mask=('[#20 ]', ), )
s136 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].faces
side1Faces136 = s136.getSequenceFromMask(mask=('[#20 ]', ), )
s137 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].faces
side1Faces137 = s137.getSequenceFromMask(mask=('[#20 ]', ), )
s138 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].faces
side1Faces138 = s138.getSequenceFromMask(mask=('[#20 ]', ), )
s139 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].faces
side1Faces139 = s139.getSequenceFromMask(mask=('[#20 ]', ), )
s140 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].faces
side1Faces140 = s140.getSequenceFromMask(mask=('[#20 ]', ), )
s141 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].faces
side1Faces141 = s141.getSequenceFromMask(mask=('[#20 ]', ), )
s142 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].faces
side1Faces142 = s142.getSequenceFromMask(mask=('[#20 ]', ), )
s143 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].faces
side1Faces143 = s143.getSequenceFromMask(mask=('[#20 ]', ), )
s144 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].faces
side1Faces144 = s144.getSequenceFromMask(mask=('[#20 ]', ), )
s145 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].faces
side1Faces145 = s145.getSequenceFromMask(mask=('[#20 ]', ), )
s146 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].faces
side1Faces146 = s146.getSequenceFromMask(mask=('[#20 ]', ), )
s147 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].faces
side1Faces147 = s147.getSequenceFromMask(mask=('[#20 ]', ), )
s148 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].faces
side1Faces148 = s148.getSequenceFromMask(mask=('[#20 ]', ), )
s149 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].faces
side1Faces149 = s149.getSequenceFromMask(mask=('[#20 ]', ), )
s150 = a.instances['Block-2-lin-1-3-lin-2-1'].faces
side1Faces150 = s150.getSequenceFromMask(mask=('[#20 ]', ), )
s151 = a.instances['Block-2-lin-1-3-lin-3-1'].faces
side1Faces151 = s151.getSequenceFromMask(mask=('[#20 ]', ), )
s152 = a.instances['Block-2-lin-1-3-lin-4-1'].faces
side1Faces152 = s152.getSequenceFromMask(mask=('[#20 ]', ), )
s153 = a.instances['Block-2-lin-1-3-lin-5-1'].faces
side1Faces153 = s153.getSequenceFromMask(mask=('[#20 ]', ), )
s154 = a.instances['Block-2-lin-1-3-lin-6-1'].faces
side1Faces154 = s154.getSequenceFromMask(mask=('[#20 ]', ), )
s155 = a.instances['Block-2-lin-1-3-lin-7-1'].faces
side1Faces155 = s155.getSequenceFromMask(mask=('[#20 ]', ), )
s156 = a.instances['Block-2-lin-1-3-lin-8-1'].faces
side1Faces156 = s156.getSequenceFromMask(mask=('[#20 ]', ), )
s157 = a.instances['Block-2-lin-1-3-lin-9-1'].faces
side1Faces157 = s157.getSequenceFromMask(mask=('[#20 ]', ), )
s158 = a.instances['Block-2-lin-1-3-lin-10-1'].faces
side1Faces158 = s158.getSequenceFromMask(mask=('[#20 ]', ), )
s159 = a.instances['Block-2-lin-1-3-lin-11-1'].faces
side1Faces159 = s159.getSequenceFromMask(mask=('[#20 ]', ), )
s160 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].faces
side1Faces160 = s160.getSequenceFromMask(mask=('[#20 ]', ), )
s161 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].faces
side1Faces161 = s161.getSequenceFromMask(mask=('[#20 ]', ), )
s162 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].faces
side1Faces162 = s162.getSequenceFromMask(mask=('[#20 ]', ), )
s163 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].faces
side1Faces163 = s163.getSequenceFromMask(mask=('[#20 ]', ), )
s164 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].faces
side1Faces164 = s164.getSequenceFromMask(mask=('[#20 ]', ), )
s165 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].faces
side1Faces165 = s165.getSequenceFromMask(mask=('[#20 ]', ), )
s166 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].faces
side1Faces166 = s166.getSequenceFromMask(mask=('[#20 ]', ), )
s167 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].faces
side1Faces167 = s167.getSequenceFromMask(mask=('[#20 ]', ), )
s168 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].faces
side1Faces168 = s168.getSequenceFromMask(mask=('[#20 ]', ), )
s169 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].faces
side1Faces169 = s169.getSequenceFromMask(mask=('[#20 ]', ), )
s170 = a.instances['Block-2-lin-1-8-lin-2-1-lin-2-1'].faces
side1Faces170 = s170.getSequenceFromMask(mask=('[#20 ]', ), )
s171 = a.instances['Block-2-lin-1-8-lin-2-1-lin-3-1'].faces
side1Faces171 = s171.getSequenceFromMask(mask=('[#20 ]', ), )
s172 = a.instances['Block-2-lin-1-8-lin-2-1-lin-4-1'].faces
side1Faces172 = s172.getSequenceFromMask(mask=('[#20 ]', ), )
s173 = a.instances['Block-2-lin-1-8-lin-2-1-lin-5-1'].faces
side1Faces173 = s173.getSequenceFromMask(mask=('[#20 ]', ), )
s174 = a.instances['Block-2-lin-1-8-lin-2-1-lin-6-1'].faces
side1Faces174 = s174.getSequenceFromMask(mask=('[#20 ]', ), )
s175 = a.instances['Block-2-lin-1-8-lin-2-1-lin-7-1'].faces
side1Faces175 = s175.getSequenceFromMask(mask=('[#20 ]', ), )
s176 = a.instances['Block-2-lin-1-8-lin-2-1-lin-8-1'].faces
side1Faces176 = s176.getSequenceFromMask(mask=('[#20 ]', ), )
s177 = a.instances['Block-2-lin-1-8-lin-2-1-lin-9-1'].faces
side1Faces177 = s177.getSequenceFromMask(mask=('[#20 ]', ), )
s178 = a.instances['Block-2-lin-1-8-lin-2-1-lin-10-1'].faces
side1Faces178 = s178.getSequenceFromMask(mask=('[#20 ]', ), )
s179 = a.instances['Block-2-lin-1-8-lin-2-1-lin-11-1'].faces
side1Faces179 = s179.getSequenceFromMask(mask=('[#20 ]', ), )
s180 = a.instances['Block-2-lin-1-5-lin-2-1'].faces
side1Faces180 = s180.getSequenceFromMask(mask=('[#20 ]', ), )
s181 = a.instances['Block-2-lin-1-5-lin-3-1'].faces
side1Faces181 = s181.getSequenceFromMask(mask=('[#20 ]', ), )
s182 = a.instances['Block-2-lin-1-5-lin-4-1'].faces
side1Faces182 = s182.getSequenceFromMask(mask=('[#20 ]', ), )
s183 = a.instances['Block-2-lin-1-5-lin-5-1'].faces
side1Faces183 = s183.getSequenceFromMask(mask=('[#20 ]', ), )
s184 = a.instances['Block-2-lin-1-5-lin-6-1'].faces
side1Faces184 = s184.getSequenceFromMask(mask=('[#20 ]', ), )
s185 = a.instances['Block-2-lin-1-5-lin-7-1'].faces
side1Faces185 = s185.getSequenceFromMask(mask=('[#20 ]', ), )
s186 = a.instances['Block-2-lin-1-5-lin-8-1'].faces
side1Faces186 = s186.getSequenceFromMask(mask=('[#20 ]', ), )
s187 = a.instances['Block-2-lin-1-5-lin-9-1'].faces
side1Faces187 = s187.getSequenceFromMask(mask=('[#20 ]', ), )
s188 = a.instances['Block-2-lin-1-5-lin-10-1'].faces
side1Faces188 = s188.getSequenceFromMask(mask=('[#20 ]', ), )
s189 = a.instances['Block-2-lin-1-5-lin-11-1'].faces
side1Faces189 = s189.getSequenceFromMask(mask=('[#20 ]', ), )
s190 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].faces
side1Faces190 = s190.getSequenceFromMask(mask=('[#20 ]', ), )
s191 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].faces
side1Faces191 = s191.getSequenceFromMask(mask=('[#20 ]', ), )
s192 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].faces
side1Faces192 = s192.getSequenceFromMask(mask=('[#20 ]', ), )
s193 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].faces
side1Faces193 = s193.getSequenceFromMask(mask=('[#20 ]', ), )
s194 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].faces
side1Faces194 = s194.getSequenceFromMask(mask=('[#20 ]', ), )
s195 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].faces
side1Faces195 = s195.getSequenceFromMask(mask=('[#20 ]', ), )
s196 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].faces
side1Faces196 = s196.getSequenceFromMask(mask=('[#20 ]', ), )
s197 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].faces
side1Faces197 = s197.getSequenceFromMask(mask=('[#20 ]', ), )
s198 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].faces
side1Faces198 = s198.getSequenceFromMask(mask=('[#20 ]', ), )
s199 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].faces
side1Faces199 = s199.getSequenceFromMask(mask=('[#20 ]', ), )
s200 = a.instances['Block-2-lin-1-7-lin-2-1'].faces
side1Faces200 = s200.getSequenceFromMask(mask=('[#20 ]', ), )
s201 = a.instances['Block-2-lin-1-7-lin-3-1'].faces
side1Faces201 = s201.getSequenceFromMask(mask=('[#20 ]', ), )
s202 = a.instances['Block-2-lin-1-7-lin-4-1'].faces
side1Faces202 = s202.getSequenceFromMask(mask=('[#20 ]', ), )
s203 = a.instances['Block-2-lin-1-7-lin-5-1'].faces
side1Faces203 = s203.getSequenceFromMask(mask=('[#20 ]', ), )
s204 = a.instances['Block-2-lin-1-7-lin-6-1'].faces
side1Faces204 = s204.getSequenceFromMask(mask=('[#20 ]', ), )
s205 = a.instances['Block-2-lin-1-7-lin-7-1'].faces
side1Faces205 = s205.getSequenceFromMask(mask=('[#20 ]', ), )
s206 = a.instances['Block-2-lin-1-7-lin-8-1'].faces
side1Faces206 = s206.getSequenceFromMask(mask=('[#20 ]', ), )
s207 = a.instances['Block-2-lin-1-7-lin-9-1'].faces
side1Faces207 = s207.getSequenceFromMask(mask=('[#20 ]', ), )
s208 = a.instances['Block-2-lin-1-7-lin-10-1'].faces
side1Faces208 = s208.getSequenceFromMask(mask=('[#20 ]', ), )
s209 = a.instances['Block-2-lin-1-7-lin-11-1'].faces
side1Faces209 = s209.getSequenceFromMask(mask=('[#20 ]', ), )
a.Surface(side1Faces=side1Faces1+side1Faces2+side1Faces3+side1Faces4+\
    side1Faces5+side1Faces6+side1Faces7+side1Faces8+side1Faces9+side1Faces10+\
    side1Faces11+side1Faces12+side1Faces13+side1Faces14+side1Faces15+\
    side1Faces16+side1Faces17+side1Faces18+side1Faces19+side1Faces20+\
    side1Faces21+side1Faces22+side1Faces23+side1Faces24+side1Faces25+\
    side1Faces26+side1Faces27+side1Faces28+side1Faces29+side1Faces30+\
    side1Faces31+side1Faces32+side1Faces33+side1Faces34+side1Faces35+\
    side1Faces36+side1Faces37+side1Faces38+side1Faces39+side1Faces40+\
    side1Faces41+side1Faces42+side1Faces43+side1Faces44+side1Faces45+\
    side1Faces46+side1Faces47+side1Faces48+side1Faces49+side1Faces50+\
    side1Faces51+side1Faces52+side1Faces53+side1Faces54+side1Faces55+\
    side1Faces56+side1Faces57+side1Faces58+side1Faces59+side1Faces60+\
    side1Faces61+side1Faces62+side1Faces63+side1Faces64+side1Faces65+\
    side1Faces66+side1Faces67+side1Faces68+side1Faces69+side1Faces70+\
    side1Faces71+side1Faces72+side1Faces73+side1Faces74+side1Faces75+\
    side1Faces76+side1Faces77+side1Faces78+side1Faces79+side1Faces80+\
    side1Faces81+side1Faces82+side1Faces83+side1Faces84+side1Faces85+\
    side1Faces86+side1Faces87+side1Faces88+side1Faces89+side1Faces90+\
    side1Faces91+side1Faces92+side1Faces93+side1Faces94+side1Faces95+\
    side1Faces96+side1Faces97+side1Faces98+side1Faces99+side1Faces100+\
    side1Faces101+side1Faces102+side1Faces103+side1Faces104+side1Faces105+\
    side1Faces106+side1Faces107+side1Faces108+side1Faces109+side1Faces110+\
    side1Faces111+side1Faces112+side1Faces113+side1Faces114+side1Faces115+\
    side1Faces116+side1Faces117+side1Faces118+side1Faces119+side1Faces120+\
    side1Faces121+side1Faces122+side1Faces123+side1Faces124+side1Faces125+\
    side1Faces126+side1Faces127+side1Faces128+side1Faces129+side1Faces130+\
    side1Faces131+side1Faces132+side1Faces133+side1Faces134+side1Faces135+\
    side1Faces136+side1Faces137+side1Faces138+side1Faces139+side1Faces140+\
    side1Faces141+side1Faces142+side1Faces143+side1Faces144+side1Faces145+\
    side1Faces146+side1Faces147+side1Faces148+side1Faces149+side1Faces150+\
    side1Faces151+side1Faces152+side1Faces153+side1Faces154+side1Faces155+\
    side1Faces156+side1Faces157+side1Faces158+side1Faces159+side1Faces160+\
    side1Faces161+side1Faces162+side1Faces163+side1Faces164+side1Faces165+\
    side1Faces166+side1Faces167+side1Faces168+side1Faces169+side1Faces170+\
    side1Faces171+side1Faces172+side1Faces173+side1Faces174+side1Faces175+\
    side1Faces176+side1Faces177+side1Faces178+side1Faces179+side1Faces180+\
    side1Faces181+side1Faces182+side1Faces183+side1Faces184+side1Faces185+\
    side1Faces186+side1Faces187+side1Faces188+side1Faces189+side1Faces190+\
    side1Faces191+side1Faces192+side1Faces193+side1Faces194+side1Faces195+\
    side1Faces196+side1Faces197+side1Faces198+side1Faces199+side1Faces200+\
    side1Faces201+side1Faces202+side1Faces203+side1Faces204+side1Faces205+\
    side1Faces206+side1Faces207+side1Faces208+side1Faces209, name='Bottoms')
#: The surface 'Bottoms' has been created (209 faces).
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON)
r11=mdb.models['Model-1'].rootAssembly.surfaces['Bottoms']
r12=mdb.models['Model-1'].rootAssembly.instances['DikeRigid-1'].surfaces['Surf-2']
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    stepName='Loading', assignments=((r11, r12, 'BLOCK-FILTER'), ))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=OFF, 
    constraints=OFF, connectors=OFF, engineeringFeatures=OFF, 
    adaptiveMeshConstraints=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Loading')
mdb.models['Model-1'].steps['Loading'].setValues(
    timeIncrementationMethod=FIXED_USER_DEFINED_INC, userDefinedInc=0.01, 
    improvedDtMethod=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.Job(name='Job-2', objectToCopy=mdb.jobs['Job-1'])
leaf = dgm.Leaf(leafType=DEFAULT_MODEL)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Wall-1-lin-1-2'].faces
faces1 = f1.getSequenceFromMask(mask=('[#8 ]', ), )
leaf = dgm.LeafFromGeometry(faceSeq=faces1)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
leaf = dgm.Leaf(leafType=DEFAULT_MODEL)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Wall-1-lin-1-2'].faces
faces1 = f1.getSequenceFromMask(mask=('[#8 ]', ), )
leaf = dgm.LeafFromGeometry(faceSeq=faces1)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
a = mdb.models['Model-1'].rootAssembly
f1 = a.instances['Wall-1-lin-1-2'].faces
faces1 = f1.getSequenceFromMask(mask=('[#2 ]', ), )
leaf = dgm.LeafFromGeometry(faceSeq=faces1)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.remove(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=127.068, 
    farPlane=161.509, width=39.7447, height=13.9977, cameraPosition=(102.507, 
    86.3173, 76.1909), cameraTarget=(17.9667, 1.77704, -8.34935))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON)
a = mdb.models['Model-1'].rootAssembly
s1 = a.instances['Wall-1'].faces
side2Faces1 = s1.getSequenceFromMask(mask=('[#f ]', ), )
region5=regionToolset.Region(side2Faces=side2Faces1)
a = mdb.models['Model-1'].rootAssembly
r1 = a.referencePoints
refPoints1=(r1[439], )
region1=regionToolset.Region(referencePoints=refPoints1)
mdb.models['Model-1'].RigidBody(name='Constraint-2', refPointRegion=region1, 
    surfaceRegion=region5)
leaf = dgm.Leaf(leafType=DEFAULT_MODEL)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=132.038, 
    farPlane=170.719, cameraPosition=(148.455, 13.7471, -70.3409), 
    cameraUpVector=(-0.419255, 0.906049, 0.0574521), cameraTarget=(17.2854, 
    2.85307, -6.17666))
a = mdb.models['Model-1'].rootAssembly
s1 = a.instances['Wall-1-lin-1-2'].faces
side2Faces1 = s1.getSequenceFromMask(mask=('[#f ]', ), )
region5=regionToolset.Region(side2Faces=side2Faces1)
a = mdb.models['Model-1'].rootAssembly
r1 = a.referencePoints
refPoints1=(r1[439], )
region1=regionToolset.Region(referencePoints=refPoints1)
mdb.models['Model-1'].RigidBody(name='Constraint-3', refPointRegion=region1, 
    surfaceRegion=region5)
mdb.save()
#: The model database has been saved to "D:\tpennock\First delta flume\First delta flume.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=OFF, 
    constraints=OFF, connectors=OFF, engineeringFeatures=OFF)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
#: The job input file "Job-2.inp" has been submitted for analysis.
#: Error in job Job-2: NODE 2 (ASSEMBLY) IS USED AS A REFERENCE NODE FOR MORE THAN ONE RIGID BODY PROPERTY DEFINITION. EACH RIGID BODY PROPERTY DEFINITION MUST HAVE A UNIQUE REFERENCE NODE
#: Error in job Job-2: NODE 2 (ASSEMBLY) IS USED AS A REFERENCE NODE FOR MORE THAN ONE RIGID BODY PROPERTY DEFINITION. EACH RIGID BODY PROPERTY DEFINITION MUST HAVE A UNIQUE REFERENCE NODE
session.viewports['Viewport: 1'].view.setProjection(projection=PARALLEL)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
#: Job Job-2: Analysis Input File Processor aborted due to errors.
#: Error in job Job-2: Analysis Input File Processor exited with an error - Please see the  Job-2.dat file for possible error messages if the file exists.
#: Job Job-2 aborted due to errors.
session.viewports['Viewport: 1'].view.setValues(nearPlane=52.5423, 
    farPlane=85.6194, width=29.7745, height=11.4103, cameraPosition=(51.5933, 
    44.4143, 38.7439), cameraTarget=(11.7095, 4.53043, -1.13996))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=54.6984, 
    farPlane=83.4633, width=1.41967, height=0.518405, cameraPosition=(45.2802, 
    44.8986, 44.5726), cameraTarget=(5.3964, 5.01477, 4.68882))
a = mdb.models['Model-1'].rootAssembly
a.deleteFeatures(('RP-1', 'RP-2', ))
a = mdb.models['Model-1'].rootAssembly
d11 = a.datums
a.ReferencePoint(point=d11[433])
a = mdb.models['Model-1'].rootAssembly
a.ReferencePoint(point=(0.0, 0.0, 0.0))
a = mdb.models['Model-1'].rootAssembly
a.ReferencePoint(point=(0.0, 0.0, 1.0))
session.viewports['Viewport: 1'].view.setValues(nearPlane=54.226, 
    farPlane=83.9356, width=7.81245, height=2.85279, cameraPosition=(46.4925, 
    44.5644, 43.6946), cameraTarget=(6.60872, 4.68052, 3.81074))
a = mdb.models['Model-1'].rootAssembly
a.ReferencePoint(point=(0.0, 0.0, 2.0))
a = mdb.models['Model-1'].rootAssembly
r1 = a.referencePoints
refPoints1=(r1[457], )
region1=regionToolset.Region(referencePoints=refPoints1)
mdb.models['Model-1'].constraints['Constraint-1'].setValues(
    refPointRegion=region1)
a = mdb.models['Model-1'].rootAssembly
r1 = a.referencePoints
refPoints1=(r1[458], )
region1=regionToolset.Region(referencePoints=refPoints1)
mdb.models['Model-1'].constraints['Constraint-2'].setValues(
    refPointRegion=region1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=53.6506, 
    farPlane=83.9914, width=8.30115, height=3.03124, cameraPosition=(46.5627, 
    44.5835, 43.6052), cameraTarget=(6.67892, 4.69969, 3.72138))
a = mdb.models['Model-1'].rootAssembly
r1 = a.referencePoints
refPoints1=(r1[459], )
region1=regionToolset.Region(referencePoints=refPoints1)
mdb.models['Model-1'].constraints['Constraint-3'].setValues(
    refPointRegion=region1)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=OFF, 
    constraints=OFF, connectors=OFF, engineeringFeatures=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.6672, 
    farPlane=85.9748, width=35.5096, height=12.9667, cameraPosition=(55.5908, 
    43.7706, 35.3901), cameraTarget=(15.7069, 3.88675, -4.49371))
del mdb.models['Model-1'].boundaryConditions['BC-1']
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.1216, 
    farPlane=87.5205, width=56.4423, height=20.6104, cameraPosition=(60.4921, 
    43.3815, 30.8779), cameraTarget=(20.6082, 3.49765, -9.00589))
a = mdb.models['Model-1'].rootAssembly
r1 = a.referencePoints
refPoints1=(r1[457], )
region = regionToolset.Region(referencePoints=refPoints1)
mdb.models['Model-1'].DisplacementBC(name='BC-1', createStepName='Loading', 
    region=region, u1=0.0, u2=0.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0, 
    amplitude=UNSET, fixed=OFF, distributionType=UNIFORM, fieldName='', 
    localCsys=None)
a = mdb.models['Model-1'].rootAssembly
r1 = a.referencePoints
refPoints1=(r1[456], r1[457], r1[458], r1[459], )
region = regionToolset.Region(referencePoints=refPoints1)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(region=region)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
#: The job input file "Job-2.inp" has been submitted for analysis.
#: Job Job-2: Analysis Input File Processor completed successfully.
#: Job Job-2: Abaqus/Explicit Packager completed successfully.
#: Error in job Job-2: The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.
#: Error in job Job-2: Print-out suppressed for subsequent distorted elements
#: Error in job Job-2: There are a total of 8965 excessively distorted elements
#: Error in job Job-2: The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.
#: Error in job Job-2: The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.
#: Job Job-2: Abaqus/Explicit aborted due to errors.
#: Error in job Job-2: Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.
#: Job Job-2 aborted due to errors.
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['D:/tpennock/First delta flume/Job-1.odb'])
o3 = session.openOdb(name='D:/tpennock/First delta flume/Job-2.odb')
#: Model: D:/tpennock/First delta flume/Job-2.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     212
#: Number of Meshes:             213
#: Number of Element Sets:       4
#: Number of Node Sets:          9
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].view.setValues(nearPlane=43.2599, 
    farPlane=76.6015, width=46.2256, height=16.8797, cameraPosition=(50.4659, 
    38.2909, 29.4962), cameraTarget=(15.8649, 3.68986, -5.10481))
leaf = dgo.LeafFromOdbNodePick(nodePick=((
    'BLOCK-2-LIN-1-8-LIN-2-1-LIN--LIN-8-1-3', 1, ('[#0 #20000 ]', )), ), )
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].view.setValues(nearPlane=351.506, 
    farPlane=707.544, width=84.9473, height=31.0193, cameraPosition=(321.557, 
    313.561, 292.439), cameraTarget=(17.1883, 9.19164, -11.93))
leaf = dgo.LeafFromPartInstance(partInstanceName=("WALL-1", ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("WALL-1", ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("WALL-1", ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("WALL-1-LIN-1-2", ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
leaf = dgo.LeafFromPartInstance(partInstanceName=("WALL-1", "WALL-1-LIN-1-2", 
    ))
session.viewports['Viewport: 1'].odbDisplay.displayGroup.remove(leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=352.683, 
    farPlane=706.367, width=70.9085, height=25.8929, cameraPosition=(322.856, 
    313.439, 291.263), cameraTarget=(18.4872, 9.06949, -13.1068))
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.setValues(session.views['Top'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=649.617, 
    farPlane=938.408, width=59.9516, height=21.8919, cameraPosition=(20.6902, 
    797.513, -2.16924), cameraTarget=(20.6902, 3.5, -2.16924))
session.animationOptions.setValues(frameRate=1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=648.205, 
    farPlane=939.821, width=75.7081, height=27.6455, cameraPosition=(23.4181, 
    797.513, -2.38271), cameraTarget=(23.4181, 3.5, -2.38271))
session.viewports['Viewport: 1'].view.setValues(nearPlane=653.674, 
    farPlane=944.958, cameraPosition=(323.477, 738.291, 20.0577), 
    cameraUpVector=(-0.151871, 0.0920723, -0.984103), cameraTarget=(23.4181, 
    3.5, -2.38271))
session.viewports['Viewport: 1'].view.setValues(nearPlane=648.443, 
    farPlane=950.19, width=145.093, height=52.982, cameraPosition=(323.175, 
    738.379, 21.209), cameraTarget=(23.1166, 3.58798, -1.23147))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['Model-1'].rootAssembly
a.features['Wall-1'].suppress()
a = mdb.models['Model-1'].rootAssembly
a.features['Wall-1-lin-1-2'].suppress()
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
#: The job input file "Job-2.inp" has been submitted for analysis.
#: Job Job-2: Analysis Input File Processor completed successfully.
#: Error in job Job-2: Failed to locate set "ASSEMBLY__PICKEDSURF453".
#: Job Job-2: Abaqus/Explicit Packager completed successfully.
#: Error in job Job-2: Error creating step named: Loading No step by specified name
#: Error in job Job-2: Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.
#: Job Job-2 aborted due to errors.
a = mdb.models['Model-1'].rootAssembly
a.features['Wall-1'].resume()
a = mdb.models['Model-1'].rootAssembly
a.features['Wall-1-lin-1-2'].resume()
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.7184, 
    farPlane=85.9237, width=34.1199, height=12.4592, cameraPosition=(54.3118, 
    43.9549, 36.4849), cameraTarget=(14.4279, 4.07105, -3.39895))
a1 = mdb.models['Model-1'].rootAssembly
a1.translate(instanceList=('Wall-1-lin-1-2', ), vector=(0.0, 0.0, 0.1))
#: The instance Wall-1-lin-1-2 was translated by 0., 0., 100.E-03 with respect to the assembly coordinate system
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.8316, 
    farPlane=88.8441, cameraPosition=(83.2086, 7.58401, -0.637907), 
    cameraUpVector=(-0.368798, 0.902223, -0.223568), cameraTarget=(14.2529, 
    4.29124, -3.1742))
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.5266, 
    farPlane=89.9798, cameraPosition=(75.5367, -20.6679, -23.3831), 
    cameraUpVector=(0.0475815, 0.996469, 0.0691837), cameraTarget=(14.1697, 
    3.98501, -3.42074))
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.6217, 
    farPlane=89.2953, cameraPosition=(82.6655, -5.09893, -6.21168), 
    cameraUpVector=(-0.199533, 0.976174, 0.0852688), cameraTarget=(14.2887, 
    4.24481, -3.1342))
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.4409, 
    farPlane=89.2659, cameraPosition=(79.382, -18.9414, -2.79465), 
    cameraUpVector=(-0.00180814, 0.996575, 0.0826697), cameraTarget=(14.2475, 
    4.07115, -3.09133))
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.7613, 
    farPlane=87.9456, width=15.2641, height=5.57382, cameraPosition=(79.3257, 
    -19.0802, -1.20616), cameraTarget=(14.1912, 3.93233, -1.50284))
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.7697, 
    farPlane=87.9296, cameraPosition=(80.4156, -15.6939, -2.71723), 
    cameraUpVector=(-0.0514788, 0.989453, 0.135401), cameraTarget=(14.2033, 
    3.96979, -1.51955))
session.viewports['Viewport: 1'].view.setValues(nearPlane=52.0322, 
    farPlane=87.6671, width=11.5918, height=4.23285, cameraPosition=(80.3748, 
    -15.7713, -3.70138), cameraTarget=(14.1625, 3.89239, -2.5037))
session.viewports['Viewport: 1'].view.setValues(nearPlane=52.0409, 
    farPlane=87.6584, cameraPosition=(80.3748, -15.7713, -3.70138), 
    cameraUpVector=(-0.0516945, 0.988185, 0.144282), cameraTarget=(14.1625, 
    3.89239, -2.5037))
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.6104, 
    farPlane=87.8526, cameraPosition=(79.6035, -15.6553, 7.93785), 
    cameraUpVector=(-0.0660506, 0.99516, 0.0727553), cameraTarget=(14.154, 
    3.89367, -2.37559))
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.8991, 
    farPlane=87.6987, cameraPosition=(80.9553, -13.3774, 1.08489), 
    cameraUpVector=(-0.0969778, 0.985479, 0.139377), cameraTarget=(14.1666, 
    3.91493, -2.43953))
a1 = mdb.models['Model-1'].rootAssembly
a1.translate(instanceList=('Wall-1', ), vector=(0.0, 0.0, -0.1))
#: The instance Wall-1 was translated by 0., 0., -100.E-03 with respect to the assembly coordinate system
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
#: The job input file "Job-2.inp" has been submitted for analysis.
session.viewports['Viewport: 1'].view.setValues(nearPlane=52.4897, 
    farPlane=87.1791, cameraPosition=(83.1454, 0.330527, -4.33269), 
    cameraUpVector=(-0.280777, 0.958464, 0.0501003), cameraTarget=(14.1897, 
    4.05921, -2.49655))
#: Job Job-2: Analysis Input File Processor completed successfully.
#: Job Job-2: Abaqus/Explicit Packager completed successfully.
#: Error in job Job-2: The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.
#: Error in job Job-2: Print-out suppressed for subsequent distorted elements
#: Error in job Job-2: There are a total of 8964 excessively distorted elements
#: Error in job Job-2: The ratio of deformation speed to wave speed exceeds 1.0000 in at least one element. This usually indicates an error with the model definition. Additional diagnostic information may be found in the message file.
#: Error in job Job-2: The elements contained in element set ErrElemExcessDistortion-Step1 have distorted excessively.
#: Job Job-2: Abaqus/Explicit aborted due to errors.
#: Error in job Job-2: Abaqus/Explicit Analysis exited with an error - Please see the  status file for possible error messages if the file exists.
#: Job Job-2 aborted due to errors.
session.viewports['Viewport: 1'].view.setValues(nearPlane=52.5813, 
    farPlane=87.0875, width=10.0409, height=3.84792, cameraPosition=(83.156, 
    0.317486, -3.9092), cameraTarget=(14.2003, 4.04617, -2.07306))
o3 = session.openOdb(name='D:/tpennock/First delta flume/Job-2.odb')
#: Model: D:/tpennock/First delta flume/Job-2.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     212
#: Number of Meshes:             213
#: Number of Element Sets:       4
#: Number of Node Sets:          9
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    DEFORMED, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=453.49, 
    farPlane=675.197, width=225.991, height=82.5227, cameraPosition=(339.663, 
    329.586, 318.648), cameraTarget=(13.8392, 3.76283, -7.1757))
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    UNDEFORMED, ))
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].view.setValues(nearPlane=383.803, 
    farPlane=744.921, width=115.873, height=42.3121, cameraPosition=(348.485, 
    330.819, 308.594), cameraTarget=(22.6614, 4.99509, -17.2301))
session.viewports['Viewport: 1'].view.setValues(session.views['Top'])
session.viewports['Viewport: 1'].view.setValues(session.views['Bottom'])
session.viewports['Viewport: 1'].view.setValues(session.views['Left'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=755.753, 
    farPlane=832.272, width=264.199, height=96.4746, cameraPosition=(-784.62, 
    13.3885, 0.660508), cameraTarget=(9.39335, 13.3885, 0.660508))
session.viewports['Viewport: 1'].view.setValues(session.views['Left'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=765.881, 
    farPlane=822.145, width=138.15, height=50.4467, cameraPosition=(-784.62, 
    15.1168, 0.829706), cameraTarget=(9.39335, 15.1168, 0.829706))
session.viewports['Viewport: 1'].view.setValues(session.views['Right'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=776.268, 
    farPlane=811.758, width=3.16863, height=1.15706, cameraPosition=(803.406, 
    2.29484, -0.984559), cameraTarget=(9.39335, 2.29484, -0.984559))
session.viewports['Viewport: 1'].view.setValues(nearPlane=724.128, 
    farPlane=864.104, cameraPosition=(774.253, 139.622, 162.073), 
    cameraUpVector=(-0.163678, 0.984598, -0.0614582), cameraTarget=(9.39335, 
    2.29483, -0.984563))
session.viewports['Viewport: 1'].view.setValues(nearPlane=723.758, 
    farPlane=864.474, width=7.92958, height=2.89556, cameraPosition=(775.644, 
    138.014, 156.904), cameraTarget=(10.784, 0.687222, -6.15364))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['Model-1'].steps['Loading'].setValues(
    timeIncrementationMethod=AUTOMATIC_GLOBAL, scaleFactor=1.0, 
    maxIncrement=None, improvedDtMethod=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['Job-2'].submit(consistencyChecking=OFF)
#: The job input file "Job-2.inp" has been submitted for analysis.
#: Job Job-2: Analysis Input File Processor completed successfully.
#: Job Job-2: Abaqus/Explicit Packager completed successfully.
session.viewports['Viewport: 1'].view.setValues(cameraPosition=(83.156, 
    0.317486, -3.9092))
p1 = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['Model-1'].parts['Block'].surfaces['bot']
p1 = mdb.models['Model-1'].parts['HalfBlock']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['Model-1'].parts['HalfBlock'].surfaces['bot']
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.811284, 
    farPlane=1.58057, width=1.13142, height=0.41315, cameraPosition=(21.7544, 
    23.8561, 0.543087), cameraUpVector=(0.575462, 0.813864, -0.0804265), 
    cameraTarget=(21.1141, 24.7534, 0.0700457))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.824965, 
    farPlane=1.56149, width=1.1505, height=0.420117, cameraPosition=(20.4086, 
    23.7865, 0.0823975), cameraUpVector=(0.857605, -0.210444, 0.469284), 
    cameraTarget=(21.1182, 24.7536, 0.0714493))
p = mdb.models['Model-1'].parts['HalfBlock']
s = p.faces
side1Faces = s.getSequenceFromMask(mask=('[#f ]', ), )
p.Surface(side1Faces=side1Faces, name='Side')
#: The surface 'Side' has been created (4 faces).
p1 = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.16326, 
    farPlane=1.92869, width=1.41057, height=0.515085, cameraPosition=(0.119015, 
    -1.27706, 0.277631), cameraUpVector=(-0.781451, 0.456835, 0.425014), 
    cameraTarget=(0.240185, 0.231162, 0.0764204))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.11811, 
    farPlane=1.95902, width=1.35583, height=0.495094, cameraPosition=(1.66774, 
    -0.143993, -0.374428), cameraUpVector=(-0.329482, -0.656138, 0.678915), 
    cameraTarget=(0.2598, 0.245512, 0.068162))
session.viewports['Viewport: 1'].view.setValues(nearPlane=1.08575, 
    farPlane=1.99169, width=1.3166, height=0.480767, cameraPosition=(1.5263, 
    -0.559969, -0.21254), cameraUpVector=(-0.541139, -0.466734, 0.69952), 
    cameraTarget=(0.258682, 0.242223, 0.0694421))
p = mdb.models['Model-1'].parts['Block']
s = p.faces
side1Faces = s.getSequenceFromMask(mask=('[#f ]', ), )
p.Surface(side1Faces=side1Faces, name='side')
#: The surface 'side' has been created (4 faces).
a1 = mdb.models['Model-1'].rootAssembly
a1.regenerate()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.1887, 
    farPlane=89.48, width=40.6163, height=14.8314, cameraPosition=(82.8914, 
    -1.19617, -10.7718), cameraTarget=(13.9357, 2.53251, -8.93562))
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.0976, 
    farPlane=87.9718, width=49.275, height=17.9932, cameraPosition=(62.4005, 
    41.7976, 31.7295), cameraTarget=(22.2547, 1.6517, -8.41638))
srf1 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-2-1'].surfaces['side']
srf2 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-3-1'].surfaces['side']
srf3 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-4-1'].surfaces['side']
srf4 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-5-1'].surfaces['side']
srf5 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-6-1'].surfaces['side']
srf6 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-7-1'].surfaces['side']
srf7 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-8-1'].surfaces['side']
srf8 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-9-1'].surfaces['side']
srf9 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-10-1'].surfaces['side']
srf10 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2-lin-11-1'].surfaces['side']
srf11 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-2'].surfaces['side']
srf12 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-2-1'].surfaces['side']
srf13 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-3-1'].surfaces['side']
srf14 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-4-1'].surfaces['side']
srf15 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-5-1'].surfaces['side']
srf16 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-6-1'].surfaces['side']
srf17 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-7-1'].surfaces['side']
srf18 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-8-1'].surfaces['side']
srf19 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-9-1'].surfaces['side']
srf20 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-10-1'].surfaces['side']
srf21 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3-lin-11-1'].surfaces['side']
srf22 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-3'].surfaces['side']
srf23 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-2-1'].surfaces['side']
srf24 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-3-1'].surfaces['side']
srf25 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-4-1'].surfaces['side']
srf26 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-5-1'].surfaces['side']
srf27 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-6-1'].surfaces['side']
srf28 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-7-1'].surfaces['side']
srf29 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-8-1'].surfaces['side']
srf30 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-9-1'].surfaces['side']
srf31 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-10-1'].surfaces['side']
srf32 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4-lin-11-1'].surfaces['side']
srf33 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-4'].surfaces['side']
srf34 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-2-1'].surfaces['side']
srf35 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-3-1'].surfaces['side']
srf36 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-4-1'].surfaces['side']
srf37 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-5-1'].surfaces['side']
srf38 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-6-1'].surfaces['side']
srf39 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-7-1'].surfaces['side']
srf40 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-8-1'].surfaces['side']
srf41 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-9-1'].surfaces['side']
srf42 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-10-1'].surfaces['side']
srf43 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5-lin-11-1'].surfaces['side']
srf44 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-5'].surfaces['side']
srf45 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-2-1'].surfaces['side']
srf46 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-3-1'].surfaces['side']
srf47 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-4-1'].surfaces['side']
srf48 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-5-1'].surfaces['side']
srf49 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-6-1'].surfaces['side']
srf50 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-7-1'].surfaces['side']
srf51 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-8-1'].surfaces['side']
srf52 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-9-1'].surfaces['side']
srf53 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-10-1'].surfaces['side']
srf54 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6-lin-11-1'].surfaces['side']
srf55 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-6'].surfaces['side']
srf56 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-2-1'].surfaces['side']
srf57 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-3-1'].surfaces['side']
srf58 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-4-1'].surfaces['side']
srf59 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-5-1'].surfaces['side']
srf60 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-6-1'].surfaces['side']
srf61 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-7-1'].surfaces['side']
srf62 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-8-1'].surfaces['side']
srf63 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-9-1'].surfaces['side']
srf64 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-10-1'].surfaces['side']
srf65 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7-lin-11-1'].surfaces['side']
srf66 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-7'].surfaces['side']
srf67 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-1'].surfaces['side']
srf68 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].surfaces['side']
srf69 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].surfaces['side']
srf70 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].surfaces['side']
srf71 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].surfaces['side']
srf72 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].surfaces['side']
srf73 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].surfaces['side']
srf74 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].surfaces['side']
srf75 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].surfaces['side']
srf76 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].surfaces['side']
srf77 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].surfaces['side']
srf78 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].surfaces['side']
srf79 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].surfaces['side']
srf80 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].surfaces['side']
srf81 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].surfaces['side']
srf82 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].surfaces['side']
srf83 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].surfaces['side']
srf84 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].surfaces['side']
srf85 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].surfaces['side']
srf86 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].surfaces['side']
srf87 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].surfaces['side']
srf88 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].surfaces['side']
srf89 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].surfaces['side']
srf90 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].surfaces['side']
srf91 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].surfaces['side']
srf92 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].surfaces['side']
srf93 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].surfaces['side']
srf94 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].surfaces['side']
srf95 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].surfaces['side']
srf96 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].surfaces['side']
srf97 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].surfaces['side']
srf98 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].surfaces['side']
srf99 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].surfaces['side']
srf100 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].surfaces['side']
srf101 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].surfaces['side']
srf102 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].surfaces['side']
srf103 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].surfaces['side']
srf104 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].surfaces['side']
srf105 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].surfaces['side']
srf106 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].surfaces['side']
srf107 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].surfaces['side']
srf108 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].surfaces['side']
srf109 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].surfaces['side']
srf110 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].surfaces['side']
srf111 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].surfaces['side']
srf112 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].surfaces['side']
srf113 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].surfaces['side']
srf114 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].surfaces['side']
srf115 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].surfaces['side']
srf116 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].surfaces['side']
srf117 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].surfaces['side']
srf118 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].surfaces['side']
srf119 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].surfaces['side']
srf120 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].surfaces['side']
srf121 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].surfaces['side']
srf122 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].surfaces['side']
srf123 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].surfaces['side']
srf124 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].surfaces['side']
srf125 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].surfaces['side']
srf126 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].surfaces['side']
srf127 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].surfaces['side']
srf128 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].surfaces['side']
srf129 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].surfaces['side']
srf130 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].surfaces['side']
srf131 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].surfaces['side']
srf132 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-2'].surfaces['side']
srf133 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-3'].surfaces['side']
srf134 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-4'].surfaces['side']
srf135 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-5'].surfaces['side']
srf136 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-6'].surfaces['side']
srf137 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-7'].surfaces['side']
srf138 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-8'].surfaces['side']
srf139 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-1-9'].surfaces['side']
srf140 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-2-1'].surfaces['side']
srf141 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-3-1'].surfaces['side']
srf142 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-4-1'].surfaces['side']
srf143 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-5-1'].surfaces['side']
srf144 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-6-1'].surfaces['side']
srf145 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-7-1'].surfaces['side']
srf146 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-8-1'].surfaces['side']
srf147 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-9-1'].surfaces['side']
srf148 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-10-1'].surfaces['side']
srf149 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-11-1'].surfaces['side']
srf150 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].surfaces['side']
srf151 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].surfaces['side']
srf152 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].surfaces['side']
srf153 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].surfaces['side']
srf154 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].surfaces['side']
srf155 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].surfaces['side']
srf156 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].surfaces['side']
srf157 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].surfaces['side']
srf158 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].surfaces['side']
srf159 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].surfaces['side']
srf160 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].surfaces['side']
srf161 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].surfaces['side']
srf162 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].surfaces['side']
srf163 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].surfaces['side']
srf164 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].surfaces['side']
srf165 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].surfaces['side']
srf166 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-2-1'].surfaces['side']
srf167 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-3-1'].surfaces['side']
srf168 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-4-1'].surfaces['side']
srf169 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-5-1'].surfaces['side']
srf170 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-6-1'].surfaces['side']
srf171 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-7-1'].surfaces['side']
srf172 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-8-1'].surfaces['side']
srf173 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-9-1'].surfaces['side']
srf174 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-10-1'].surfaces['side']
srf175 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8-lin-11-1'].surfaces['side']
srf176 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-1-8'].surfaces['side']
srf177 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-2-1'].surfaces['side']
srf178 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-3-1'].surfaces['side']
srf179 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-4-1'].surfaces['side']
srf180 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-5-1'].surfaces['side']
srf181 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-6-1'].surfaces['side']
srf182 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-7-1'].surfaces['side']
srf183 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-8-1'].surfaces['side']
srf184 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-9-1'].surfaces['side']
srf185 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-10-1'].surfaces['side']
srf186 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2-lin-11-1'].surfaces['side']
srf187 = mdb.models['Model-1'].rootAssembly.allInstances['Block-2'].surfaces['side']
srf188 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-2-1'].surfaces['Side']
srf189 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-3-1'].surfaces['Side']
srf190 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-4-1'].surfaces['Side']
srf191 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-5-1'].surfaces['Side']
srf192 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-6-1'].surfaces['Side']
srf193 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-7-1'].surfaces['Side']
srf194 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-8-1'].surfaces['Side']
srf195 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-9-1'].surfaces['Side']
srf196 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-10-1'].surfaces['Side']
srf197 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2-lin-11-1'].surfaces['Side']
srf198 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-1-2'].surfaces['Side']
srf199 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-2-1'].surfaces['Side']
srf200 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-3-1'].surfaces['Side']
srf201 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-4-1'].surfaces['Side']
srf202 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-5-1'].surfaces['Side']
srf203 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-6-1'].surfaces['Side']
srf204 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-7-1'].surfaces['Side']
srf205 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-8-1'].surfaces['Side']
srf206 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-9-1'].surfaces['Side']
srf207 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-10-1'].surfaces['Side']
srf208 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1-lin-11-1'].surfaces['Side']
srf209 = mdb.models['Model-1'].rootAssembly.allInstances['HalfBlock-1'].surfaces['Side']
leaf = dgm.LeafFromMeshSurfaceSets(surfaceSets=(srf1, srf2, srf3, srf4, srf5, 
    srf6, srf7, srf8, srf9, srf10, srf11, srf12, srf13, srf14, srf15, srf16, 
    srf17, srf18, srf19, srf20, srf21, srf22, srf23, srf24, srf25, srf26, 
    srf27, srf28, srf29, srf30, srf31, srf32, srf33, srf34, srf35, srf36, 
    srf37, srf38, srf39, srf40, srf41, srf42, srf43, srf44, srf45, srf46, 
    srf47, srf48, srf49, srf50, srf51, srf52, srf53, srf54, srf55, srf56, 
    srf57, srf58, srf59, srf60, srf61, srf62, srf63, srf64, srf65, srf66, 
    srf67, srf68, srf69, srf70, srf71, srf72, srf73, srf74, srf75, srf76, 
    srf77, srf78, srf79, srf80, srf81, srf82, srf83, srf84, srf85, srf86, 
    srf87, srf88, srf89, srf90, srf91, srf92, srf93, srf94, srf95, srf96, 
    srf97, srf98, srf99, srf100, srf101, srf102, srf103, srf104, srf105, 
    srf106, srf107, srf108, srf109, srf110, srf111, srf112, srf113, srf114, 
    srf115, srf116, srf117, srf118, srf119, srf120, srf121, srf122, srf123, 
    srf124, srf125, srf126, srf127, srf128, srf129, srf130, srf131, srf132, 
    srf133, srf134, srf135, srf136, srf137, srf138, srf139, srf140, srf141, 
    srf142, srf143, srf144, srf145, srf146, srf147, srf148, srf149, srf150, 
    srf151, srf152, srf153, srf154, srf155, srf156, srf157, srf158, srf159, 
    srf160, srf161, srf162, srf163, srf164, srf165, srf166, srf167, srf168, 
    srf169, srf170, srf171, srf172, srf173, srf174, srf175, srf176, srf177, 
    srf178, srf179, srf180, srf181, srf182, srf183, srf184, srf185, srf186, 
    srf187, srf188, srf189, srf190, srf191, srf192, srf193, srf194, srf195, 
    srf196, srf197, srf198, srf199, srf200, srf201, srf202, srf203, srf204, 
    srf205, srf206, srf207, srf208, srf209, ))
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=60.5166, 
    farPlane=77.0094, width=35.8853, height=13.1039, cameraPosition=(60.7565, 
    42.0389, 33.1322), cameraTarget=(20.6107, 1.89305, -7.01372))
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.setValues(session.views['Top'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=21.0078, 
    farPlane=27.6547, width=20.2866, height=7.40784, cameraPosition=(17.2077, 
    27.9994, -1.1976), cameraTarget=(17.2077, 3.6681, -1.1976))
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.setValues(session.views['Top'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=21.1199, 
    farPlane=27.5426, width=18.7837, height=6.85904, cameraPosition=(18.7944, 
    27.9994, -1.29356), cameraTarget=(18.7944, 3.6681, -1.29356))
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(cameraUpVector=(0.0548789, 
    0.998493, 0))
session.viewports['Viewport: 1'].view.setValues(nearPlane=20.0694, 
    farPlane=28.5931, cameraPosition=(20.1172, 4.08923, 21.4155), 
    cameraUpVector=(0.0967856, 0.99467, -0.035559), cameraTarget=(15.6585, 
    3.6681, -2.5))
session.viewports['Viewport: 1'].view.setValues(nearPlane=17.6259, 
    farPlane=31.0365, cameraPosition=(39.0057, -0.967635, 2.54258), 
    cameraUpVector=(0.205661, 0.977137, -0.0539123), cameraTarget=(15.6585, 
    3.6681, -2.50002))
session.viewports['Viewport: 1'].view.setValues(nearPlane=17.9716, 
    farPlane=30.6908, cameraPosition=(39.8311, 1.50805, -0.759085), 
    cameraUpVector=(0.0943261, 0.992456, -0.0783215), cameraTarget=(15.6585, 
    3.6681, -2.50002))
session.viewports['Viewport: 1'].view.setValues(nearPlane=17.5401, 
    farPlane=31.1224, cameraPosition=(38.5311, -0.836845, 4.46846), 
    cameraUpVector=(0.211831, 0.97515, -0.0648826), cameraTarget=(15.6585, 
    3.6681, -2.50003))
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
a = mdb.models['Model-1'].rootAssembly
s1 = a.instances['HalfBlock-1'].faces
side1Faces1 = s1.getSequenceFromMask(mask=('[#e ]', ), )
s2 = a.instances['Block-2'].faces
side1Faces2 = s2.getSequenceFromMask(mask=('[#f ]', ), )
s3 = a.instances['Block-2-lin-1-2'].faces
side1Faces3 = s3.getSequenceFromMask(mask=('[#f ]', ), )
s4 = a.instances['Block-2-lin-1-3'].faces
side1Faces4 = s4.getSequenceFromMask(mask=('[#f ]', ), )
s5 = a.instances['Block-2-lin-1-4'].faces
side1Faces5 = s5.getSequenceFromMask(mask=('[#f ]', ), )
s6 = a.instances['Block-2-lin-1-5'].faces
side1Faces6 = s6.getSequenceFromMask(mask=('[#f ]', ), )
s7 = a.instances['Block-2-lin-1-6'].faces
side1Faces7 = s7.getSequenceFromMask(mask=('[#f ]', ), )
s8 = a.instances['Block-2-lin-1-7'].faces
side1Faces8 = s8.getSequenceFromMask(mask=('[#f ]', ), )
s9 = a.instances['Block-2-lin-1-8'].faces
side1Faces9 = s9.getSequenceFromMask(mask=('[#f ]', ), )
s10 = a.instances['HalfBlock-1-lin-1-2'].faces
side1Faces10 = s10.getSequenceFromMask(mask=('[#b ]', ), )
s11 = a.instances['Block-2-lin-1-8-lin-2-1'].faces
side1Faces11 = s11.getSequenceFromMask(mask=('[#b ]', ), )
s12 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-2'].faces
side1Faces12 = s12.getSequenceFromMask(mask=('[#f ]', ), )
s13 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-3'].faces
side1Faces13 = s13.getSequenceFromMask(mask=('[#f ]', ), )
s14 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-4'].faces
side1Faces14 = s14.getSequenceFromMask(mask=('[#f ]', ), )
s15 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-5'].faces
side1Faces15 = s15.getSequenceFromMask(mask=('[#f ]', ), )
s16 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-6'].faces
side1Faces16 = s16.getSequenceFromMask(mask=('[#f ]', ), )
s17 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-7'].faces
side1Faces17 = s17.getSequenceFromMask(mask=('[#f ]', ), )
s18 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-8'].faces
side1Faces18 = s18.getSequenceFromMask(mask=('[#f ]', ), )
s19 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-9'].faces
side1Faces19 = s19.getSequenceFromMask(mask=('[#e ]', ), )
s20 = a.instances['HalfBlock-1-lin-2-1'].faces
side1Faces20 = s20.getSequenceFromMask(mask=('[#e ]', ), )
s21 = a.instances['HalfBlock-1-lin-3-1'].faces
side1Faces21 = s21.getSequenceFromMask(mask=('[#e ]', ), )
s22 = a.instances['HalfBlock-1-lin-4-1'].faces
side1Faces22 = s22.getSequenceFromMask(mask=('[#e ]', ), )
s23 = a.instances['HalfBlock-1-lin-5-1'].faces
side1Faces23 = s23.getSequenceFromMask(mask=('[#e ]', ), )
s24 = a.instances['HalfBlock-1-lin-6-1'].faces
side1Faces24 = s24.getSequenceFromMask(mask=('[#e ]', ), )
s25 = a.instances['HalfBlock-1-lin-7-1'].faces
side1Faces25 = s25.getSequenceFromMask(mask=('[#e ]', ), )
s26 = a.instances['HalfBlock-1-lin-8-1'].faces
side1Faces26 = s26.getSequenceFromMask(mask=('[#e ]', ), )
s27 = a.instances['HalfBlock-1-lin-9-1'].faces
side1Faces27 = s27.getSequenceFromMask(mask=('[#e ]', ), )
s28 = a.instances['HalfBlock-1-lin-10-1'].faces
side1Faces28 = s28.getSequenceFromMask(mask=('[#e ]', ), )
s29 = a.instances['HalfBlock-1-lin-11-1'].faces
side1Faces29 = s29.getSequenceFromMask(mask=('[#e ]', ), )
s30 = a.instances['Block-2-lin-2-1'].faces
side1Faces30 = s30.getSequenceFromMask(mask=('[#f ]', ), )
s31 = a.instances['Block-2-lin-3-1'].faces
side1Faces31 = s31.getSequenceFromMask(mask=('[#f ]', ), )
s32 = a.instances['Block-2-lin-4-1'].faces
side1Faces32 = s32.getSequenceFromMask(mask=('[#f ]', ), )
s33 = a.instances['Block-2-lin-5-1'].faces
side1Faces33 = s33.getSequenceFromMask(mask=('[#f ]', ), )
s34 = a.instances['Block-2-lin-6-1'].faces
side1Faces34 = s34.getSequenceFromMask(mask=('[#f ]', ), )
s35 = a.instances['Block-2-lin-7-1'].faces
side1Faces35 = s35.getSequenceFromMask(mask=('[#f ]', ), )
s36 = a.instances['Block-2-lin-8-1'].faces
side1Faces36 = s36.getSequenceFromMask(mask=('[#f ]', ), )
s37 = a.instances['Block-2-lin-9-1'].faces
side1Faces37 = s37.getSequenceFromMask(mask=('[#f ]', ), )
s38 = a.instances['Block-2-lin-10-1'].faces
side1Faces38 = s38.getSequenceFromMask(mask=('[#f ]', ), )
s39 = a.instances['Block-2-lin-11-1'].faces
side1Faces39 = s39.getSequenceFromMask(mask=('[#f ]', ), )
s40 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-1'].faces
side1Faces40 = s40.getSequenceFromMask(mask=('[#f ]', ), )
s41 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-1'].faces
side1Faces41 = s41.getSequenceFromMask(mask=('[#f ]', ), )
s42 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-1'].faces
side1Faces42 = s42.getSequenceFromMask(mask=('[#f ]', ), )
s43 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-1'].faces
side1Faces43 = s43.getSequenceFromMask(mask=('[#f ]', ), )
s44 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-1'].faces
side1Faces44 = s44.getSequenceFromMask(mask=('[#f ]', ), )
s45 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-1'].faces
side1Faces45 = s45.getSequenceFromMask(mask=('[#f ]', ), )
s46 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-1'].faces
side1Faces46 = s46.getSequenceFromMask(mask=('[#f ]', ), )
s47 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-1'].faces
side1Faces47 = s47.getSequenceFromMask(mask=('[#f ]', ), )
s48 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-1'].faces
side1Faces48 = s48.getSequenceFromMask(mask=('[#f ]', ), )
s49 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-1'].faces
side1Faces49 = s49.getSequenceFromMask(mask=('[#f ]', ), )
s50 = a.instances['Block-2-lin-1-2-lin-2-1'].faces
side1Faces50 = s50.getSequenceFromMask(mask=('[#f ]', ), )
s51 = a.instances['Block-2-lin-1-2-lin-3-1'].faces
side1Faces51 = s51.getSequenceFromMask(mask=('[#f ]', ), )
s52 = a.instances['Block-2-lin-1-2-lin-4-1'].faces
side1Faces52 = s52.getSequenceFromMask(mask=('[#f ]', ), )
s53 = a.instances['Block-2-lin-1-2-lin-5-1'].faces
side1Faces53 = s53.getSequenceFromMask(mask=('[#f ]', ), )
s54 = a.instances['Block-2-lin-1-2-lin-6-1'].faces
side1Faces54 = s54.getSequenceFromMask(mask=('[#f ]', ), )
s55 = a.instances['Block-2-lin-1-2-lin-7-1'].faces
side1Faces55 = s55.getSequenceFromMask(mask=('[#f ]', ), )
s56 = a.instances['Block-2-lin-1-2-lin-8-1'].faces
side1Faces56 = s56.getSequenceFromMask(mask=('[#f ]', ), )
s57 = a.instances['Block-2-lin-1-2-lin-9-1'].faces
side1Faces57 = s57.getSequenceFromMask(mask=('[#f ]', ), )
s58 = a.instances['Block-2-lin-1-2-lin-10-1'].faces
side1Faces58 = s58.getSequenceFromMask(mask=('[#f ]', ), )
s59 = a.instances['Block-2-lin-1-2-lin-11-1'].faces
side1Faces59 = s59.getSequenceFromMask(mask=('[#f ]', ), )
s60 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-3'].faces
side1Faces60 = s60.getSequenceFromMask(mask=('[#f ]', ), )
s61 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-3'].faces
side1Faces61 = s61.getSequenceFromMask(mask=('[#f ]', ), )
s62 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-3'].faces
side1Faces62 = s62.getSequenceFromMask(mask=('[#f ]', ), )
s63 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-3'].faces
side1Faces63 = s63.getSequenceFromMask(mask=('[#f ]', ), )
s64 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-3'].faces
side1Faces64 = s64.getSequenceFromMask(mask=('[#f ]', ), )
s65 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-3'].faces
side1Faces65 = s65.getSequenceFromMask(mask=('[#f ]', ), )
s66 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-3'].faces
side1Faces66 = s66.getSequenceFromMask(mask=('[#f ]', ), )
s67 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-3'].faces
side1Faces67 = s67.getSequenceFromMask(mask=('[#f ]', ), )
s68 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-3'].faces
side1Faces68 = s68.getSequenceFromMask(mask=('[#f ]', ), )
s69 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-3'].faces
side1Faces69 = s69.getSequenceFromMask(mask=('[#f ]', ), )
s70 = a.instances['Block-2-lin-1-4-lin-2-1'].faces
side1Faces70 = s70.getSequenceFromMask(mask=('[#f ]', ), )
s71 = a.instances['Block-2-lin-1-4-lin-3-1'].faces
side1Faces71 = s71.getSequenceFromMask(mask=('[#f ]', ), )
s72 = a.instances['Block-2-lin-1-4-lin-4-1'].faces
side1Faces72 = s72.getSequenceFromMask(mask=('[#f ]', ), )
s73 = a.instances['Block-2-lin-1-4-lin-5-1'].faces
side1Faces73 = s73.getSequenceFromMask(mask=('[#f ]', ), )
s74 = a.instances['Block-2-lin-1-4-lin-6-1'].faces
side1Faces74 = s74.getSequenceFromMask(mask=('[#f ]', ), )
s75 = a.instances['Block-2-lin-1-4-lin-7-1'].faces
side1Faces75 = s75.getSequenceFromMask(mask=('[#f ]', ), )
s76 = a.instances['Block-2-lin-1-4-lin-8-1'].faces
side1Faces76 = s76.getSequenceFromMask(mask=('[#f ]', ), )
s77 = a.instances['Block-2-lin-1-4-lin-9-1'].faces
side1Faces77 = s77.getSequenceFromMask(mask=('[#f ]', ), )
s78 = a.instances['Block-2-lin-1-4-lin-10-1'].faces
side1Faces78 = s78.getSequenceFromMask(mask=('[#f ]', ), )
s79 = a.instances['Block-2-lin-1-4-lin-11-1'].faces
side1Faces79 = s79.getSequenceFromMask(mask=('[#f ]', ), )
s80 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-5'].faces
side1Faces80 = s80.getSequenceFromMask(mask=('[#f ]', ), )
s81 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-5'].faces
side1Faces81 = s81.getSequenceFromMask(mask=('[#f ]', ), )
s82 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-5'].faces
side1Faces82 = s82.getSequenceFromMask(mask=('[#f ]', ), )
s83 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-5'].faces
side1Faces83 = s83.getSequenceFromMask(mask=('[#f ]', ), )
s84 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-5'].faces
side1Faces84 = s84.getSequenceFromMask(mask=('[#f ]', ), )
s85 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-5'].faces
side1Faces85 = s85.getSequenceFromMask(mask=('[#f ]', ), )
s86 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-5'].faces
side1Faces86 = s86.getSequenceFromMask(mask=('[#f ]', ), )
s87 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-5'].faces
side1Faces87 = s87.getSequenceFromMask(mask=('[#f ]', ), )
s88 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-5'].faces
side1Faces88 = s88.getSequenceFromMask(mask=('[#f ]', ), )
s89 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-5'].faces
side1Faces89 = s89.getSequenceFromMask(mask=('[#f ]', ), )
s90 = a.instances['Block-2-lin-1-6-lin-2-1'].faces
side1Faces90 = s90.getSequenceFromMask(mask=('[#f ]', ), )
s91 = a.instances['Block-2-lin-1-6-lin-3-1'].faces
side1Faces91 = s91.getSequenceFromMask(mask=('[#f ]', ), )
s92 = a.instances['Block-2-lin-1-6-lin-4-1'].faces
side1Faces92 = s92.getSequenceFromMask(mask=('[#f ]', ), )
s93 = a.instances['Block-2-lin-1-6-lin-5-1'].faces
side1Faces93 = s93.getSequenceFromMask(mask=('[#f ]', ), )
s94 = a.instances['Block-2-lin-1-6-lin-6-1'].faces
side1Faces94 = s94.getSequenceFromMask(mask=('[#f ]', ), )
s95 = a.instances['Block-2-lin-1-6-lin-7-1'].faces
side1Faces95 = s95.getSequenceFromMask(mask=('[#f ]', ), )
s96 = a.instances['Block-2-lin-1-6-lin-8-1'].faces
side1Faces96 = s96.getSequenceFromMask(mask=('[#f ]', ), )
s97 = a.instances['Block-2-lin-1-6-lin-9-1'].faces
side1Faces97 = s97.getSequenceFromMask(mask=('[#f ]', ), )
s98 = a.instances['Block-2-lin-1-6-lin-10-1'].faces
side1Faces98 = s98.getSequenceFromMask(mask=('[#f ]', ), )
s99 = a.instances['Block-2-lin-1-6-lin-11-1'].faces
side1Faces99 = s99.getSequenceFromMask(mask=('[#f ]', ), )
s100 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-7'].faces
side1Faces100 = s100.getSequenceFromMask(mask=('[#f ]', ), )
s101 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-7'].faces
side1Faces101 = s101.getSequenceFromMask(mask=('[#f ]', ), )
s102 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-7'].faces
side1Faces102 = s102.getSequenceFromMask(mask=('[#f ]', ), )
s103 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-7'].faces
side1Faces103 = s103.getSequenceFromMask(mask=('[#f ]', ), )
s104 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-7'].faces
side1Faces104 = s104.getSequenceFromMask(mask=('[#f ]', ), )
s105 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-7'].faces
side1Faces105 = s105.getSequenceFromMask(mask=('[#f ]', ), )
s106 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-7'].faces
side1Faces106 = s106.getSequenceFromMask(mask=('[#f ]', ), )
s107 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-7'].faces
side1Faces107 = s107.getSequenceFromMask(mask=('[#f ]', ), )
s108 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-7'].faces
side1Faces108 = s108.getSequenceFromMask(mask=('[#f ]', ), )
s109 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-7'].faces
side1Faces109 = s109.getSequenceFromMask(mask=('[#f ]', ), )
s110 = a.instances['Block-2-lin-1-8-lin-2-1-1'].faces
side1Faces110 = s110.getSequenceFromMask(mask=('[#f ]', ), )
s111 = a.instances['Block-2-lin-1-8-lin-3-1'].faces
side1Faces111 = s111.getSequenceFromMask(mask=('[#f ]', ), )
s112 = a.instances['Block-2-lin-1-8-lin-4-1'].faces
side1Faces112 = s112.getSequenceFromMask(mask=('[#f ]', ), )
s113 = a.instances['Block-2-lin-1-8-lin-5-1'].faces
side1Faces113 = s113.getSequenceFromMask(mask=('[#f ]', ), )
s114 = a.instances['Block-2-lin-1-8-lin-6-1'].faces
side1Faces114 = s114.getSequenceFromMask(mask=('[#f ]', ), )
s115 = a.instances['Block-2-lin-1-8-lin-7-1'].faces
side1Faces115 = s115.getSequenceFromMask(mask=('[#f ]', ), )
s116 = a.instances['Block-2-lin-1-8-lin-8-1'].faces
side1Faces116 = s116.getSequenceFromMask(mask=('[#f ]', ), )
s117 = a.instances['Block-2-lin-1-8-lin-9-1'].faces
side1Faces117 = s117.getSequenceFromMask(mask=('[#f ]', ), )
s118 = a.instances['Block-2-lin-1-8-lin-10-1'].faces
side1Faces118 = s118.getSequenceFromMask(mask=('[#f ]', ), )
s119 = a.instances['Block-2-lin-1-8-lin-11-1'].faces
side1Faces119 = s119.getSequenceFromMask(mask=('[#f ]', ), )
s120 = a.instances['HalfBlock-1-lin-1-2-lin-2-1'].faces
side1Faces120 = s120.getSequenceFromMask(mask=('[#b ]', ), )
s121 = a.instances['HalfBlock-1-lin-1-2-lin-3-1'].faces
side1Faces121 = s121.getSequenceFromMask(mask=('[#b ]', ), )
s122 = a.instances['HalfBlock-1-lin-1-2-lin-4-1'].faces
side1Faces122 = s122.getSequenceFromMask(mask=('[#b ]', ), )
s123 = a.instances['HalfBlock-1-lin-1-2-lin-5-1'].faces
side1Faces123 = s123.getSequenceFromMask(mask=('[#b ]', ), )
s124 = a.instances['HalfBlock-1-lin-1-2-lin-6-1'].faces
side1Faces124 = s124.getSequenceFromMask(mask=('[#b ]', ), )
s125 = a.instances['HalfBlock-1-lin-1-2-lin-7-1'].faces
side1Faces125 = s125.getSequenceFromMask(mask=('[#b ]', ), )
s126 = a.instances['HalfBlock-1-lin-1-2-lin-8-1'].faces
side1Faces126 = s126.getSequenceFromMask(mask=('[#b ]', ), )
s127 = a.instances['HalfBlock-1-lin-1-2-lin-9-1'].faces
side1Faces127 = s127.getSequenceFromMask(mask=('[#b ]', ), )
s128 = a.instances['HalfBlock-1-lin-1-2-lin-10-1'].faces
side1Faces128 = s128.getSequenceFromMask(mask=('[#b ]', ), )
s129 = a.instances['HalfBlock-1-lin-1-2-lin-11-1'].faces
side1Faces129 = s129.getSequenceFromMask(mask=('[#b ]', ), )
s130 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].faces
side1Faces130 = s130.getSequenceFromMask(mask=('[#e ]', ), )
s131 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].faces
side1Faces131 = s131.getSequenceFromMask(mask=('[#e ]', ), )
s132 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].faces
side1Faces132 = s132.getSequenceFromMask(mask=('[#e ]', ), )
s133 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].faces
side1Faces133 = s133.getSequenceFromMask(mask=('[#e ]', ), )
s134 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].faces
side1Faces134 = s134.getSequenceFromMask(mask=('[#e ]', ), )
s135 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].faces
side1Faces135 = s135.getSequenceFromMask(mask=('[#e ]', ), )
s136 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].faces
side1Faces136 = s136.getSequenceFromMask(mask=('[#e ]', ), )
s137 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].faces
side1Faces137 = s137.getSequenceFromMask(mask=('[#e ]', ), )
s138 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].faces
side1Faces138 = s138.getSequenceFromMask(mask=('[#e ]', ), )
s139 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].faces
side1Faces139 = s139.getSequenceFromMask(mask=('[#e ]', ), )
s140 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-2'].faces
side1Faces140 = s140.getSequenceFromMask(mask=('[#f ]', ), )
s141 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-2'].faces
side1Faces141 = s141.getSequenceFromMask(mask=('[#f ]', ), )
s142 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-2'].faces
side1Faces142 = s142.getSequenceFromMask(mask=('[#f ]', ), )
s143 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-2'].faces
side1Faces143 = s143.getSequenceFromMask(mask=('[#f ]', ), )
s144 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-2'].faces
side1Faces144 = s144.getSequenceFromMask(mask=('[#f ]', ), )
s145 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-2'].faces
side1Faces145 = s145.getSequenceFromMask(mask=('[#f ]', ), )
s146 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-2'].faces
side1Faces146 = s146.getSequenceFromMask(mask=('[#f ]', ), )
s147 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-2'].faces
side1Faces147 = s147.getSequenceFromMask(mask=('[#f ]', ), )
s148 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-2'].faces
side1Faces148 = s148.getSequenceFromMask(mask=('[#f ]', ), )
s149 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-2'].faces
side1Faces149 = s149.getSequenceFromMask(mask=('[#f ]', ), )
s150 = a.instances['Block-2-lin-1-3-lin-2-1'].faces
side1Faces150 = s150.getSequenceFromMask(mask=('[#f ]', ), )
s151 = a.instances['Block-2-lin-1-3-lin-3-1'].faces
side1Faces151 = s151.getSequenceFromMask(mask=('[#f ]', ), )
s152 = a.instances['Block-2-lin-1-3-lin-4-1'].faces
side1Faces152 = s152.getSequenceFromMask(mask=('[#f ]', ), )
s153 = a.instances['Block-2-lin-1-3-lin-5-1'].faces
side1Faces153 = s153.getSequenceFromMask(mask=('[#f ]', ), )
s154 = a.instances['Block-2-lin-1-3-lin-6-1'].faces
side1Faces154 = s154.getSequenceFromMask(mask=('[#f ]', ), )
s155 = a.instances['Block-2-lin-1-3-lin-7-1'].faces
side1Faces155 = s155.getSequenceFromMask(mask=('[#f ]', ), )
s156 = a.instances['Block-2-lin-1-3-lin-8-1'].faces
side1Faces156 = s156.getSequenceFromMask(mask=('[#f ]', ), )
s157 = a.instances['Block-2-lin-1-3-lin-9-1'].faces
side1Faces157 = s157.getSequenceFromMask(mask=('[#f ]', ), )
s158 = a.instances['Block-2-lin-1-3-lin-10-1'].faces
side1Faces158 = s158.getSequenceFromMask(mask=('[#f ]', ), )
s159 = a.instances['Block-2-lin-1-3-lin-11-1'].faces
side1Faces159 = s159.getSequenceFromMask(mask=('[#f ]', ), )
s160 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-4'].faces
side1Faces160 = s160.getSequenceFromMask(mask=('[#f ]', ), )
s161 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-4'].faces
side1Faces161 = s161.getSequenceFromMask(mask=('[#f ]', ), )
s162 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-4'].faces
side1Faces162 = s162.getSequenceFromMask(mask=('[#f ]', ), )
s163 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-4'].faces
side1Faces163 = s163.getSequenceFromMask(mask=('[#f ]', ), )
s164 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-4'].faces
side1Faces164 = s164.getSequenceFromMask(mask=('[#f ]', ), )
s165 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-4'].faces
side1Faces165 = s165.getSequenceFromMask(mask=('[#f ]', ), )
s166 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-4'].faces
side1Faces166 = s166.getSequenceFromMask(mask=('[#f ]', ), )
s167 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-4'].faces
side1Faces167 = s167.getSequenceFromMask(mask=('[#f ]', ), )
s168 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-4'].faces
side1Faces168 = s168.getSequenceFromMask(mask=('[#f ]', ), )
s169 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-4'].faces
side1Faces169 = s169.getSequenceFromMask(mask=('[#f ]', ), )
s170 = a.instances['Block-2-lin-1-8-lin-2-1-lin-2-1'].faces
side1Faces170 = s170.getSequenceFromMask(mask=('[#b ]', ), )
s171 = a.instances['Block-2-lin-1-8-lin-2-1-lin-3-1'].faces
side1Faces171 = s171.getSequenceFromMask(mask=('[#b ]', ), )
s172 = a.instances['Block-2-lin-1-8-lin-2-1-lin-4-1'].faces
side1Faces172 = s172.getSequenceFromMask(mask=('[#b ]', ), )
s173 = a.instances['Block-2-lin-1-8-lin-2-1-lin-5-1'].faces
side1Faces173 = s173.getSequenceFromMask(mask=('[#b ]', ), )
s174 = a.instances['Block-2-lin-1-8-lin-2-1-lin-6-1'].faces
side1Faces174 = s174.getSequenceFromMask(mask=('[#b ]', ), )
s175 = a.instances['Block-2-lin-1-8-lin-2-1-lin-7-1'].faces
side1Faces175 = s175.getSequenceFromMask(mask=('[#b ]', ), )
s176 = a.instances['Block-2-lin-1-8-lin-2-1-lin-8-1'].faces
side1Faces176 = s176.getSequenceFromMask(mask=('[#b ]', ), )
s177 = a.instances['Block-2-lin-1-8-lin-2-1-lin-9-1'].faces
side1Faces177 = s177.getSequenceFromMask(mask=('[#b ]', ), )
s178 = a.instances['Block-2-lin-1-8-lin-2-1-lin-10-1'].faces
side1Faces178 = s178.getSequenceFromMask(mask=('[#b ]', ), )
s179 = a.instances['Block-2-lin-1-8-lin-2-1-lin-11-1'].faces
side1Faces179 = s179.getSequenceFromMask(mask=('[#b ]', ), )
s180 = a.instances['Block-2-lin-1-5-lin-2-1'].faces
side1Faces180 = s180.getSequenceFromMask(mask=('[#f ]', ), )
s181 = a.instances['Block-2-lin-1-5-lin-3-1'].faces
side1Faces181 = s181.getSequenceFromMask(mask=('[#f ]', ), )
s182 = a.instances['Block-2-lin-1-5-lin-4-1'].faces
side1Faces182 = s182.getSequenceFromMask(mask=('[#f ]', ), )
s183 = a.instances['Block-2-lin-1-5-lin-5-1'].faces
side1Faces183 = s183.getSequenceFromMask(mask=('[#f ]', ), )
s184 = a.instances['Block-2-lin-1-5-lin-6-1'].faces
side1Faces184 = s184.getSequenceFromMask(mask=('[#f ]', ), )
s185 = a.instances['Block-2-lin-1-5-lin-7-1'].faces
side1Faces185 = s185.getSequenceFromMask(mask=('[#f ]', ), )
s186 = a.instances['Block-2-lin-1-5-lin-8-1'].faces
side1Faces186 = s186.getSequenceFromMask(mask=('[#f ]', ), )
s187 = a.instances['Block-2-lin-1-5-lin-9-1'].faces
side1Faces187 = s187.getSequenceFromMask(mask=('[#f ]', ), )
s188 = a.instances['Block-2-lin-1-5-lin-10-1'].faces
side1Faces188 = s188.getSequenceFromMask(mask=('[#f ]', ), )
s189 = a.instances['Block-2-lin-1-5-lin-11-1'].faces
side1Faces189 = s189.getSequenceFromMask(mask=('[#f ]', ), )
s190 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1-6'].faces
side1Faces190 = s190.getSequenceFromMask(mask=('[#f ]', ), )
s191 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1-6'].faces
side1Faces191 = s191.getSequenceFromMask(mask=('[#f ]', ), )
s192 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1-6'].faces
side1Faces192 = s192.getSequenceFromMask(mask=('[#f ]', ), )
s193 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1-6'].faces
side1Faces193 = s193.getSequenceFromMask(mask=('[#f ]', ), )
s194 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1-6'].faces
side1Faces194 = s194.getSequenceFromMask(mask=('[#f ]', ), )
s195 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1-6'].faces
side1Faces195 = s195.getSequenceFromMask(mask=('[#f ]', ), )
s196 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1-6'].faces
side1Faces196 = s196.getSequenceFromMask(mask=('[#f ]', ), )
s197 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1-6'].faces
side1Faces197 = s197.getSequenceFromMask(mask=('[#f ]', ), )
s198 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1-6'].faces
side1Faces198 = s198.getSequenceFromMask(mask=('[#f ]', ), )
s199 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1-6'].faces
side1Faces199 = s199.getSequenceFromMask(mask=('[#f ]', ), )
s200 = a.instances['Block-2-lin-1-7-lin-2-1'].faces
side1Faces200 = s200.getSequenceFromMask(mask=('[#f ]', ), )
s201 = a.instances['Block-2-lin-1-7-lin-3-1'].faces
side1Faces201 = s201.getSequenceFromMask(mask=('[#f ]', ), )
s202 = a.instances['Block-2-lin-1-7-lin-4-1'].faces
side1Faces202 = s202.getSequenceFromMask(mask=('[#f ]', ), )
s203 = a.instances['Block-2-lin-1-7-lin-5-1'].faces
side1Faces203 = s203.getSequenceFromMask(mask=('[#f ]', ), )
s204 = a.instances['Block-2-lin-1-7-lin-6-1'].faces
side1Faces204 = s204.getSequenceFromMask(mask=('[#f ]', ), )
s205 = a.instances['Block-2-lin-1-7-lin-7-1'].faces
side1Faces205 = s205.getSequenceFromMask(mask=('[#f ]', ), )
s206 = a.instances['Block-2-lin-1-7-lin-8-1'].faces
side1Faces206 = s206.getSequenceFromMask(mask=('[#f ]', ), )
s207 = a.instances['Block-2-lin-1-7-lin-9-1'].faces
side1Faces207 = s207.getSequenceFromMask(mask=('[#f ]', ), )
s208 = a.instances['Block-2-lin-1-7-lin-10-1'].faces
side1Faces208 = s208.getSequenceFromMask(mask=('[#f ]', ), )
s209 = a.instances['Block-2-lin-1-7-lin-11-1'].faces
side1Faces209 = s209.getSequenceFromMask(mask=('[#f ]', ), )
a.Surface(side1Faces=side1Faces1+side1Faces2+side1Faces3+side1Faces4+\
    side1Faces5+side1Faces6+side1Faces7+side1Faces8+side1Faces9+side1Faces10+\
    side1Faces11+side1Faces12+side1Faces13+side1Faces14+side1Faces15+\
    side1Faces16+side1Faces17+side1Faces18+side1Faces19+side1Faces20+\
    side1Faces21+side1Faces22+side1Faces23+side1Faces24+side1Faces25+\
    side1Faces26+side1Faces27+side1Faces28+side1Faces29+side1Faces30+\
    side1Faces31+side1Faces32+side1Faces33+side1Faces34+side1Faces35+\
    side1Faces36+side1Faces37+side1Faces38+side1Faces39+side1Faces40+\
    side1Faces41+side1Faces42+side1Faces43+side1Faces44+side1Faces45+\
    side1Faces46+side1Faces47+side1Faces48+side1Faces49+side1Faces50+\
    side1Faces51+side1Faces52+side1Faces53+side1Faces54+side1Faces55+\
    side1Faces56+side1Faces57+side1Faces58+side1Faces59+side1Faces60+\
    side1Faces61+side1Faces62+side1Faces63+side1Faces64+side1Faces65+\
    side1Faces66+side1Faces67+side1Faces68+side1Faces69+side1Faces70+\
    side1Faces71+side1Faces72+side1Faces73+side1Faces74+side1Faces75+\
    side1Faces76+side1Faces77+side1Faces78+side1Faces79+side1Faces80+\
    side1Faces81+side1Faces82+side1Faces83+side1Faces84+side1Faces85+\
    side1Faces86+side1Faces87+side1Faces88+side1Faces89+side1Faces90+\
    side1Faces91+side1Faces92+side1Faces93+side1Faces94+side1Faces95+\
    side1Faces96+side1Faces97+side1Faces98+side1Faces99+side1Faces100+\
    side1Faces101+side1Faces102+side1Faces103+side1Faces104+side1Faces105+\
    side1Faces106+side1Faces107+side1Faces108+side1Faces109+side1Faces110+\
    side1Faces111+side1Faces112+side1Faces113+side1Faces114+side1Faces115+\
    side1Faces116+side1Faces117+side1Faces118+side1Faces119+side1Faces120+\
    side1Faces121+side1Faces122+side1Faces123+side1Faces124+side1Faces125+\
    side1Faces126+side1Faces127+side1Faces128+side1Faces129+side1Faces130+\
    side1Faces131+side1Faces132+side1Faces133+side1Faces134+side1Faces135+\
    side1Faces136+side1Faces137+side1Faces138+side1Faces139+side1Faces140+\
    side1Faces141+side1Faces142+side1Faces143+side1Faces144+side1Faces145+\
    side1Faces146+side1Faces147+side1Faces148+side1Faces149+side1Faces150+\
    side1Faces151+side1Faces152+side1Faces153+side1Faces154+side1Faces155+\
    side1Faces156+side1Faces157+side1Faces158+side1Faces159+side1Faces160+\
    side1Faces161+side1Faces162+side1Faces163+side1Faces164+side1Faces165+\
    side1Faces166+side1Faces167+side1Faces168+side1Faces169+side1Faces170+\
    side1Faces171+side1Faces172+side1Faces173+side1Faces174+side1Faces175+\
    side1Faces176+side1Faces177+side1Faces178+side1Faces179+side1Faces180+\
    side1Faces181+side1Faces182+side1Faces183+side1Faces184+side1Faces185+\
    side1Faces186+side1Faces187+side1Faces188+side1Faces189+side1Faces190+\
    side1Faces191+side1Faces192+side1Faces193+side1Faces194+side1Faces195+\
    side1Faces196+side1Faces197+side1Faces198+side1Faces199+side1Faces200+\
    side1Faces201+side1Faces202+side1Faces203+side1Faces204+side1Faces205+\
    side1Faces206+side1Faces207+side1Faces208+side1Faces209, name='SIDE_MID')
#: The surface 'SIDE_MID' has been created (792 faces).
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=20.5196, 
    farPlane=28.1429, width=16.8753, height=6.16218, cameraPosition=(15.8898, 
    3.52071, 21.8313), cameraTarget=(15.8898, 3.52071, -2.5))
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(session.views['Front'])
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=17.13, 
    farPlane=31.5325, width=24.559, height=8.96796, cameraPosition=(30.1526, 
    17.5126, 11.3043), cameraTarget=(16.1049, 3.46499, -2.74331))
a = mdb.models['Model-1'].rootAssembly
s1 = a.instances['HalfBlock-1-lin-1-2'].faces
side1Faces1 = s1.getSequenceFromMask(mask=('[#4 ]', ), )
s2 = a.instances['Block-2-lin-1-8-lin-2-1'].faces
side1Faces2 = s2.getSequenceFromMask(mask=('[#4 ]', ), )
s3 = a.instances['HalfBlock-1-lin-1-2-lin-2-1'].faces
side1Faces3 = s3.getSequenceFromMask(mask=('[#4 ]', ), )
s4 = a.instances['Block-2-lin-1-8-lin-2-1-lin-2-1'].faces
side1Faces4 = s4.getSequenceFromMask(mask=('[#4 ]', ), )
s5 = a.instances['HalfBlock-1-lin-1-2-lin-3-1'].faces
side1Faces5 = s5.getSequenceFromMask(mask=('[#4 ]', ), )
s6 = a.instances['Block-2-lin-1-8-lin-2-1-lin-3-1'].faces
side1Faces6 = s6.getSequenceFromMask(mask=('[#4 ]', ), )
s7 = a.instances['HalfBlock-1-lin-1-2-lin-4-1'].faces
side1Faces7 = s7.getSequenceFromMask(mask=('[#4 ]', ), )
s8 = a.instances['Block-2-lin-1-8-lin-2-1-lin-4-1'].faces
side1Faces8 = s8.getSequenceFromMask(mask=('[#4 ]', ), )
s9 = a.instances['HalfBlock-1-lin-1-2-lin-5-1'].faces
side1Faces9 = s9.getSequenceFromMask(mask=('[#4 ]', ), )
s10 = a.instances['Block-2-lin-1-8-lin-2-1-lin-5-1'].faces
side1Faces10 = s10.getSequenceFromMask(mask=('[#4 ]', ), )
s11 = a.instances['HalfBlock-1-lin-1-2-lin-6-1'].faces
side1Faces11 = s11.getSequenceFromMask(mask=('[#4 ]', ), )
s12 = a.instances['Block-2-lin-1-8-lin-2-1-lin-6-1'].faces
side1Faces12 = s12.getSequenceFromMask(mask=('[#4 ]', ), )
s13 = a.instances['HalfBlock-1-lin-1-2-lin-7-1'].faces
side1Faces13 = s13.getSequenceFromMask(mask=('[#4 ]', ), )
s14 = a.instances['Block-2-lin-1-8-lin-2-1-lin-7-1'].faces
side1Faces14 = s14.getSequenceFromMask(mask=('[#4 ]', ), )
s15 = a.instances['HalfBlock-1-lin-1-2-lin-8-1'].faces
side1Faces15 = s15.getSequenceFromMask(mask=('[#4 ]', ), )
s16 = a.instances['Block-2-lin-1-8-lin-2-1-lin-8-1'].faces
side1Faces16 = s16.getSequenceFromMask(mask=('[#4 ]', ), )
s17 = a.instances['HalfBlock-1-lin-1-2-lin-9-1'].faces
side1Faces17 = s17.getSequenceFromMask(mask=('[#4 ]', ), )
s18 = a.instances['Block-2-lin-1-8-lin-2-1-lin-9-1'].faces
side1Faces18 = s18.getSequenceFromMask(mask=('[#4 ]', ), )
s19 = a.instances['HalfBlock-1-lin-1-2-lin-10-1'].faces
side1Faces19 = s19.getSequenceFromMask(mask=('[#4 ]', ), )
s20 = a.instances['Block-2-lin-1-8-lin-2-1-lin-10-1'].faces
side1Faces20 = s20.getSequenceFromMask(mask=('[#4 ]', ), )
s21 = a.instances['HalfBlock-1-lin-1-2-lin-11-1'].faces
side1Faces21 = s21.getSequenceFromMask(mask=('[#4 ]', ), )
s22 = a.instances['Block-2-lin-1-8-lin-2-1-lin-11-1'].faces
side1Faces22 = s22.getSequenceFromMask(mask=('[#4 ]', ), )
s23 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-11-1'].faces
side1Faces23 = s23.getSequenceFromMask(mask=('[#1 ]', ), )
s24 = a.instances['HalfBlock-1-lin-11-1'].faces
side1Faces24 = s24.getSequenceFromMask(mask=('[#1 ]', ), )
s25 = a.instances['Block-2-lin-1-8-lin-2-1-lin-lin-10-1'].faces
side1Faces25 = s25.getSequenceFromMask(mask=('[#1 ]', ), )
s26 = a.instances['HalfBlock-1-lin-10-1'].faces
side1Faces26 = s26.getSequenceFromMask(mask=('[#1 ]', ), )
s27 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-9-1'].faces
side1Faces27 = s27.getSequenceFromMask(mask=('[#1 ]', ), )
s28 = a.instances['HalfBlock-1-lin-9-1'].faces
side1Faces28 = s28.getSequenceFromMask(mask=('[#1 ]', ), )
s29 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-8-1'].faces
side1Faces29 = s29.getSequenceFromMask(mask=('[#1 ]', ), )
s30 = a.instances['HalfBlock-1-lin-8-1'].faces
side1Faces30 = s30.getSequenceFromMask(mask=('[#1 ]', ), )
s31 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-7-1'].faces
side1Faces31 = s31.getSequenceFromMask(mask=('[#1 ]', ), )
s32 = a.instances['HalfBlock-1-lin-7-1'].faces
side1Faces32 = s32.getSequenceFromMask(mask=('[#1 ]', ), )
s33 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-6-1'].faces
side1Faces33 = s33.getSequenceFromMask(mask=('[#1 ]', ), )
s34 = a.instances['HalfBlock-1-lin-6-1'].faces
side1Faces34 = s34.getSequenceFromMask(mask=('[#1 ]', ), )
s35 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-5-1'].faces
side1Faces35 = s35.getSequenceFromMask(mask=('[#1 ]', ), )
s36 = a.instances['HalfBlock-1-lin-5-1'].faces
side1Faces36 = s36.getSequenceFromMask(mask=('[#1 ]', ), )
s37 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-4-1'].faces
side1Faces37 = s37.getSequenceFromMask(mask=('[#1 ]', ), )
s38 = a.instances['HalfBlock-1-lin-4-1'].faces
side1Faces38 = s38.getSequenceFromMask(mask=('[#1 ]', ), )
s39 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-3-1'].faces
side1Faces39 = s39.getSequenceFromMask(mask=('[#1 ]', ), )
s40 = a.instances['HalfBlock-1-lin-3-1'].faces
side1Faces40 = s40.getSequenceFromMask(mask=('[#1 ]', ), )
s41 = a.instances['Block-2-lin-1-8-lin-2-1-lin--lin-2-1'].faces
side1Faces41 = s41.getSequenceFromMask(mask=('[#1 ]', ), )
s42 = a.instances['HalfBlock-1-lin-2-1'].faces
side1Faces42 = s42.getSequenceFromMask(mask=('[#1 ]', ), )
s43 = a.instances['Block-2-lin-1-8-lin-2-1-lin-1-9'].faces
side1Faces43 = s43.getSequenceFromMask(mask=('[#1 ]', ), )
s44 = a.instances['HalfBlock-1'].faces
side1Faces44 = s44.getSequenceFromMask(mask=('[#1 ]', ), )
a.Surface(side1Faces=side1Faces1+side1Faces2+side1Faces3+side1Faces4+\
    side1Faces5+side1Faces6+side1Faces7+side1Faces8+side1Faces9+side1Faces10+\
    side1Faces11+side1Faces12+side1Faces13+side1Faces14+side1Faces15+\
    side1Faces16+side1Faces17+side1Faces18+side1Faces19+side1Faces20+\
    side1Faces21+side1Faces22+side1Faces23+side1Faces24+side1Faces25+\
    side1Faces26+side1Faces27+side1Faces28+side1Faces29+side1Faces30+\
    side1Faces31+side1Faces32+side1Faces33+side1Faces34+side1Faces35+\
    side1Faces36+side1Faces37+side1Faces38+side1Faces39+side1Faces40+\
    side1Faces41+side1Faces42+side1Faces43+side1Faces44, name='SIDES_WALL')
#: The surface 'SIDES_WALL' has been created (44 faces).
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=ON, 
    constraints=ON, connectors=ON, engineeringFeatures=ON)
r11=mdb.models['Model-1'].rootAssembly.surfaces['SIDE_MID']
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    stepName='Loading', assignments=((r11, SELF, 'IntProp-1'), ))
p1 = mdb.models['Model-1'].parts['Block']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['Model-1'].parts['Block'].surfaces['side']
p1 = mdb.models['Model-1'].parts['HalfBlock']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
del mdb.models['Model-1'].parts['HalfBlock'].surfaces['Side']
a = mdb.models['Model-1'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
mdb.models['Model-1'].InteractionProperty(name='WALL', 
    objectToCopy=mdb.models['Model-1'].interactionProperties['BLOCK-FILTER'])
r11=mdb.models['Model-1'].rootAssembly.surfaces['SIDES_WALL']
r12=mdb.models['Model-1'].rootAssembly.instances['Wall-1-lin-1-2'].surfaces['Surf-Wall']
r21=mdb.models['Model-1'].rootAssembly.surfaces['SIDES_WALL']
r22=mdb.models['Model-1'].rootAssembly.instances['Wall-1'].surfaces['Surf-Wall']
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    stepName='Loading', assignments=((r11, r12, 'WALL'), (r21, r22, 'WALL')))
session.viewports['Viewport: 1'].view.setValues(nearPlane=14.7188, 
    farPlane=33.9437, width=54.9416, height=20.0625, cameraPosition=(26.8951, 
    19.6383, 12.4362), cameraTarget=(12.8475, 5.5906, -1.61146))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(interactions=OFF, 
    constraints=OFF, connectors=OFF, engineeringFeatures=OFF)
leaf = dgm.Leaf(leafType=DEFAULT_MODEL)
session.viewports['Viewport: 1'].assemblyDisplay.displayGroup.replace(
    leaf=leaf)
session.viewports['Viewport: 1'].view.setValues(nearPlane=5.87364, 
    farPlane=44.3323, width=63.1493, height=23.0596, cameraPosition=(36.2613, 
    17.5131, 5.1952), cameraTarget=(22.2136, 3.46546, -8.85246))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=8.83833, 
    farPlane=41.3676, width=22.0777, height=8.06187, cameraPosition=(34.3406, 
    17.5326, 7.09647), cameraTarget=(20.2929, 3.4849, -6.95119))
session.viewports['Viewport: 1'].view.setValues(nearPlane=9.23084, 
    farPlane=46.0866, cameraPosition=(39.9723, 14.3698, 2.44027), 
    cameraUpVector=(-0.616617, 0.688369, -0.38201), cameraTarget=(20.466, 
    3.38767, -7.09432))
session.viewports['Viewport: 1'].view.setValues(nearPlane=11.4832, 
    farPlane=48.9293, cameraPosition=(43.1332, 12.7176, -5.98428), 
    cameraUpVector=(-0.648956, 0.720901, -0.243224), cameraTarget=(20.8463, 
    3.1889, -8.10782))
session.viewports['Viewport: 1'].view.setValues(nearPlane=11.7551, 
    farPlane=48.6574, width=17.4761, height=6.38158, cameraPosition=(42.8751, 
    13.0583, -4.80367), cameraTarget=(20.5882, 3.52956, -6.92721))
a = mdb.models['Model-1'].rootAssembly
s1 = a.instances['Block-2-lin-1-4-lin-7-1'].faces
side1Faces1 = s1.getSequenceFromMask(mask=('[#10 ]', ), )
region = regionToolset.Region(side1Faces=side1Faces1)
mdb.models['Model-1'].Pressure(name='Pull Out test', createStepName='Loading', 
    region=region, distributionType=UNIFORM, field='', magnitude=10000.0, 
    amplitude=UNSET)
mdb.models['Model-1'].loads['Pull Out test'].setValues(magnitude=-10000.0)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
#: Job Job-2: Abaqus/Explicit completed successfully.
#: Job Job-2 completed successfully. 
o3 = session.openOdb(name='D:/tpennock/First delta flume/Job-2.odb')
#: Model: D:/tpennock/First delta flume/Job-2.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     212
#: Number of Meshes:             213
#: Number of Element Sets:       0
#: Number of Node Sets:          5
#: Number of Steps:              1
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].view.setValues(nearPlane=44.2008, 
    farPlane=75.6605, width=33.5151, height=12.2384, cameraPosition=(54.0641, 
    37.1281, 27.0607), cameraTarget=(19.4632, 2.52714, -7.5403))
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=NONE)
session.viewports['Viewport: 1'].animationController.setValues(
    animationType=TIME_HISTORY)
session.viewports['Viewport: 1'].animationController.play(duration=UNLIMITED)
session.viewports['Viewport: 1'].view.setValues(nearPlane=47.8748, 
    farPlane=81.9208, cameraPosition=(75.3824, 23.7908, -3.99245), 
    cameraUpVector=(-0.618365, 0.733687, -0.281654), cameraTarget=(19.4632, 
    2.52714, -7.5403))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.2532, 
    farPlane=80.5424, width=14.5498, height=5.31299, cameraPosition=(75.4389, 
    23.1107, -0.806424), cameraTarget=(19.5197, 1.84705, -4.35428))
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.1653, 
    farPlane=80.8918, cameraPosition=(77.9614, 15.3103, -5.77472), 
    cameraUpVector=(-0.54221, 0.808544, -0.228616), cameraTarget=(19.7127, 
    1.25003, -4.73454))
session.viewports['Viewport: 1'].view.setValues(nearPlane=50.0796, 
    farPlane=80.8164, cameraPosition=(77.6579, 16.5357, -5.46519), 
    cameraUpVector=(-0.556436, 0.797258, -0.234006), cameraTarget=(19.6868, 
    1.35471, -4.7081))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.1363, 
    farPlane=80.5142, cameraPosition=(75.0786, 23.8272, 0.428531), 
    cameraUpVector=(-0.649536, 0.75592, -0.0817789), cameraTarget=(19.4694, 
    1.96939, -4.21125))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.1363, 
    farPlane=80.5142, cameraPosition=(75.0786, 23.8272, 0.428531), 
    cameraUpVector=(-0.660445, 0.742308, 0.113096), cameraTarget=(19.4694, 
    1.96939, -4.21125))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.1363, 
    farPlane=80.5142, cameraPosition=(75.0786, 23.8272, 0.428531), 
    cameraUpVector=(-0.650824, 0.756206, -0.0676847), cameraTarget=(19.4694, 
    1.96939, -4.21125))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.1363, 
    farPlane=80.5142, cameraPosition=(75.0786, 23.8272, 0.428531), 
    cameraUpVector=(-0.654782, 0.755616, -0.017467), cameraTarget=(19.4694, 
    1.96939, -4.21125))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.3919, 
    farPlane=81.501, cameraPosition=(74.0888, 22.9523, -18.1506), 
    cameraUpVector=(-0.628616, 0.765644, 0.136497), cameraTarget=(19.3947, 
    1.90333, -5.61408))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.4575, 
    farPlane=80.5656, cameraPosition=(74.6505, 25.2466, -7.50638), 
    cameraUpVector=(-0.669873, 0.74073, 0.0508821), cameraTarget=(19.442, 
    2.0967, -4.71697))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.4981, 
    farPlane=80.3003, cameraPosition=(74.7327, 25.221, -3.71812), 
    cameraUpVector=(-0.671439, 0.740999, 0.00951507), cameraTarget=(19.4484, 
    2.0947, -4.4209))
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.6574, 
    farPlane=77.1912, cameraPosition=(56.7908, 49.5129, -8.96589), 
    cameraUpVector=(-0.93409, 0.356708, 0.0153322), cameraTarget=(18.0748, 
    3.95447, -4.82266))
session.viewports['Viewport: 1'].view.setValues(nearPlane=48.6603, 
    farPlane=78.1882, width=27.7729, height=10.1415, cameraPosition=(56.266, 
    49.8651, -9.99657), cameraTarget=(17.55, 4.3067, -5.85334))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
o3 = session.openOdb(name='D:/tpennock/First delta flume/Job-1.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['D:/tpennock/First delta flume/Job-1.odb'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=43.7774, 
    farPlane=70.5904, width=22.9381, height=8.37608, cameraPosition=(52.2266, 
    35.0017, 26.9172), cameraTarget=(19.2115, 1.9865, -6.09799))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
#: The job input file "Job-1.inp" has been submitted for analysis.
#: Job Job-1: Analysis Input File Processor completed successfully.
#: Job Job-1: Abaqus/Explicit Packager completed successfully.
session.viewports['Viewport: 1'].view.setValues(nearPlane=10.9985, 
    farPlane=49.4141, width=27.211, height=10.4279, cameraPosition=(43.2555, 
    12.2238, -5.05238), cameraTarget=(20.9686, 2.69506, -7.17591))
session.viewports['Viewport: 1'].view.setProjection(projection=PARALLEL)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
#: Job Job-1: Abaqus/Explicit completed successfully.
#: Job Job-1 completed successfully. 
